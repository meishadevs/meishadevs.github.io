{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/issues.PNG","path":"images/issues.PNG","modified":0,"renderable":0},{"_id":"source/images/logo.jpg","path":"images/logo.jpg","modified":0,"renderable":0},{"_id":"source/images/weixin.png","path":"images/weixin.png","modified":0,"renderable":0},{"_id":"source/images/zhifubao.png","path":"images/zhifubao.png","modified":0,"renderable":0},{"_id":"themes/raytaylorism/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/weixin_favicon.png","path":"weixin_favicon.png","modified":0,"renderable":1},{"_id":"source/images/crane.jpg","path":"images/crane.jpg","modified":0,"renderable":0},{"_id":"source/images/penguin.jpg","path":"images/penguin.jpg","modified":0,"renderable":0},{"_id":"themes/raytaylorism/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/js/prettify.js","path":"js/prettify.js","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/images/sea.jpg","path":"images/sea.jpg","modified":0,"renderable":0},{"_id":"themes/raytaylorism/source/css/images/side-user-cover.jpg","path":"css/images/side-user-cover.jpg","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/font-awesome.min.css","path":"css/lib/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/prettify-tomorrow-night-eighties.css","path":"css/lib/prettify-tomorrow-night-eighties.css","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/tranquil-heart.css","path":"css/lib/tranquil-heart.css","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/js/materialize.min.js","path":"js/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/materialize.min.css","path":"css/lib/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.eot","path":"css/font/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff","path":"css/font/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff2","path":"css/font/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.eot","path":"css/font/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff","path":"css/font/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff2","path":"css/font/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.eot","path":"css/font/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff","path":"css/font/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff2","path":"css/font/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.eot","path":"css/font/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff2","path":"css/font/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff","path":"css/font/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/FontAwesome.otf","path":"css/font/font-awesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.eot","path":"css/font/font-awesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff","path":"css/font/font-awesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff2","path":"css/font/font-awesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.ttf","path":"css/font/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.ttf","path":"css/font/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.ttf","path":"css/font/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.ttf","path":"css/font/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"source/images/boyaa.png","path":"images/boyaa.png","modified":0,"renderable":0},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.ttf","path":"css/font/font-awesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"source/images/goldminer.png","path":"images/goldminer.png","modified":0,"renderable":0},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.svg","path":"css/font/font-awesome/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"2da8323f8c8ccf2fa4de3a91eca4f56652250a36","modified":1530930220063},{"_id":"themes/raytaylorism/Gruntfile.js","hash":"f69b2e716f955c9d5a23ca1b75394098c1494858","modified":1530930220388},{"_id":"themes/raytaylorism/LICENSE","hash":"115cd028ae511ac9e3d30eb4933da38136a68513","modified":1530930221023},{"_id":"themes/raytaylorism/README.md","hash":"22e6879f7391381df4e70fe144ac53369327f907","modified":1530930221035},{"_id":"themes/raytaylorism/_config.yml","hash":"fee4aec492b86281c99690739b8c4f7322608fa7","modified":1530930221550},{"_id":"themes/raytaylorism/log.md","hash":"99d57a50f8f328d1a313b47bb636d0dc5656d813","modified":1530930221029},{"_id":"source/_data/about.json","hash":"12e8a33ff2f8e35a9dc9bcc509dcd3a4d69f79f9","modified":1530930220132},{"_id":"source/_data/hint.json","hash":"178fe345ea95511364ed70da86186cb834947993","modified":1530930220137},{"_id":"source/_data/link.json","hash":"bf99d32e8ac0416f3cbe2511ff0961d5d4c8fee6","modified":1530930220143},{"_id":"source/_data/reading.json","hash":"9265f4f8b33675be89f149284bd5c53043401fa2","modified":1530930220150},{"_id":"source/_data/slider.json","hash":"02f401249608d45f6deee39af54baf90cfb53b2b","modified":1530930220159},{"_id":"source/about/index.md","hash":"b0d0cdd41890fc1f93f27fdeb849da4366e234d9","modified":1530930220058},{"_id":"source/images/issues.PNG","hash":"faf8077f6a55496cf67bb4c09f107eb4a3b5a94b","modified":1530930220087},{"_id":"source/images/logo.jpg","hash":"82e8aa357128a319fd3832e8c07af29b5830c971","modified":1530930220091},{"_id":"source/images/weixin.png","hash":"42c98b2981d8cc7e7c2e8286ec8beb2cd023473d","modified":1530930220117},{"_id":"source/images/zhifubao.png","hash":"26f96b9b276d8de4f41445029cf755bf40d7fd2d","modified":1530930220121},{"_id":"source/reading/index.md","hash":"ab4ae4fad36f371f60b49973797a115423a784d4","modified":1530930220125},{"_id":"themes/raytaylorism/_data/about.json","hash":"ad37c7a373e24ba9fb26630b0e761cabb3431b90","modified":1530930221557},{"_id":"themes/raytaylorism/_data/hint.json","hash":"178fe345ea95511364ed70da86186cb834947993","modified":1530930221562},{"_id":"themes/raytaylorism/_data/reading.json","hash":"e8045e22b2d499a5d813320a8c2b1bccdbedd46d","modified":1530930221570},{"_id":"themes/raytaylorism/_data/link.json","hash":"b865125d0440e6717ee3d88d1b518a4ebdb32d61","modified":1530930221565},{"_id":"themes/raytaylorism/_data/slider.json","hash":"361373b57cfb5371027af42000bbaec4e03333a3","modified":1530930221576},{"_id":"themes/raytaylorism/languages/default.yml","hash":"3628e71f7fb22a3315f73c8226b82f56bcb14b21","modified":1530930220395},{"_id":"themes/raytaylorism/languages/zh-CN.yml","hash":"3399023e16b05696b83494a52044cfb44e8a39ec","modified":1530930220400},{"_id":"themes/raytaylorism/languages/zh-TW.yml","hash":"b514bfb6832c1f33269836fbceb6356ac846386c","modified":1530930220406},{"_id":"themes/raytaylorism/layout/about.ejs","hash":"599b3bb334b3f88b918e67f7a709287b8effee6d","modified":1530930220412},{"_id":"themes/raytaylorism/layout/archive.ejs","hash":"0a21af8903e95c6d8bb7554b089ac219e8708ad7","modified":1530930220453},{"_id":"themes/raytaylorism/layout/index.ejs","hash":"50c1e7dab5a065fd10dd3a28fdffa5e3d342de82","modified":1530930220460},{"_id":"themes/raytaylorism/layout/layout.ejs","hash":"43beb54ac81519cf5e88a3a1494649beeb856066","modified":1530930220470},{"_id":"themes/raytaylorism/layout/page.ejs","hash":"90441f114859ce63ef7c7d93d668dbe5939995c2","modified":1530930220478},{"_id":"themes/raytaylorism/layout/post.ejs","hash":"8e550fd95ef761909294ed3a4aa428ff0509fbf0","modified":1530930220483},{"_id":"themes/raytaylorism/layout/reading.ejs","hash":"8fa965aa0f11f356c9f5344770cc9fc615577a74","modified":1530930220489},{"_id":"themes/raytaylorism/layout/tag.ejs","hash":"42ecab14917abd40c0a38e6ab629f089352a24b1","modified":1530930220521},{"_id":"themes/raytaylorism/source/favicon.png","hash":"6fe505919c27f5010a60b365027b6c2e03f8a1b2","modified":1530930221440},{"_id":"themes/raytaylorism/source/weixin_favicon.png","hash":"4a8466bd7d8cf4753cab8fb68647b40b91a246ad","modified":1530930221548},{"_id":"source/_posts/Fireworks切图.md","hash":"a043c6bb42d596cf857ab8a8ec83aea5ede3c938","modified":1530930220165},{"_id":"source/_posts/Git中提交时发生冲突的解决方法.md","hash":"58d00787d8274a582d849c256a794bff38cdbf44","modified":1530930220171},{"_id":"source/_posts/Photoshop切图.md","hash":"fef0dce6d7ece61ff8a7730436e66917a16b8369","modified":1530930220201},{"_id":"source/_posts/GoJS爬坑之旅.md","hash":"83bcfb791117ab031a33bf1bddbe2e762bec9662","modified":1530930220179},{"_id":"source/_posts/SQL-Server数据库学习笔记.md","hash":"a3db48c46e5f7daf94653ebec3be517067fb8dd0","modified":1530930220208},{"_id":"source/_posts/idea中导入maven项目.md","hash":"25efdf2e0b4cfe61c25081f36866b9474d322b77","modified":1530930220194},{"_id":"source/_posts/《JavaScript高级程序设计》读书笔记.md","hash":"02f7ba02e8b8acae580e99616da225d41a3989e1","modified":1530930220217},{"_id":"source/_posts/一次有意义的前端面试总结.md","hash":"b7ac056f5f3bb6d2e6bfdba8c9e320269404d8f9","modified":1530930220244},{"_id":"source/_posts/一些常见的JavaScript兼容性写法.md","hash":"3e243b9374e067122a862eefd05b2ee044ad035e","modified":1530930220230},{"_id":"source/_posts/使用GitHub部署网站.md","hash":"4ade1c9220d56206f3d28ec8af5719b2b31221c0","modified":1530930220261},{"_id":"source/_posts/使用Gulp.md","hash":"020ecc7768adcb0393a123fe4952aee1c7a8ec81","modified":1530930220270},{"_id":"source/_posts/使用Less.md","hash":"cc48b922ea6828675ed2dfe15a2e08816d563d37","modified":1530930220281},{"_id":"source/_posts/使用NVM安装Node.js.md","hash":"f7fca74e74c72ccbee00af81ca566722b925ceb9","modified":1530930220292},{"_id":"source/_posts/使用Vue-js时遇到的问题及解决方法.md","hash":"ba448eddcf95d0bcc3da4459dc35f364f819e50e","modified":1530930220300},{"_id":"source/_posts/使用background-size引发的思考.md","hash":"7f6dd27c7f910bbe13ec9779af00c513cbabc3f4","modified":1530930220254},{"_id":"source/_posts/使用新浪云部署网站.md","hash":"ee5a1d301bb5504bd4561a602b6cd11f2ce38dd6","modified":1530930220311},{"_id":"source/_posts/几种清除浮动的方法.md","hash":"5c80529a810163aac2270a52f42d6003f99ccefc","modified":1530930220319},{"_id":"source/_posts/在手机上查看移动Web页.md","hash":"d1cb5a7443fe7c936ffc47de8b642146ba272fd5","modified":1530930220326},{"_id":"source/_posts/常用的Git命令.md","hash":"3fa8dd3b6b7ebbb16200cc861b8e7a6c247959cf","modified":1530930220333},{"_id":"source/_posts/常用的正则表达式.md","hash":"1f89fdffbb6d6bea38057b9ad59da3bc5f434a51","modified":1530930220339},{"_id":"source/_posts/常见的CSS样式兼容性写法.md","hash":"0dafefbfc6e9978b90d021923e9e121f6ef27387","modified":1530930220345},{"_id":"source/_posts/常见的WebStrom使用技巧.md","hash":"df57ec138f7e94b687ab7c4e383b1e9dccdf9a55","modified":1531216349336},{"_id":"source/_posts/平时遇到的前端笔试题和面试题.md","hash":"b133bb739a00e41fa801f32ed567af5f62b8639b","modified":1530930220358},{"_id":"source/_posts/数据库中的视图简介.md","hash":"0b5b7098d492698cedc101a7551ddad2709509f7","modified":1531229249396},{"_id":"source/_posts/开发中的一些小知识点.md","hash":"723bb13de947a8b29fb16f995567f028749d003a","modified":1530930220372},{"_id":"source/_posts/移动Web学习笔记.md","hash":"02b4de17ca65a68bbbcb97942c4c2304679f99fe","modified":1530930220380},{"_id":"source/images/crane.jpg","hash":"663eba84d187d6ecfe98e476694fec2ff343a65e","modified":1530930220077},{"_id":"source/images/penguin.jpg","hash":"b8bf241641b3229851ab5a7e847c5e3b4df865c4","modified":1530930220099},{"_id":"themes/raytaylorism/_md/about/index.md","hash":"e968783b80dffcfb0966bf6425bc263602375380","modified":1530930221584},{"_id":"themes/raytaylorism/_md/reading/index.md","hash":"ab4ae4fad36f371f60b49973797a115423a784d4","modified":1530930221590},{"_id":"themes/raytaylorism/layout/_partial/after_footer.ejs","hash":"9fafc2cb14cbca89e48335d64ab058b5f256a36e","modified":1530930220528},{"_id":"themes/raytaylorism/layout/_partial/archive_title.ejs","hash":"dfc6c670702e64abce5fd87e3e2ea43c966ace32","modified":1530930220578},{"_id":"themes/raytaylorism/layout/_partial/article.ejs","hash":"cb0445571d07ef2df5d33b7aeaee8b9f6a4764b7","modified":1530930220590},{"_id":"themes/raytaylorism/layout/_partial/construction.ejs","hash":"21190b5a0d567ed4ea5d5289459690b72c1452f0","modified":1530930220600},{"_id":"themes/raytaylorism/layout/_partial/archive.ejs","hash":"68c7db951ffb5323d49d4de74e3b0de7f70fb4c3","modified":1530930220540},{"_id":"themes/raytaylorism/layout/_partial/feature_guide.ejs","hash":"7aefb6bdc65d1e6113cb83190fcd2f29af2c9125","modified":1530930220607},{"_id":"themes/raytaylorism/layout/_partial/float.ejs","hash":"bba2781f42cd8ea0895749377e6f2cce69cadb6a","modified":1530930220623},{"_id":"themes/raytaylorism/layout/_partial/footer.ejs","hash":"24885dc1d579db3615cabcb0675b55bd16a0961f","modified":1530930220628},{"_id":"themes/raytaylorism/layout/_partial/head.ejs","hash":"7ceea72401426588cd7778f92585ab9487b463da","modified":1530930220646},{"_id":"themes/raytaylorism/layout/_partial/header.ejs","hash":"0616dd744262dd4cc98cd1cabe959643c845141f","modified":1530930220665},{"_id":"themes/raytaylorism/layout/_partial/pagenav.ejs","hash":"e7ada8faaee878ea4dde267d1b420bb45421670d","modified":1530930220683},{"_id":"themes/raytaylorism/layout/_partial/menu_drawer.ejs","hash":"028ecbf59089cc4d1907a2d91d8da937f92d321c","modified":1530930220678},{"_id":"themes/raytaylorism/layout/_partial/pagination.ejs","hash":"00de7746cf4ef8c4b67a72e825e5ff236f9d5814","modified":1530930220688},{"_id":"themes/raytaylorism/layout/_partial/search.ejs","hash":"0eca40de0d39c1ae52040fcb8c9d7f79afce35dc","modified":1530930220891},{"_id":"themes/raytaylorism/layout/_partial/side_nav.ejs","hash":"c69c45de069c348bf3906f1bd941920887a85c98","modified":1530930220896},{"_id":"themes/raytaylorism/layout/_partial/simple_article.ejs","hash":"6480e101b2f29dddd661410c56516c767d88b79f","modified":1530930220923},{"_id":"themes/raytaylorism/layout/_partial/slider.ejs","hash":"bb7b53f6ca9c852808d955fb074f88112e51ea59","modified":1530930220931},{"_id":"themes/raytaylorism/layout/_widget/blogroll.ejs","hash":"1a6808fa62906e7fb1fac3e16208fa6b1fc8d0ea","modified":1530930220939},{"_id":"themes/raytaylorism/layout/_widget/category.ejs","hash":"95292eb643be63d98f08e28f759c9b01bbfcb9b8","modified":1530930220957},{"_id":"themes/raytaylorism/layout/_widget/recent_posts.ejs","hash":"935bfacce10a726eed6cd82fe39d2c6f9cce9e2a","modified":1530930220985},{"_id":"themes/raytaylorism/layout/_widget/tag.ejs","hash":"90e0ba4412285903420ee3b43125a56743edf0c6","modified":1530930220997},{"_id":"themes/raytaylorism/layout/_widget/tagcloud.ejs","hash":"f256f028c247bdcb7927351df89f2284c64b7b6c","modified":1530930221013},{"_id":"themes/raytaylorism/source/css/style.styl","hash":"a05bcd2543b7bdcd3f725db6d053cd76ccf154be","modified":1530930221314},{"_id":"themes/raytaylorism/source/js/prettify.js","hash":"d592e6f771c2955cea3764d819221b91bc343961","modified":1530930221520},{"_id":"themes/raytaylorism/source/js/jquery.min.js","hash":"f694238d616f579a0690001f37984af430c19963","modified":1530930221445},{"_id":"themes/raytaylorism/layout/_partial/plugin/analytics.ejs","hash":"b7dbd8342866929e683e9b013caa7324547ff704","modified":1530930220705},{"_id":"themes/raytaylorism/layout/_partial/plugin/comment.ejs","hash":"53991491539c8d63cf3aff581c5969ad0e2cff9f","modified":1530930220717},{"_id":"themes/raytaylorism/layout/_partial/plugin/comment副本.ejs","hash":"edba2a2d2e23c9fac499f64bef252e4aa8357318","modified":1530930220732},{"_id":"themes/raytaylorism/layout/_partial/plugin/google_code_prettify.ejs","hash":"336f01048440f0c9f7b75f24aafcc3a1ffefd9a0","modified":1530930220762},{"_id":"themes/raytaylorism/layout/_partial/plugin/main_javascript.ejs","hash":"6629eec982aa789767b83e80af12fa40189ac344","modified":1530930220772},{"_id":"themes/raytaylorism/layout/_partial/plugin/mathjax.ejs","hash":"6f6b85a5876ae150d3e5f08e384aff68652c0335","modified":1530930220795},{"_id":"themes/raytaylorism/layout/_partial/plugin/reward.ejs","hash":"284ab1d5cb4f43eb23b6d7a8aba2477b34abdc00","modified":1530930220811},{"_id":"themes/raytaylorism/layout/_partial/plugin/noscript.ejs","hash":"182650c8be93b093997ac4d5fe14af2f835b98d9","modified":1530930220805},{"_id":"themes/raytaylorism/layout/_partial/post/category.ejs","hash":"e17f452079201bd2a5a37bc76b51b132afd04faa","modified":1530930220825},{"_id":"themes/raytaylorism/layout/_partial/post/gallery.ejs","hash":"bd2285802766572736663e61852eb49f6acc744f","modified":1530930220837},{"_id":"themes/raytaylorism/layout/_partial/post/prevnext.ejs","hash":"6556eea4fb351639006c16e9831fd72ab46076ba","modified":1530930220845},{"_id":"themes/raytaylorism/layout/_partial/post/readtimes.ejs","hash":"c829d0598f9906f663a8ace1c86f2aa6024d642c","modified":1530930220851},{"_id":"themes/raytaylorism/layout/_partial/post/tablecontents.ejs","hash":"585ea42410648f193184931864a64b41635af956","modified":1530930220856},{"_id":"themes/raytaylorism/layout/_partial/post/tag.ejs","hash":"0f84c1aded9ba1887566d34e7f0d696c015295f0","modified":1530930220861},{"_id":"themes/raytaylorism/layout/_partial/post/time.ejs","hash":"42210d6b5a132f5c18352dcff2983d3fdbe26956","modified":1530930220873},{"_id":"themes/raytaylorism/layout/_partial/post/title.ejs","hash":"f0733a134b375172a2cec830d7d09bdba33891fe","modified":1530930220883},{"_id":"themes/raytaylorism/source/css/_base/icons.css","hash":"ab167f1694ffe10c3c51d18a633efd41be121555","modified":1530930221322},{"_id":"themes/raytaylorism/source/css/_base/layout.styl","hash":"b2f718418de61946504a3f8bf28b75be165913a7","modified":1530930221327},{"_id":"themes/raytaylorism/source/css/_base/lib_customize.styl","hash":"e4946dec16d0e96e6f2067a09c275ea84c0b3146","modified":1530930221333},{"_id":"themes/raytaylorism/source/css/_base/variable.styl","hash":"ce4e056d1bbfb80734d98a6898950e7c0136edf4","modified":1530930221341},{"_id":"themes/raytaylorism/source/css/_partial/about.styl","hash":"def183d6908ebcbd59341b09e9f7e06dc277b9ca","modified":1530930221349},{"_id":"themes/raytaylorism/source/css/_partial/archive.styl","hash":"4d48566e9f72b8eac8875b6985885418f56fbafa","modified":1530930221357},{"_id":"themes/raytaylorism/source/css/_partial/article.styl","hash":"293e38a8ab9aee346cc8e52421f1519c5a46a667","modified":1530930221362},{"_id":"themes/raytaylorism/source/css/_partial/comment.styl","hash":"590f1386581181ab588be06e4189861f5a209467","modified":1530930221369},{"_id":"themes/raytaylorism/source/css/_partial/header.styl","hash":"ebfd0155cda8a0876c36595708f02c294a7c82a0","modified":1530930221379},{"_id":"themes/raytaylorism/source/css/_partial/footer.styl","hash":"345e2147c1cec1bf24ab7338a8c929d6716fd730","modified":1530930221374},{"_id":"themes/raytaylorism/source/css/_partial/index.styl","hash":"ac83523dd14a1fc1fe55f98c84ed84cb03be864b","modified":1530930221384},{"_id":"themes/raytaylorism/source/css/_partial/link_context.styl","hash":"5b23db4dee53cbbe9eef257f4a542823100fde72","modified":1530930221390},{"_id":"themes/raytaylorism/source/css/_partial/other.styl","hash":"32bf499037a45ad2e0007a9ab3054067adc02506","modified":1530930221395},{"_id":"themes/raytaylorism/source/css/_partial/reading.styl","hash":"f81929fa12212465b02456d0bb3b8263355e3281","modified":1530930221403},{"_id":"themes/raytaylorism/source/css/_partial/search.styl","hash":"f9ca6f5626c795ae73ff7412ff58207b62fd64ac","modified":1530930221408},{"_id":"themes/raytaylorism/source/css/_partial/side_nav.styl","hash":"b239b6b55e87e86d038d6aa821beeb66a9cbaf39","modified":1530930221414},{"_id":"themes/raytaylorism/source/css/_partial/slider.styl","hash":"ad757e74b3500aa774636ebbe5bdcee7e52e5ad7","modified":1530930221421},{"_id":"themes/raytaylorism/source/css/_partial/syntax.styl","hash":"f39e7bb08abcc220f7c57fb413e76f4043ab9c35","modified":1530930221427},{"_id":"themes/raytaylorism/source/css/_partial/tablecontents.styl","hash":"e04fa0e7664065077750a7223ae3390cc84a4c56","modified":1530930221434},{"_id":"themes/raytaylorism/source/css/images/side-user-cover.jpg","hash":"d8d73a64d6d5af83a27e6af1d4fedef808955ba0","modified":1530930221280},{"_id":"themes/raytaylorism/source/css/lib/font-awesome.min.css","hash":"14be7d7ae1894d2cc7c1a8e847df4db42a310b2f","modified":1530930221286},{"_id":"themes/raytaylorism/source/css/lib/prettify-tomorrow-night-eighties.css","hash":"e320b2be926124d30998af0e149b7f06303b8f8b","modified":1530930221301},{"_id":"themes/raytaylorism/source/css/lib/tranquil-heart.css","hash":"1e30aa41c075e38ed125f3b1f58aae859d1bff7a","modified":1530930221308},{"_id":"themes/raytaylorism/source/js/materialize.min.js","hash":"04fe8bbc9a3165eb7bfb13b7166306ed671268d8","modified":1530930221493},{"_id":"source/images/sea.jpg","hash":"eb2b9d7310b523c42cd5c4dc7606022af175373e","modified":1530930220110},{"_id":"themes/raytaylorism/source/css/lib/materialize.min.css","hash":"457ee5d3d402e87db483182b53b94d90c2d80966","modified":1530930221294},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1530930221126},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1530930221150},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1530930221158},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1530930221164},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1530930221189},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1530930221196},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1530930221203},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1530930221227},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1530930221234},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1530930221242},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1530930221272},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1530930221266},{"_id":"themes/raytaylorism/source/css/font/font-awesome/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1530930221115},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1530930221047},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1530930221099},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1530930221106},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1530930221141},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1530930221180},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1530930221218},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1530930221257},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1530930221091},{"_id":"source/images/boyaa.png","hash":"0917b866bb1450e7abbcdc83fe0df92816c115d6","modified":1530930220072},{"_id":"source/images/goldminer.png","hash":"e465db31988f3ba0b06969fcf150c41e67823a26","modified":1530930220084},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1530930221075}],"Category":[{"name":"切图","_id":"cjjfmmqpu000sjc7u6z1ije6s"},{"name":"Git","_id":"cjjfmmqqs000wjc7un7jm4zo2"},{"name":"GoJS","_id":"cjjfmmqqs000yjc7u81r7awni"},{"name":"数据库","_id":"cjjfmmqqs0010jc7u42i4nbdb"},{"name":"Java","_id":"cjjfmmqqs0012jc7ujum0h7ym"},{"name":"读书笔记","_id":"cjjfmmqqs0014jc7unbf0r0f5"},{"name":"面试","_id":"cjjfmmqqs0016jc7uja4jx1j9"},{"name":"部署","_id":"cjjfmmqqs0018jc7u2sefbeb8"},{"name":"JavaScript","_id":"cjjfmmqqs001ajc7ubxcpi0v8"},{"name":"Gulp","_id":"cjjfmmqqs001cjc7uwo16rusw"},{"name":"预处理CSS","_id":"cjjfmmqr8001ejc7u5s1rx95i"},{"name":"NVM","_id":"cjjfmmqr8001gjc7u869qnjnc"},{"name":"Vue.js","_id":"cjjfmmqr8001ijc7u7uwr3oec"},{"name":"CSS","_id":"cjjfmmqr8001kjc7ujj6a54tm"},{"name":"移动Web","_id":"cjjfmmqr8001sjc7uxpb6xtl6"},{"name":"正则表达式","_id":"cjjfmmqr8001ujc7uvbvqw34w"},{"name":"WebStrom","_id":"cjjfmmqr8001wjc7u93voort9"},{"name":"前端","_id":"cjjfmmqr80022jc7utlupnvdo"},{"name":"兼容","parent":"cjjfmmqqs001ajc7ubxcpi0v8","_id":"cjjfmmqrr002hjc7u70qzvs17"},{"name":"前端自动化","parent":"cjjfmmqqs001cjc7uwo16rusw","_id":"cjjfmmqrr002njc7uoeb7wwos"},{"name":"Less","parent":"cjjfmmqr8001ejc7u5s1rx95i","_id":"cjjfmmqs7002sjc7uxufg4y2j"},{"name":"Node.js","parent":"cjjfmmqr8001gjc7u869qnjnc","_id":"cjjfmmqs7002xjc7u76xac34u"},{"name":"Chrome","parent":"cjjfmmqr8001wjc7u93voort9","_id":"cjjfmmqs70033jc7u53hidryb"}],"Data":[{"_id":"about","data":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]}},{"_id":"hint","data":{"new":{"selector":[".menu-reading",".menu-about"]}}},{"_id":"link","data":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}}},{"_id":"reading","data":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}}},{"_id":"slider","data":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}],"Page":[{"title":"关于","layout":"about","_content":"大家好，我是meishadevs。欢迎来到我的个人技术博客。","source":"about/index.md","raw":"title: 关于\nlayout: about\n---\n大家好，我是meishadevs。欢迎来到我的个人技术博客。","date":"2018-07-07T02:23:40.058Z","updated":"2018-07-07T02:23:40.058Z","path":"about/index.html","comments":1,"_id":"cjjfmmqm60000jc7ud7empagx","content":"<p>大家好，我是meishadevs。欢迎来到我的个人技术博客。</p>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"","more":"<p>大家好，我是meishadevs。欢迎来到我的个人技术博客。</p>\n"},{"title":"读书","layout":"reading","_content":"","source":"reading/index.md","raw":"title: 读书\nlayout: reading\n---\n","date":"2018-07-07T02:23:40.125Z","updated":"2018-07-07T02:23:40.125Z","path":"reading/index.html","comments":1,"_id":"cjjfmmqml0001jc7ucaxp2ci7","content":"","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"","more":""}],"Post":[{"title":"Fireworks切图","date":"2017-02-28T16:00:00.000Z","_content":"\n自己平时总结的一些使用Fireworks切图的方法与技巧。\n<!--more-->\n\n- 在互联网中约定每英寸为72像素\n\n\n- **放大或者缩小图片**  \n按住Ctrl键 + 滚动鼠标上的滚轮  \n\n\n- **快速转到移动工具**  \n按住空格键不松开，会自动变成移动工具  \n\n\n- **删除切片的快捷键**  \nDelete键\n\n\n- **缩放的快捷键**  \nCtrl + 加号、Ctrl + 减号、Ctrl + 1 - 6  \n\n\n- **导出切割的图片**  \n选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和图片保存的位置单击保存按钮后可以将图片保存在本地\n\n\n- **取消选区的快捷键**  \nCtrl + D\n\n\n- **撤销操作的快捷键**  \nCtrl + Z\n\n\n- **删除PSD的背景层**  \n使用指针工具(黑色小箭头)选中需要删除的背景层，并且使用快捷键Ctrl + X，或者Delete键可以删除背景层\n\n\n- **调节矩形选框工具的大小等属性的快捷键**  \nCtrl + T\n\n\n- **使用引导线测量距离**  \n选择菜单栏上的视图菜单——在视图菜单项中选择标尺，此时工作区的上边和左边都会显示一个标尺——将鼠标移动到标尺上，按住鼠标左键并往下拉，此时可以拉出一条引导线——重复一次上一个步骤，此时界面上有两条平行的参考线——将鼠标移动到两条参考线中间，按住Shift键，此时会显示两条参考线之间的距离\n\n\n- **裁剪图片**  \n选择工具栏上的裁剪工具——将裁剪工具移动到需要裁剪的图片上——调整裁剪工具在图片上的位置和大小——按下键盘上的Enter键，此时会裁掉裁剪工具覆盖之外的图片区域\n\n\n- **使用选取框工具删除图片的局部区域**  \n选择工具栏上的选取框工具——将选取框工具移动到需要处理的图片上——调整选取框工具在图片上的位置和大小——按下键盘上的Delete键，此时会删除选取框工具覆盖之内的图片区域\n\n\n- **移动切片**  \n在图层上添加了一个切片后，按住Ctrl键，将鼠标移到切片上，按住鼠标左键，拖动鼠标可以移动切片\n\n\n- **显示优化面板**  \n当界面上没有优化面板时候，可以点击点击菜单栏上的窗口菜单，在弹出的下拉列表中勾选优化，就会弹出优化面板\n\n\n- **设置图片的格式**  \n在优化面板中设置图片的导出格式\n\n\n- **PSD图片的切图步骤**  \n选中需要切下来的图片——单击鼠标右键——选择插入矩形切片——在优化面板中设置图片的格式和背景颜色——选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和存储路径——单击保存可以将图片存储在本地\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[Fireworks切图](http://meishadevs.com/blog/Fireworks%E5%88%87%E5%9B%BE/)】","source":"_posts/Fireworks切图.md","raw":"---\ntitle: Fireworks切图\ndate: 2017-03-01 \ncategories:\n\t- 切图\ntags:\n    - 切图\n    - Fireworks\n---\n\n自己平时总结的一些使用Fireworks切图的方法与技巧。\n<!--more-->\n\n- 在互联网中约定每英寸为72像素\n\n\n- **放大或者缩小图片**  \n按住Ctrl键 + 滚动鼠标上的滚轮  \n\n\n- **快速转到移动工具**  \n按住空格键不松开，会自动变成移动工具  \n\n\n- **删除切片的快捷键**  \nDelete键\n\n\n- **缩放的快捷键**  \nCtrl + 加号、Ctrl + 减号、Ctrl + 1 - 6  \n\n\n- **导出切割的图片**  \n选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和图片保存的位置单击保存按钮后可以将图片保存在本地\n\n\n- **取消选区的快捷键**  \nCtrl + D\n\n\n- **撤销操作的快捷键**  \nCtrl + Z\n\n\n- **删除PSD的背景层**  \n使用指针工具(黑色小箭头)选中需要删除的背景层，并且使用快捷键Ctrl + X，或者Delete键可以删除背景层\n\n\n- **调节矩形选框工具的大小等属性的快捷键**  \nCtrl + T\n\n\n- **使用引导线测量距离**  \n选择菜单栏上的视图菜单——在视图菜单项中选择标尺，此时工作区的上边和左边都会显示一个标尺——将鼠标移动到标尺上，按住鼠标左键并往下拉，此时可以拉出一条引导线——重复一次上一个步骤，此时界面上有两条平行的参考线——将鼠标移动到两条参考线中间，按住Shift键，此时会显示两条参考线之间的距离\n\n\n- **裁剪图片**  \n选择工具栏上的裁剪工具——将裁剪工具移动到需要裁剪的图片上——调整裁剪工具在图片上的位置和大小——按下键盘上的Enter键，此时会裁掉裁剪工具覆盖之外的图片区域\n\n\n- **使用选取框工具删除图片的局部区域**  \n选择工具栏上的选取框工具——将选取框工具移动到需要处理的图片上——调整选取框工具在图片上的位置和大小——按下键盘上的Delete键，此时会删除选取框工具覆盖之内的图片区域\n\n\n- **移动切片**  \n在图层上添加了一个切片后，按住Ctrl键，将鼠标移到切片上，按住鼠标左键，拖动鼠标可以移动切片\n\n\n- **显示优化面板**  \n当界面上没有优化面板时候，可以点击点击菜单栏上的窗口菜单，在弹出的下拉列表中勾选优化，就会弹出优化面板\n\n\n- **设置图片的格式**  \n在优化面板中设置图片的导出格式\n\n\n- **PSD图片的切图步骤**  \n选中需要切下来的图片——单击鼠标右键——选择插入矩形切片——在优化面板中设置图片的格式和背景颜色——选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和存储路径——单击保存可以将图片存储在本地\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[Fireworks切图](http://meishadevs.com/blog/Fireworks%E5%88%87%E5%9B%BE/)】","slug":"Fireworks切图","published":1,"updated":"2018-07-07T02:23:40.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnk0002jc7uahkyguv6","content":"<p>自己平时总结的一些使用Fireworks切图的方法与技巧。<br><a id=\"more\"></a></p>\n<ul>\n<li>在互联网中约定每英寸为72像素</li>\n</ul>\n<ul>\n<li><strong>放大或者缩小图片</strong><br>按住Ctrl键 + 滚动鼠标上的滚轮  </li>\n</ul>\n<ul>\n<li><strong>快速转到移动工具</strong><br>按住空格键不松开，会自动变成移动工具  </li>\n</ul>\n<ul>\n<li><strong>删除切片的快捷键</strong><br>Delete键</li>\n</ul>\n<ul>\n<li><strong>缩放的快捷键</strong><br>Ctrl + 加号、Ctrl + 减号、Ctrl + 1 - 6  </li>\n</ul>\n<ul>\n<li><strong>导出切割的图片</strong><br>选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和图片保存的位置单击保存按钮后可以将图片保存在本地</li>\n</ul>\n<ul>\n<li><strong>取消选区的快捷键</strong><br>Ctrl + D</li>\n</ul>\n<ul>\n<li><strong>撤销操作的快捷键</strong><br>Ctrl + Z</li>\n</ul>\n<ul>\n<li><strong>删除PSD的背景层</strong><br>使用指针工具(黑色小箭头)选中需要删除的背景层，并且使用快捷键Ctrl + X，或者Delete键可以删除背景层</li>\n</ul>\n<ul>\n<li><strong>调节矩形选框工具的大小等属性的快捷键</strong><br>Ctrl + T</li>\n</ul>\n<ul>\n<li><strong>使用引导线测量距离</strong><br>选择菜单栏上的视图菜单——在视图菜单项中选择标尺，此时工作区的上边和左边都会显示一个标尺——将鼠标移动到标尺上，按住鼠标左键并往下拉，此时可以拉出一条引导线——重复一次上一个步骤，此时界面上有两条平行的参考线——将鼠标移动到两条参考线中间，按住Shift键，此时会显示两条参考线之间的距离</li>\n</ul>\n<ul>\n<li><strong>裁剪图片</strong><br>选择工具栏上的裁剪工具——将裁剪工具移动到需要裁剪的图片上——调整裁剪工具在图片上的位置和大小——按下键盘上的Enter键，此时会裁掉裁剪工具覆盖之外的图片区域</li>\n</ul>\n<ul>\n<li><strong>使用选取框工具删除图片的局部区域</strong><br>选择工具栏上的选取框工具——将选取框工具移动到需要处理的图片上——调整选取框工具在图片上的位置和大小——按下键盘上的Delete键，此时会删除选取框工具覆盖之内的图片区域</li>\n</ul>\n<ul>\n<li><strong>移动切片</strong><br>在图层上添加了一个切片后，按住Ctrl键，将鼠标移到切片上，按住鼠标左键，拖动鼠标可以移动切片</li>\n</ul>\n<ul>\n<li><strong>显示优化面板</strong><br>当界面上没有优化面板时候，可以点击点击菜单栏上的窗口菜单，在弹出的下拉列表中勾选优化，就会弹出优化面板</li>\n</ul>\n<ul>\n<li><strong>设置图片的格式</strong><br>在优化面板中设置图片的导出格式</li>\n</ul>\n<ul>\n<li><strong>PSD图片的切图步骤</strong><br>选中需要切下来的图片——单击鼠标右键——选择插入矩形切片——在优化面板中设置图片的格式和背景颜色——选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和存储路径——单击保存可以将图片存储在本地</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Fireworks%E5%88%87%E5%9B%BE/\">Fireworks切图</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些使用Fireworks切图的方法与技巧。<br>","more":"</p>\n<ul>\n<li>在互联网中约定每英寸为72像素</li>\n</ul>\n<ul>\n<li><strong>放大或者缩小图片</strong><br>按住Ctrl键 + 滚动鼠标上的滚轮  </li>\n</ul>\n<ul>\n<li><strong>快速转到移动工具</strong><br>按住空格键不松开，会自动变成移动工具  </li>\n</ul>\n<ul>\n<li><strong>删除切片的快捷键</strong><br>Delete键</li>\n</ul>\n<ul>\n<li><strong>缩放的快捷键</strong><br>Ctrl + 加号、Ctrl + 减号、Ctrl + 1 - 6  </li>\n</ul>\n<ul>\n<li><strong>导出切割的图片</strong><br>选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和图片保存的位置单击保存按钮后可以将图片保存在本地</li>\n</ul>\n<ul>\n<li><strong>取消选区的快捷键</strong><br>Ctrl + D</li>\n</ul>\n<ul>\n<li><strong>撤销操作的快捷键</strong><br>Ctrl + Z</li>\n</ul>\n<ul>\n<li><strong>删除PSD的背景层</strong><br>使用指针工具(黑色小箭头)选中需要删除的背景层，并且使用快捷键Ctrl + X，或者Delete键可以删除背景层</li>\n</ul>\n<ul>\n<li><strong>调节矩形选框工具的大小等属性的快捷键</strong><br>Ctrl + T</li>\n</ul>\n<ul>\n<li><strong>使用引导线测量距离</strong><br>选择菜单栏上的视图菜单——在视图菜单项中选择标尺，此时工作区的上边和左边都会显示一个标尺——将鼠标移动到标尺上，按住鼠标左键并往下拉，此时可以拉出一条引导线——重复一次上一个步骤，此时界面上有两条平行的参考线——将鼠标移动到两条参考线中间，按住Shift键，此时会显示两条参考线之间的距离</li>\n</ul>\n<ul>\n<li><strong>裁剪图片</strong><br>选择工具栏上的裁剪工具——将裁剪工具移动到需要裁剪的图片上——调整裁剪工具在图片上的位置和大小——按下键盘上的Enter键，此时会裁掉裁剪工具覆盖之外的图片区域</li>\n</ul>\n<ul>\n<li><strong>使用选取框工具删除图片的局部区域</strong><br>选择工具栏上的选取框工具——将选取框工具移动到需要处理的图片上——调整选取框工具在图片上的位置和大小——按下键盘上的Delete键，此时会删除选取框工具覆盖之内的图片区域</li>\n</ul>\n<ul>\n<li><strong>移动切片</strong><br>在图层上添加了一个切片后，按住Ctrl键，将鼠标移到切片上，按住鼠标左键，拖动鼠标可以移动切片</li>\n</ul>\n<ul>\n<li><strong>显示优化面板</strong><br>当界面上没有优化面板时候，可以点击点击菜单栏上的窗口菜单，在弹出的下拉列表中勾选优化，就会弹出优化面板</li>\n</ul>\n<ul>\n<li><strong>设置图片的格式</strong><br>在优化面板中设置图片的导出格式</li>\n</ul>\n<ul>\n<li><strong>PSD图片的切图步骤</strong><br>选中需要切下来的图片——单击鼠标右键——选择插入矩形切片——在优化面板中设置图片的格式和背景颜色——选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和存储路径——单击保存可以将图片存储在本地</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Fireworks%E5%88%87%E5%9B%BE/\">Fireworks切图</a>】</p>\n</blockquote>"},{"title":"Photoshop切图","date":"2017-03-01T16:00:00.000Z","_content":"\n自己平时总结的一些使用Photoshop切图的方法与技巧。\n<!--more-->\n\n- **将单位改成像素**  \nPhotoshop中默认的单位是厘米，而在切图时需要的单位是像素  \n方法：启动Photoshop——选择编辑——选择首选项——选择单位与标尺——在弹出的单位与标尺设置对话框中将标尺的单位和文字的单位都设置成像素——设置完成后单击确定按钮  \n\n\n- **新建文件的快捷键**  \nCtrl + N\n\n\n- **撤销操作的快捷键**  \nCtrl + Alt + Z  \n\n\n- **选中某个图层**  \n首先选择移动工具，将鼠标移动到某个图层上，按下Ctrl + 单击鼠标左键(前提是不要勾选自动选择图层)\n\n\n- **使用工具中的其他工具**  \n当工具栏中的工具右下角有一个小三角，表示工具中还有其他的工具，比如将鼠标移到工具下按住鼠标左键会弹出一个下拉菜单，下拉菜单中会展示工具下的其他工具\n\n\n- **矩形选框工具的快捷键**  \nM键\n\n\n- **矩形选框工具与椭圆选框工具之间互相切换的快捷键**  \n选中矩形选框工具后，按Shift + M，可以实现矩形选区工具和椭圆选区工具之间的互相切换\n\n\n- **删除选区的快捷键**  \nCtrl + D\n\n\n- **移动工具的快捷键**  \nV键\n\n\n- **打开或关闭标尺的快捷键**  \nCtrl + R\n\n\n- **打开视图菜单的快捷键**  \n先按一下Alt,再按一下V\n\n\n- **打开新建参考线对话框的快捷方式**  \n先按一下Alt，再按一下V，最后按一下E\n\n\n- **显示/隐藏参考线的快捷键**  \nCtrl + ;\n\n\n- **打开切片工具的快捷键**  \nC\n\n\n- **放大/缩小图片**  \n按住 Ctrl 和 Alt 滚动鼠标的滚轮\n\n\n- **切图方法**  \n选择需要切割的图片所在的图层——将鼠标移到选中的图层上并单击鼠标右键——在弹出的选项中选择转换为智能对象——选择矩形选框工具——使用矩形选框工具选择要切割的图片——复制要切割的图片——新建一个背景透明的图层(此时图层的尺寸会自动调整为选中的图片尺寸)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储\n\n\n\n- **使用参考线切图**  \n在需要切割的图片上创建四条参考线——选择工具栏中的切片工具——点击状态栏中的基于参考线的切片(此时由参考线围成的矩形都转换为了切片)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出选项中)——将图片的格式设置为PNG-24——单击存储——在弹出的将优化结果存储为对话框中最底下的切片选项中选择选中的切片(切片选项默认选择的是所有切片)——单击Save按钮\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[PhotoShop切图](http://meishadevs.com/blog/Photoshop%E5%88%87%E5%9B%BE/)】\n\n","source":"_posts/Photoshop切图.md","raw":"---\ntitle: Photoshop切图\ndate: 2017-03-02\ncategories:\n\t- 切图\ntags:\n    - 切图\n    - Photoshop\n---\n\n自己平时总结的一些使用Photoshop切图的方法与技巧。\n<!--more-->\n\n- **将单位改成像素**  \nPhotoshop中默认的单位是厘米，而在切图时需要的单位是像素  \n方法：启动Photoshop——选择编辑——选择首选项——选择单位与标尺——在弹出的单位与标尺设置对话框中将标尺的单位和文字的单位都设置成像素——设置完成后单击确定按钮  \n\n\n- **新建文件的快捷键**  \nCtrl + N\n\n\n- **撤销操作的快捷键**  \nCtrl + Alt + Z  \n\n\n- **选中某个图层**  \n首先选择移动工具，将鼠标移动到某个图层上，按下Ctrl + 单击鼠标左键(前提是不要勾选自动选择图层)\n\n\n- **使用工具中的其他工具**  \n当工具栏中的工具右下角有一个小三角，表示工具中还有其他的工具，比如将鼠标移到工具下按住鼠标左键会弹出一个下拉菜单，下拉菜单中会展示工具下的其他工具\n\n\n- **矩形选框工具的快捷键**  \nM键\n\n\n- **矩形选框工具与椭圆选框工具之间互相切换的快捷键**  \n选中矩形选框工具后，按Shift + M，可以实现矩形选区工具和椭圆选区工具之间的互相切换\n\n\n- **删除选区的快捷键**  \nCtrl + D\n\n\n- **移动工具的快捷键**  \nV键\n\n\n- **打开或关闭标尺的快捷键**  \nCtrl + R\n\n\n- **打开视图菜单的快捷键**  \n先按一下Alt,再按一下V\n\n\n- **打开新建参考线对话框的快捷方式**  \n先按一下Alt，再按一下V，最后按一下E\n\n\n- **显示/隐藏参考线的快捷键**  \nCtrl + ;\n\n\n- **打开切片工具的快捷键**  \nC\n\n\n- **放大/缩小图片**  \n按住 Ctrl 和 Alt 滚动鼠标的滚轮\n\n\n- **切图方法**  \n选择需要切割的图片所在的图层——将鼠标移到选中的图层上并单击鼠标右键——在弹出的选项中选择转换为智能对象——选择矩形选框工具——使用矩形选框工具选择要切割的图片——复制要切割的图片——新建一个背景透明的图层(此时图层的尺寸会自动调整为选中的图片尺寸)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储\n\n\n\n- **使用参考线切图**  \n在需要切割的图片上创建四条参考线——选择工具栏中的切片工具——点击状态栏中的基于参考线的切片(此时由参考线围成的矩形都转换为了切片)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出选项中)——将图片的格式设置为PNG-24——单击存储——在弹出的将优化结果存储为对话框中最底下的切片选项中选择选中的切片(切片选项默认选择的是所有切片)——单击Save按钮\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[PhotoShop切图](http://meishadevs.com/blog/Photoshop%E5%88%87%E5%9B%BE/)】\n\n","slug":"Photoshop切图","published":1,"updated":"2018-07-07T02:23:40.201Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnk0003jc7u0c3cmhv5","content":"<p>自己平时总结的一些使用Photoshop切图的方法与技巧。<br><a id=\"more\"></a></p>\n<ul>\n<li><strong>将单位改成像素</strong><br>Photoshop中默认的单位是厘米，而在切图时需要的单位是像素<br>方法：启动Photoshop——选择编辑——选择首选项——选择单位与标尺——在弹出的单位与标尺设置对话框中将标尺的单位和文字的单位都设置成像素——设置完成后单击确定按钮  </li>\n</ul>\n<ul>\n<li><strong>新建文件的快捷键</strong><br>Ctrl + N</li>\n</ul>\n<ul>\n<li><strong>撤销操作的快捷键</strong><br>Ctrl + Alt + Z  </li>\n</ul>\n<ul>\n<li><strong>选中某个图层</strong><br>首先选择移动工具，将鼠标移动到某个图层上，按下Ctrl + 单击鼠标左键(前提是不要勾选自动选择图层)</li>\n</ul>\n<ul>\n<li><strong>使用工具中的其他工具</strong><br>当工具栏中的工具右下角有一个小三角，表示工具中还有其他的工具，比如将鼠标移到工具下按住鼠标左键会弹出一个下拉菜单，下拉菜单中会展示工具下的其他工具</li>\n</ul>\n<ul>\n<li><strong>矩形选框工具的快捷键</strong><br>M键</li>\n</ul>\n<ul>\n<li><strong>矩形选框工具与椭圆选框工具之间互相切换的快捷键</strong><br>选中矩形选框工具后，按Shift + M，可以实现矩形选区工具和椭圆选区工具之间的互相切换</li>\n</ul>\n<ul>\n<li><strong>删除选区的快捷键</strong><br>Ctrl + D</li>\n</ul>\n<ul>\n<li><strong>移动工具的快捷键</strong><br>V键</li>\n</ul>\n<ul>\n<li><strong>打开或关闭标尺的快捷键</strong><br>Ctrl + R</li>\n</ul>\n<ul>\n<li><strong>打开视图菜单的快捷键</strong><br>先按一下Alt,再按一下V</li>\n</ul>\n<ul>\n<li><strong>打开新建参考线对话框的快捷方式</strong><br>先按一下Alt，再按一下V，最后按一下E</li>\n</ul>\n<ul>\n<li><strong>显示/隐藏参考线的快捷键</strong><br>Ctrl + ;</li>\n</ul>\n<ul>\n<li><strong>打开切片工具的快捷键</strong><br>C</li>\n</ul>\n<ul>\n<li><strong>放大/缩小图片</strong><br>按住 Ctrl 和 Alt 滚动鼠标的滚轮</li>\n</ul>\n<ul>\n<li><strong>切图方法</strong><br>选择需要切割的图片所在的图层——将鼠标移到选中的图层上并单击鼠标右键——在弹出的选项中选择转换为智能对象——选择矩形选框工具——使用矩形选框工具选择要切割的图片——复制要切割的图片——新建一个背景透明的图层(此时图层的尺寸会自动调整为选中的图片尺寸)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储</li>\n</ul>\n<ul>\n<li><strong>使用参考线切图</strong><br>在需要切割的图片上创建四条参考线——选择工具栏中的切片工具——点击状态栏中的基于参考线的切片(此时由参考线围成的矩形都转换为了切片)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出选项中)——将图片的格式设置为PNG-24——单击存储——在弹出的将优化结果存储为对话框中最底下的切片选项中选择选中的切片(切片选项默认选择的是所有切片)——单击Save按钮</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Photoshop%E5%88%87%E5%9B%BE/\">PhotoShop切图</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些使用Photoshop切图的方法与技巧。<br>","more":"</p>\n<ul>\n<li><strong>将单位改成像素</strong><br>Photoshop中默认的单位是厘米，而在切图时需要的单位是像素<br>方法：启动Photoshop——选择编辑——选择首选项——选择单位与标尺——在弹出的单位与标尺设置对话框中将标尺的单位和文字的单位都设置成像素——设置完成后单击确定按钮  </li>\n</ul>\n<ul>\n<li><strong>新建文件的快捷键</strong><br>Ctrl + N</li>\n</ul>\n<ul>\n<li><strong>撤销操作的快捷键</strong><br>Ctrl + Alt + Z  </li>\n</ul>\n<ul>\n<li><strong>选中某个图层</strong><br>首先选择移动工具，将鼠标移动到某个图层上，按下Ctrl + 单击鼠标左键(前提是不要勾选自动选择图层)</li>\n</ul>\n<ul>\n<li><strong>使用工具中的其他工具</strong><br>当工具栏中的工具右下角有一个小三角，表示工具中还有其他的工具，比如将鼠标移到工具下按住鼠标左键会弹出一个下拉菜单，下拉菜单中会展示工具下的其他工具</li>\n</ul>\n<ul>\n<li><strong>矩形选框工具的快捷键</strong><br>M键</li>\n</ul>\n<ul>\n<li><strong>矩形选框工具与椭圆选框工具之间互相切换的快捷键</strong><br>选中矩形选框工具后，按Shift + M，可以实现矩形选区工具和椭圆选区工具之间的互相切换</li>\n</ul>\n<ul>\n<li><strong>删除选区的快捷键</strong><br>Ctrl + D</li>\n</ul>\n<ul>\n<li><strong>移动工具的快捷键</strong><br>V键</li>\n</ul>\n<ul>\n<li><strong>打开或关闭标尺的快捷键</strong><br>Ctrl + R</li>\n</ul>\n<ul>\n<li><strong>打开视图菜单的快捷键</strong><br>先按一下Alt,再按一下V</li>\n</ul>\n<ul>\n<li><strong>打开新建参考线对话框的快捷方式</strong><br>先按一下Alt，再按一下V，最后按一下E</li>\n</ul>\n<ul>\n<li><strong>显示/隐藏参考线的快捷键</strong><br>Ctrl + ;</li>\n</ul>\n<ul>\n<li><strong>打开切片工具的快捷键</strong><br>C</li>\n</ul>\n<ul>\n<li><strong>放大/缩小图片</strong><br>按住 Ctrl 和 Alt 滚动鼠标的滚轮</li>\n</ul>\n<ul>\n<li><strong>切图方法</strong><br>选择需要切割的图片所在的图层——将鼠标移到选中的图层上并单击鼠标右键——在弹出的选项中选择转换为智能对象——选择矩形选框工具——使用矩形选框工具选择要切割的图片——复制要切割的图片——新建一个背景透明的图层(此时图层的尺寸会自动调整为选中的图片尺寸)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储</li>\n</ul>\n<ul>\n<li><strong>使用参考线切图</strong><br>在需要切割的图片上创建四条参考线——选择工具栏中的切片工具——点击状态栏中的基于参考线的切片(此时由参考线围成的矩形都转换为了切片)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出选项中)——将图片的格式设置为PNG-24——单击存储——在弹出的将优化结果存储为对话框中最底下的切片选项中选择选中的切片(切片选项默认选择的是所有切片)——单击Save按钮</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Photoshop%E5%88%87%E5%9B%BE/\">PhotoShop切图</a>】</p>\n</blockquote>"},{"title":"git中代码冲突的解决方法","date":"2018-06-06T13:11:25.000Z","_content":"今天是我在项目组中第一次使用Git提交代码，结果一提交就出现了冲突，后来在同事的帮助下终于提交成功了，至于造成冲突的原因是我和同事都在同一个文件中编辑了代码，同事先提交我后提交，同事能正常提交，我提交时就会有冲突，因为Git不明白该保存那个人写的代码，所以就造成了冲突。\n<!--more-->\n\n##  制造一个冲突\n为了解决冲突，我们首先要制造一个冲突出来，这里我使用GitHub作为远程仓库\n\n**创建一个远程仓库**  \n先在GitHub中创建一个远程仓库test，目的就是为了实现向test仓库提交代码时会产生冲突（这里是模拟在我进入项目开发之前我的同事写的项目代码）\n![](http://oq3pg8pg4.bkt.clouddn.com/conflict1.png)\n\n**将远程仓库克隆到本地**  \n这里是模拟我进入项目组后拉取项目代码  \n\n\tgit clone https://github.com/meishadevs/test.git\n\n**打开test文件夹下的README.md文件**  \n打开test文件夹下的README.md文件后会看到我在创建远程仓库时创建README.md文件时向README.md文件中写入的一段话“这是一个用于制造冲突的远程仓库”  （这里模拟我看同事写的项目代码）\n![](http://oq3pg8pg4.bkt.clouddn.com/conflict2.png)\n\n**在GitHub上修改README.md文件**  \n直接在GitHub上修改README.md文件，将原有的“这是一个用于制造冲突的远程仓库”改成“我是一名程序员”（这里模拟的是我的同事修改项目代码）  \n![](http://oq3pg8pg4.bkt.clouddn.com/conflict3.png)\n\n**在本地修改README.md文件**\n将本地test文件中的“这是一个用于制造冲突的远程仓库”改成“我在一个公司从事前端开发”（这里是模拟我修改项目代码）\n![](http://oq3pg8pg4.bkt.clouddn.com/conflict4.png)\n\n**将修改后的代码提交到远程仓库**  \n\n\tgit add .\n\tgit commit -m \"update some data\"\n\tgit push origin master\n\n执行将本地修改提交到远程仓库后，会出现一个提交失败的提示信息，这是因为产生了冲突（因为在本地和远程仓库都修改了README.md文件，将本地修改提交到远程仓库时，Git不知道应该保存那个的修改，所以产生了冲突）  \n![](http://oq3pg8pg4.bkt.clouddn.com/conflict5.png)\n\n## 解决冲突\n\n**拉取远程仓库**\n\n\tgit pull origin master\n\n**确定需要提交的内容**  \n再次打开README.md文件会看到MREAMD.md文件中的内容变成了下面的形式\n\n\t<<<<<<< HEAD\n\t我在一个公司从事前端开发\n\t=======\n\t我是一名程序员\n\t>>>>>>> 65fbde5a1555252f5010ce746fcf8ea098500c97\n\n箭头之间的内容表示是出现冲突的内容其中等号上面的内容表示的是我写的，等号下面的内容表示的是我同事写的，根据需要保持一个就可以了，例如此次我要提交我写的内容所以我将README.md中的内容修改如下\n\n\t我在一个公司从事前端开发\n\n**再次提交**  \n\n\tgit add .\n\tgit commit -m \"解决冲突\"\n\tgit push origin master \n\t\n这时提交代码时的界面如下表示提交成功了，也表示解决了冲突\n![](http://oq3pg8pg4.bkt.clouddn.com/conflict6.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[git中代码冲突的解决方法](http://meishadevs.com/blog/Git%E4%B8%AD%E6%8F%90%E4%BA%A4%E6%97%B6%E5%8F%91%E7%94%9F%E5%86%B2%E7%AA%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/)】","source":"_posts/Git中提交时发生冲突的解决方法.md","raw":"---\ntitle: git中代码冲突的解决方法\ncategories:\n  - Git\ntags:\n  - Git\ndate: 2018-06-06 21:11:25\n---\n今天是我在项目组中第一次使用Git提交代码，结果一提交就出现了冲突，后来在同事的帮助下终于提交成功了，至于造成冲突的原因是我和同事都在同一个文件中编辑了代码，同事先提交我后提交，同事能正常提交，我提交时就会有冲突，因为Git不明白该保存那个人写的代码，所以就造成了冲突。\n<!--more-->\n\n##  制造一个冲突\n为了解决冲突，我们首先要制造一个冲突出来，这里我使用GitHub作为远程仓库\n\n**创建一个远程仓库**  \n先在GitHub中创建一个远程仓库test，目的就是为了实现向test仓库提交代码时会产生冲突（这里是模拟在我进入项目开发之前我的同事写的项目代码）\n![](http://oq3pg8pg4.bkt.clouddn.com/conflict1.png)\n\n**将远程仓库克隆到本地**  \n这里是模拟我进入项目组后拉取项目代码  \n\n\tgit clone https://github.com/meishadevs/test.git\n\n**打开test文件夹下的README.md文件**  \n打开test文件夹下的README.md文件后会看到我在创建远程仓库时创建README.md文件时向README.md文件中写入的一段话“这是一个用于制造冲突的远程仓库”  （这里模拟我看同事写的项目代码）\n![](http://oq3pg8pg4.bkt.clouddn.com/conflict2.png)\n\n**在GitHub上修改README.md文件**  \n直接在GitHub上修改README.md文件，将原有的“这是一个用于制造冲突的远程仓库”改成“我是一名程序员”（这里模拟的是我的同事修改项目代码）  \n![](http://oq3pg8pg4.bkt.clouddn.com/conflict3.png)\n\n**在本地修改README.md文件**\n将本地test文件中的“这是一个用于制造冲突的远程仓库”改成“我在一个公司从事前端开发”（这里是模拟我修改项目代码）\n![](http://oq3pg8pg4.bkt.clouddn.com/conflict4.png)\n\n**将修改后的代码提交到远程仓库**  \n\n\tgit add .\n\tgit commit -m \"update some data\"\n\tgit push origin master\n\n执行将本地修改提交到远程仓库后，会出现一个提交失败的提示信息，这是因为产生了冲突（因为在本地和远程仓库都修改了README.md文件，将本地修改提交到远程仓库时，Git不知道应该保存那个的修改，所以产生了冲突）  \n![](http://oq3pg8pg4.bkt.clouddn.com/conflict5.png)\n\n## 解决冲突\n\n**拉取远程仓库**\n\n\tgit pull origin master\n\n**确定需要提交的内容**  \n再次打开README.md文件会看到MREAMD.md文件中的内容变成了下面的形式\n\n\t<<<<<<< HEAD\n\t我在一个公司从事前端开发\n\t=======\n\t我是一名程序员\n\t>>>>>>> 65fbde5a1555252f5010ce746fcf8ea098500c97\n\n箭头之间的内容表示是出现冲突的内容其中等号上面的内容表示的是我写的，等号下面的内容表示的是我同事写的，根据需要保持一个就可以了，例如此次我要提交我写的内容所以我将README.md中的内容修改如下\n\n\t我在一个公司从事前端开发\n\n**再次提交**  \n\n\tgit add .\n\tgit commit -m \"解决冲突\"\n\tgit push origin master \n\t\n这时提交代码时的界面如下表示提交成功了，也表示解决了冲突\n![](http://oq3pg8pg4.bkt.clouddn.com/conflict6.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[git中代码冲突的解决方法](http://meishadevs.com/blog/Git%E4%B8%AD%E6%8F%90%E4%BA%A4%E6%97%B6%E5%8F%91%E7%94%9F%E5%86%B2%E7%AA%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/)】","slug":"Git中提交时发生冲突的解决方法","published":1,"updated":"2018-07-07T02:23:40.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnk0004jc7ujo1l4h6g","content":"<p>今天是我在项目组中第一次使用Git提交代码，结果一提交就出现了冲突，后来在同事的帮助下终于提交成功了，至于造成冲突的原因是我和同事都在同一个文件中编辑了代码，同事先提交我后提交，同事能正常提交，我提交时就会有冲突，因为Git不明白该保存那个人写的代码，所以就造成了冲突。<br><a id=\"more\"></a></p>\n<h2 id=\"制造一个冲突\"><a href=\"#制造一个冲突\" class=\"headerlink\" title=\"制造一个冲突\"></a>制造一个冲突</h2><p>为了解决冲突，我们首先要制造一个冲突出来，这里我使用GitHub作为远程仓库</p>\n<p><strong>创建一个远程仓库</strong><br>先在GitHub中创建一个远程仓库test，目的就是为了实现向test仓库提交代码时会产生冲突（这里是模拟在我进入项目开发之前我的同事写的项目代码）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict1.png\" alt=\"\"></p>\n<p><strong>将远程仓库克隆到本地</strong><br>这里是模拟我进入项目组后拉取项目代码  </p>\n<pre><code>git clone https://github.com/meishadevs/test.git\n</code></pre><p><strong>打开test文件夹下的README.md文件</strong><br>打开test文件夹下的README.md文件后会看到我在创建远程仓库时创建README.md文件时向README.md文件中写入的一段话“这是一个用于制造冲突的远程仓库”  （这里模拟我看同事写的项目代码）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict2.png\" alt=\"\"></p>\n<p><strong>在GitHub上修改README.md文件</strong><br>直接在GitHub上修改README.md文件，将原有的“这是一个用于制造冲突的远程仓库”改成“我是一名程序员”（这里模拟的是我的同事修改项目代码）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict3.png\" alt=\"\"></p>\n<p><strong>在本地修改README.md文件</strong><br>将本地test文件中的“这是一个用于制造冲突的远程仓库”改成“我在一个公司从事前端开发”（这里是模拟我修改项目代码）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict4.png\" alt=\"\"></p>\n<p><strong>将修改后的代码提交到远程仓库</strong>  </p>\n<pre><code>git add .\ngit commit -m &quot;update some data&quot;\ngit push origin master\n</code></pre><p>执行将本地修改提交到远程仓库后，会出现一个提交失败的提示信息，这是因为产生了冲突（因为在本地和远程仓库都修改了README.md文件，将本地修改提交到远程仓库时，Git不知道应该保存那个的修改，所以产生了冲突）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict5.png\" alt=\"\"></p>\n<h2 id=\"解决冲突\"><a href=\"#解决冲突\" class=\"headerlink\" title=\"解决冲突\"></a>解决冲突</h2><p><strong>拉取远程仓库</strong></p>\n<pre><code>git pull origin master\n</code></pre><p><strong>确定需要提交的内容</strong><br>再次打开README.md文件会看到MREAMD.md文件中的内容变成了下面的形式</p>\n<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n我在一个公司从事前端开发\n=======\n我是一名程序员\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 65fbde5a1555252f5010ce746fcf8ea098500c97\n</code></pre><p>箭头之间的内容表示是出现冲突的内容其中等号上面的内容表示的是我写的，等号下面的内容表示的是我同事写的，根据需要保持一个就可以了，例如此次我要提交我写的内容所以我将README.md中的内容修改如下</p>\n<pre><code>我在一个公司从事前端开发\n</code></pre><p><strong>再次提交</strong>  </p>\n<pre><code>git add .\ngit commit -m &quot;解决冲突&quot;\ngit push origin master \n</code></pre><p>这时提交代码时的界面如下表示提交成功了，也表示解决了冲突<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict6.png\" alt=\"\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Git%E4%B8%AD%E6%8F%90%E4%BA%A4%E6%97%B6%E5%8F%91%E7%94%9F%E5%86%B2%E7%AA%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/\">git中代码冲突的解决方法</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>今天是我在项目组中第一次使用Git提交代码，结果一提交就出现了冲突，后来在同事的帮助下终于提交成功了，至于造成冲突的原因是我和同事都在同一个文件中编辑了代码，同事先提交我后提交，同事能正常提交，我提交时就会有冲突，因为Git不明白该保存那个人写的代码，所以就造成了冲突。<br>","more":"</p>\n<h2 id=\"制造一个冲突\"><a href=\"#制造一个冲突\" class=\"headerlink\" title=\"制造一个冲突\"></a>制造一个冲突</h2><p>为了解决冲突，我们首先要制造一个冲突出来，这里我使用GitHub作为远程仓库</p>\n<p><strong>创建一个远程仓库</strong><br>先在GitHub中创建一个远程仓库test，目的就是为了实现向test仓库提交代码时会产生冲突（这里是模拟在我进入项目开发之前我的同事写的项目代码）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict1.png\" alt=\"\"></p>\n<p><strong>将远程仓库克隆到本地</strong><br>这里是模拟我进入项目组后拉取项目代码  </p>\n<pre><code>git clone https://github.com/meishadevs/test.git\n</code></pre><p><strong>打开test文件夹下的README.md文件</strong><br>打开test文件夹下的README.md文件后会看到我在创建远程仓库时创建README.md文件时向README.md文件中写入的一段话“这是一个用于制造冲突的远程仓库”  （这里模拟我看同事写的项目代码）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict2.png\" alt=\"\"></p>\n<p><strong>在GitHub上修改README.md文件</strong><br>直接在GitHub上修改README.md文件，将原有的“这是一个用于制造冲突的远程仓库”改成“我是一名程序员”（这里模拟的是我的同事修改项目代码）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict3.png\" alt=\"\"></p>\n<p><strong>在本地修改README.md文件</strong><br>将本地test文件中的“这是一个用于制造冲突的远程仓库”改成“我在一个公司从事前端开发”（这里是模拟我修改项目代码）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict4.png\" alt=\"\"></p>\n<p><strong>将修改后的代码提交到远程仓库</strong>  </p>\n<pre><code>git add .\ngit commit -m &quot;update some data&quot;\ngit push origin master\n</code></pre><p>执行将本地修改提交到远程仓库后，会出现一个提交失败的提示信息，这是因为产生了冲突（因为在本地和远程仓库都修改了README.md文件，将本地修改提交到远程仓库时，Git不知道应该保存那个的修改，所以产生了冲突）<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict5.png\" alt=\"\"></p>\n<h2 id=\"解决冲突\"><a href=\"#解决冲突\" class=\"headerlink\" title=\"解决冲突\"></a>解决冲突</h2><p><strong>拉取远程仓库</strong></p>\n<pre><code>git pull origin master\n</code></pre><p><strong>确定需要提交的内容</strong><br>再次打开README.md文件会看到MREAMD.md文件中的内容变成了下面的形式</p>\n<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n我在一个公司从事前端开发\n=======\n我是一名程序员\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 65fbde5a1555252f5010ce746fcf8ea098500c97\n</code></pre><p>箭头之间的内容表示是出现冲突的内容其中等号上面的内容表示的是我写的，等号下面的内容表示的是我同事写的，根据需要保持一个就可以了，例如此次我要提交我写的内容所以我将README.md中的内容修改如下</p>\n<pre><code>我在一个公司从事前端开发\n</code></pre><p><strong>再次提交</strong>  </p>\n<pre><code>git add .\ngit commit -m &quot;解决冲突&quot;\ngit push origin master \n</code></pre><p>这时提交代码时的界面如下表示提交成功了，也表示解决了冲突<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/conflict6.png\" alt=\"\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Git%E4%B8%AD%E6%8F%90%E4%BA%A4%E6%97%B6%E5%8F%91%E7%94%9F%E5%86%B2%E7%AA%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/\">git中代码冲突的解决方法</a>】</p>\n</blockquote>"},{"title":"GoJS爬坑之旅","date":"2018-07-05T13:00:39.000Z","_content":"我进入项目组后参加了第一次项目会议，在会议上项目经理为每个项目成员都分配了任务，我的任务是使用GoJS实现一个拖拽效果，这也是我第一次听说GoJS，在网上查阅相关的资源后发现GoJS的资料比较少，而且绝大多数资源都是英文的，这也为我学习及使用这个框架带来了不小的困难，好在项目经理看出这块做起来比较难后来又加了一个人，现在这块由我和一个同事两个人共同开发。\n<!--more-->\n\n# GoJS是什么\n通过查看[GoJS官网](https://gojs.net/latest/index.html)可知**GoJS**是一款基于JavaScrip的图表绘制组件，使用**GoJS**可以绘制流程图、UML图、家族关系图、树形图等。\n\n# 使用GoJS绘制的一些图形\n\n## 使用GoJS绘制流程图\n下图是使用GoJS绘制的一个流程图，这也是官方提供的示例中的一个，也可以访问[https://gojs.net/latest/samples/flowchart.html](https://gojs.net/latest/samples/flowchart.html)查看流程图效果，同时还可以访问[https://gojs.net/latest/samples/index.html](https://gojs.net/latest/samples/index.html)查看GoJS官方提供的所有示例\n![](http://oq3pg8pg4.bkt.clouddn.com/2018070601.jpg)\n\n## 使用GoJS绘制一个简单的图表\n\n### 引入GoJS文件\n根据[GoJS官网](https://gojs.net/latest/doc/download.html)上的介绍可知，引入GoJS的方式有三种，分别是：下载GoJS文件将GoJS文件放在项目中使用并在项目中引用、通过CDN引入GoJS、通过npm包引入GoJS，这里我们使用最简单的方式，使用第一种方式，根据[GoJS下载页](https://gojs.net/latest/doc/download.html)中的提示下载go.js文件，[GoJS下载页](https://gojs.net/latest/doc/download.html)中提示用户可以选中下载go-debug.js文件或下载go.js文件,其中go-debug.js用于开发环境，因为使用go-debug.js时会在控制台中打印一些调试信息便于调试，go.js文件用户生产环境，这里我们直接下载go.js文件，下载好后创建一个HTML文件直接引入就可以了\n![](http://oq3pg8pg4.bkt.clouddn.com/2018070602.png)\n\n### 编写实现代码\n下面是一段简单的GoJS代码\n\n\t<!doctype html>\n\t<html lang=\"en\">\n\t<head>\n\t    <meta charset=\"UTF-8\">\n\t    <title>GoJS绘制的一个简单的图表</title>\n\t    <script src=\"./go.js\"></script>\n\t    <script>\n\t        function init() {\n\t\n\t            //表示在id为\"myDiagramDiv\"的标签上绘制GoJS图表\n\t  var diagram = new go.Diagram(\"myDiagramDiv\");\n\t\n\t            diagram.model = new go.GraphLinksModel(\n\t                [\n\t                    //绘制一个节点，节点的key值为\"Hello\"，其中GoJS中的key值不会重复，是GoJs中的标识\n\t  { key: \"Hello\" },\n\t\n\t                    //绘制一个节点，节点的key值为\"World!\"，GoJS中的key值不会重复，是GoJs中的标识\n\t  { key: \"World!\" }\n\t                ],\n\t                [\n\t                    //在key值为\"Hello\"的节点与key值为\"World!\"的节点之间绘制一条连线\n\t  { from: \"Hello\", to: \"World!\" }\n\t                ]\n\t            );\n\t        }\n\t    </script>\n\t</head>\n\t<body onload=\"init()\">\n\t    <div id=\"myDiagramDiv\" style=\"border: solid 1px blue; width:400px; height:150px\"></div>\n\t</body>\n\t</html>\n\n执行结果，因为GoJS是收费的，可以免费使用，但是不支付授权费在左上角会有一个水印，并且有些功能不能使用\n![](http://oqdvwkahb.bkt.clouddn.com/2018070603.png)\n\n#### 破解GoJS \n除了支付授权费还可以通过破解的方式去除左上角的水印，破解方式是使用打开go.js文件或者go-debug.js文件并注释掉go.js文件或者go-debug.js中的下面这段代码\n\n\tb[w.Kg(\"7ca11abfd022028846\")]=w.Kg(\"398c3597c01238\");for(var c=[\"5da73c80a36755dc038e4972187c3cae51fd22\",\"32ab5ff3b26f42dc0ed90f22432913b54ae6247590da4bb21c324ba3a84e385776\",\"54a702f3e53909c447824c6706603faf4cfb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387\",\"74bf19bce72555874c86\"],d=1;5>d;d++)b[w.Kg(\"7ca11abfd7330390\")](w.Kg(c[d-1]),10,15*d+0);b[w.Kg(\"7ca11abfd022028846\")]=w.Kg(\"39f046ebb36e4b\");for(d=1;5>d;d++)b[w.Kg(\"7ca11abfd7330390\")](w.Kg(c[d-\n\t1]),10,15*d+0);if(4!==c.length||\"5\"!==c[0][0]||\"7\"!==c[3][0])w.p=function(a,b){var c=new da(a,b,2);Object.freeze(c);a[b]=c;var d=a.fv;d instanceof ma||(d=new ma(\"string\",da),a.fv=d);d.add(b,c);return c};\n\n破解成功后可以看到图表上已经没有水印\n![](http://oqdvwkahb.bkt.clouddn.com/2018070604.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[]()】","source":"_posts/GoJS爬坑之旅.md","raw":"---\ntitle: GoJS爬坑之旅\ncategories:\n  - GoJS\ntags:\n  - GoJS\ndate: 2018-07-05 21:00:39\n---\n我进入项目组后参加了第一次项目会议，在会议上项目经理为每个项目成员都分配了任务，我的任务是使用GoJS实现一个拖拽效果，这也是我第一次听说GoJS，在网上查阅相关的资源后发现GoJS的资料比较少，而且绝大多数资源都是英文的，这也为我学习及使用这个框架带来了不小的困难，好在项目经理看出这块做起来比较难后来又加了一个人，现在这块由我和一个同事两个人共同开发。\n<!--more-->\n\n# GoJS是什么\n通过查看[GoJS官网](https://gojs.net/latest/index.html)可知**GoJS**是一款基于JavaScrip的图表绘制组件，使用**GoJS**可以绘制流程图、UML图、家族关系图、树形图等。\n\n# 使用GoJS绘制的一些图形\n\n## 使用GoJS绘制流程图\n下图是使用GoJS绘制的一个流程图，这也是官方提供的示例中的一个，也可以访问[https://gojs.net/latest/samples/flowchart.html](https://gojs.net/latest/samples/flowchart.html)查看流程图效果，同时还可以访问[https://gojs.net/latest/samples/index.html](https://gojs.net/latest/samples/index.html)查看GoJS官方提供的所有示例\n![](http://oq3pg8pg4.bkt.clouddn.com/2018070601.jpg)\n\n## 使用GoJS绘制一个简单的图表\n\n### 引入GoJS文件\n根据[GoJS官网](https://gojs.net/latest/doc/download.html)上的介绍可知，引入GoJS的方式有三种，分别是：下载GoJS文件将GoJS文件放在项目中使用并在项目中引用、通过CDN引入GoJS、通过npm包引入GoJS，这里我们使用最简单的方式，使用第一种方式，根据[GoJS下载页](https://gojs.net/latest/doc/download.html)中的提示下载go.js文件，[GoJS下载页](https://gojs.net/latest/doc/download.html)中提示用户可以选中下载go-debug.js文件或下载go.js文件,其中go-debug.js用于开发环境，因为使用go-debug.js时会在控制台中打印一些调试信息便于调试，go.js文件用户生产环境，这里我们直接下载go.js文件，下载好后创建一个HTML文件直接引入就可以了\n![](http://oq3pg8pg4.bkt.clouddn.com/2018070602.png)\n\n### 编写实现代码\n下面是一段简单的GoJS代码\n\n\t<!doctype html>\n\t<html lang=\"en\">\n\t<head>\n\t    <meta charset=\"UTF-8\">\n\t    <title>GoJS绘制的一个简单的图表</title>\n\t    <script src=\"./go.js\"></script>\n\t    <script>\n\t        function init() {\n\t\n\t            //表示在id为\"myDiagramDiv\"的标签上绘制GoJS图表\n\t  var diagram = new go.Diagram(\"myDiagramDiv\");\n\t\n\t            diagram.model = new go.GraphLinksModel(\n\t                [\n\t                    //绘制一个节点，节点的key值为\"Hello\"，其中GoJS中的key值不会重复，是GoJs中的标识\n\t  { key: \"Hello\" },\n\t\n\t                    //绘制一个节点，节点的key值为\"World!\"，GoJS中的key值不会重复，是GoJs中的标识\n\t  { key: \"World!\" }\n\t                ],\n\t                [\n\t                    //在key值为\"Hello\"的节点与key值为\"World!\"的节点之间绘制一条连线\n\t  { from: \"Hello\", to: \"World!\" }\n\t                ]\n\t            );\n\t        }\n\t    </script>\n\t</head>\n\t<body onload=\"init()\">\n\t    <div id=\"myDiagramDiv\" style=\"border: solid 1px blue; width:400px; height:150px\"></div>\n\t</body>\n\t</html>\n\n执行结果，因为GoJS是收费的，可以免费使用，但是不支付授权费在左上角会有一个水印，并且有些功能不能使用\n![](http://oqdvwkahb.bkt.clouddn.com/2018070603.png)\n\n#### 破解GoJS \n除了支付授权费还可以通过破解的方式去除左上角的水印，破解方式是使用打开go.js文件或者go-debug.js文件并注释掉go.js文件或者go-debug.js中的下面这段代码\n\n\tb[w.Kg(\"7ca11abfd022028846\")]=w.Kg(\"398c3597c01238\");for(var c=[\"5da73c80a36755dc038e4972187c3cae51fd22\",\"32ab5ff3b26f42dc0ed90f22432913b54ae6247590da4bb21c324ba3a84e385776\",\"54a702f3e53909c447824c6706603faf4cfb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387\",\"74bf19bce72555874c86\"],d=1;5>d;d++)b[w.Kg(\"7ca11abfd7330390\")](w.Kg(c[d-1]),10,15*d+0);b[w.Kg(\"7ca11abfd022028846\")]=w.Kg(\"39f046ebb36e4b\");for(d=1;5>d;d++)b[w.Kg(\"7ca11abfd7330390\")](w.Kg(c[d-\n\t1]),10,15*d+0);if(4!==c.length||\"5\"!==c[0][0]||\"7\"!==c[3][0])w.p=function(a,b){var c=new da(a,b,2);Object.freeze(c);a[b]=c;var d=a.fv;d instanceof ma||(d=new ma(\"string\",da),a.fv=d);d.add(b,c);return c};\n\n破解成功后可以看到图表上已经没有水印\n![](http://oqdvwkahb.bkt.clouddn.com/2018070604.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[]()】","slug":"GoJS爬坑之旅","published":1,"updated":"2018-07-07T02:23:40.179Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnk0005jc7uroypzqh5","content":"<p>我进入项目组后参加了第一次项目会议，在会议上项目经理为每个项目成员都分配了任务，我的任务是使用GoJS实现一个拖拽效果，这也是我第一次听说GoJS，在网上查阅相关的资源后发现GoJS的资料比较少，而且绝大多数资源都是英文的，这也为我学习及使用这个框架带来了不小的困难，好在项目经理看出这块做起来比较难后来又加了一个人，现在这块由我和一个同事两个人共同开发。<br><a id=\"more\"></a></p>\n<h1 id=\"GoJS是什么\"><a href=\"#GoJS是什么\" class=\"headerlink\" title=\"GoJS是什么\"></a>GoJS是什么</h1><p>通过查看<a href=\"https://gojs.net/latest/index.html\" target=\"_blank\" rel=\"noopener\">GoJS官网</a>可知<strong>GoJS</strong>是一款基于JavaScrip的图表绘制组件，使用<strong>GoJS</strong>可以绘制流程图、UML图、家族关系图、树形图等。</p>\n<h1 id=\"使用GoJS绘制的一些图形\"><a href=\"#使用GoJS绘制的一些图形\" class=\"headerlink\" title=\"使用GoJS绘制的一些图形\"></a>使用GoJS绘制的一些图形</h1><h2 id=\"使用GoJS绘制流程图\"><a href=\"#使用GoJS绘制流程图\" class=\"headerlink\" title=\"使用GoJS绘制流程图\"></a>使用GoJS绘制流程图</h2><p>下图是使用GoJS绘制的一个流程图，这也是官方提供的示例中的一个，也可以访问<a href=\"https://gojs.net/latest/samples/flowchart.html\" target=\"_blank\" rel=\"noopener\">https://gojs.net/latest/samples/flowchart.html</a>查看流程图效果，同时还可以访问<a href=\"https://gojs.net/latest/samples/index.html\" target=\"_blank\" rel=\"noopener\">https://gojs.net/latest/samples/index.html</a>查看GoJS官方提供的所有示例<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018070601.jpg\" alt=\"\"></p>\n<h2 id=\"使用GoJS绘制一个简单的图表\"><a href=\"#使用GoJS绘制一个简单的图表\" class=\"headerlink\" title=\"使用GoJS绘制一个简单的图表\"></a>使用GoJS绘制一个简单的图表</h2><h3 id=\"引入GoJS文件\"><a href=\"#引入GoJS文件\" class=\"headerlink\" title=\"引入GoJS文件\"></a>引入GoJS文件</h3><p>根据<a href=\"https://gojs.net/latest/doc/download.html\" target=\"_blank\" rel=\"noopener\">GoJS官网</a>上的介绍可知，引入GoJS的方式有三种，分别是：下载GoJS文件将GoJS文件放在项目中使用并在项目中引用、通过CDN引入GoJS、通过npm包引入GoJS，这里我们使用最简单的方式，使用第一种方式，根据<a href=\"https://gojs.net/latest/doc/download.html\" target=\"_blank\" rel=\"noopener\">GoJS下载页</a>中的提示下载go.js文件，<a href=\"https://gojs.net/latest/doc/download.html\" target=\"_blank\" rel=\"noopener\">GoJS下载页</a>中提示用户可以选中下载go-debug.js文件或下载go.js文件,其中go-debug.js用于开发环境，因为使用go-debug.js时会在控制台中打印一些调试信息便于调试，go.js文件用户生产环境，这里我们直接下载go.js文件，下载好后创建一个HTML文件直接引入就可以了<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018070602.png\" alt=\"\"></p>\n<h3 id=\"编写实现代码\"><a href=\"#编写实现代码\" class=\"headerlink\" title=\"编写实现代码\"></a>编写实现代码</h3><p>下面是一段简单的GoJS代码</p>\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;GoJS绘制的一个简单的图表&lt;/title&gt;\n    &lt;script src=&quot;./go.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n        function init() {\n\n            //表示在id为&quot;myDiagramDiv&quot;的标签上绘制GoJS图表\n  var diagram = new go.Diagram(&quot;myDiagramDiv&quot;);\n\n            diagram.model = new go.GraphLinksModel(\n                [\n                    //绘制一个节点，节点的key值为&quot;Hello&quot;，其中GoJS中的key值不会重复，是GoJs中的标识\n  { key: &quot;Hello&quot; },\n\n                    //绘制一个节点，节点的key值为&quot;World!&quot;，GoJS中的key值不会重复，是GoJs中的标识\n  { key: &quot;World!&quot; }\n                ],\n                [\n                    //在key值为&quot;Hello&quot;的节点与key值为&quot;World!&quot;的节点之间绘制一条连线\n  { from: &quot;Hello&quot;, to: &quot;World!&quot; }\n                ]\n            );\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=&quot;init()&quot;&gt;\n    &lt;div id=&quot;myDiagramDiv&quot; style=&quot;border: solid 1px blue; width:400px; height:150px&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>执行结果，因为GoJS是收费的，可以免费使用，但是不支付授权费在左上角会有一个水印，并且有些功能不能使用<br><img src=\"http://oqdvwkahb.bkt.clouddn.com/2018070603.png\" alt=\"\"></p>\n<h4 id=\"破解GoJS\"><a href=\"#破解GoJS\" class=\"headerlink\" title=\"破解GoJS\"></a>破解GoJS</h4><p>除了支付授权费还可以通过破解的方式去除左上角的水印，破解方式是使用打开go.js文件或者go-debug.js文件并注释掉go.js文件或者go-debug.js中的下面这段代码</p>\n<pre><code>b[w.Kg(&quot;7ca11abfd022028846&quot;)]=w.Kg(&quot;398c3597c01238&quot;);for(var c=[&quot;5da73c80a36755dc038e4972187c3cae51fd22&quot;,&quot;32ab5ff3b26f42dc0ed90f22432913b54ae6247590da4bb21c324ba3a84e385776&quot;,&quot;54a702f3e53909c447824c6706603faf4cfb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387&quot;,&quot;74bf19bce72555874c86&quot;],d=1;5&gt;d;d++)b[w.Kg(&quot;7ca11abfd7330390&quot;)](w.Kg(c[d-1]),10,15*d+0);b[w.Kg(&quot;7ca11abfd022028846&quot;)]=w.Kg(&quot;39f046ebb36e4b&quot;);for(d=1;5&gt;d;d++)b[w.Kg(&quot;7ca11abfd7330390&quot;)](w.Kg(c[d-\n1]),10,15*d+0);if(4!==c.length||&quot;5&quot;!==c[0][0]||&quot;7&quot;!==c[3][0])w.p=function(a,b){var c=new da(a,b,2);Object.freeze(c);a[b]=c;var d=a.fv;d instanceof ma||(d=new ma(&quot;string&quot;,da),a.fv=d);d.add(b,c);return c};\n</code></pre><p>破解成功后可以看到图表上已经没有水印<br><img src=\"http://oqdvwkahb.bkt.clouddn.com/2018070604.png\" alt=\"\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"\"></a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>我进入项目组后参加了第一次项目会议，在会议上项目经理为每个项目成员都分配了任务，我的任务是使用GoJS实现一个拖拽效果，这也是我第一次听说GoJS，在网上查阅相关的资源后发现GoJS的资料比较少，而且绝大多数资源都是英文的，这也为我学习及使用这个框架带来了不小的困难，好在项目经理看出这块做起来比较难后来又加了一个人，现在这块由我和一个同事两个人共同开发。<br>","more":"</p>\n<h1 id=\"GoJS是什么\"><a href=\"#GoJS是什么\" class=\"headerlink\" title=\"GoJS是什么\"></a>GoJS是什么</h1><p>通过查看<a href=\"https://gojs.net/latest/index.html\" target=\"_blank\" rel=\"noopener\">GoJS官网</a>可知<strong>GoJS</strong>是一款基于JavaScrip的图表绘制组件，使用<strong>GoJS</strong>可以绘制流程图、UML图、家族关系图、树形图等。</p>\n<h1 id=\"使用GoJS绘制的一些图形\"><a href=\"#使用GoJS绘制的一些图形\" class=\"headerlink\" title=\"使用GoJS绘制的一些图形\"></a>使用GoJS绘制的一些图形</h1><h2 id=\"使用GoJS绘制流程图\"><a href=\"#使用GoJS绘制流程图\" class=\"headerlink\" title=\"使用GoJS绘制流程图\"></a>使用GoJS绘制流程图</h2><p>下图是使用GoJS绘制的一个流程图，这也是官方提供的示例中的一个，也可以访问<a href=\"https://gojs.net/latest/samples/flowchart.html\" target=\"_blank\" rel=\"noopener\">https://gojs.net/latest/samples/flowchart.html</a>查看流程图效果，同时还可以访问<a href=\"https://gojs.net/latest/samples/index.html\" target=\"_blank\" rel=\"noopener\">https://gojs.net/latest/samples/index.html</a>查看GoJS官方提供的所有示例<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018070601.jpg\" alt=\"\"></p>\n<h2 id=\"使用GoJS绘制一个简单的图表\"><a href=\"#使用GoJS绘制一个简单的图表\" class=\"headerlink\" title=\"使用GoJS绘制一个简单的图表\"></a>使用GoJS绘制一个简单的图表</h2><h3 id=\"引入GoJS文件\"><a href=\"#引入GoJS文件\" class=\"headerlink\" title=\"引入GoJS文件\"></a>引入GoJS文件</h3><p>根据<a href=\"https://gojs.net/latest/doc/download.html\" target=\"_blank\" rel=\"noopener\">GoJS官网</a>上的介绍可知，引入GoJS的方式有三种，分别是：下载GoJS文件将GoJS文件放在项目中使用并在项目中引用、通过CDN引入GoJS、通过npm包引入GoJS，这里我们使用最简单的方式，使用第一种方式，根据<a href=\"https://gojs.net/latest/doc/download.html\" target=\"_blank\" rel=\"noopener\">GoJS下载页</a>中的提示下载go.js文件，<a href=\"https://gojs.net/latest/doc/download.html\" target=\"_blank\" rel=\"noopener\">GoJS下载页</a>中提示用户可以选中下载go-debug.js文件或下载go.js文件,其中go-debug.js用于开发环境，因为使用go-debug.js时会在控制台中打印一些调试信息便于调试，go.js文件用户生产环境，这里我们直接下载go.js文件，下载好后创建一个HTML文件直接引入就可以了<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018070602.png\" alt=\"\"></p>\n<h3 id=\"编写实现代码\"><a href=\"#编写实现代码\" class=\"headerlink\" title=\"编写实现代码\"></a>编写实现代码</h3><p>下面是一段简单的GoJS代码</p>\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;GoJS绘制的一个简单的图表&lt;/title&gt;\n    &lt;script src=&quot;./go.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n        function init() {\n\n            //表示在id为&quot;myDiagramDiv&quot;的标签上绘制GoJS图表\n  var diagram = new go.Diagram(&quot;myDiagramDiv&quot;);\n\n            diagram.model = new go.GraphLinksModel(\n                [\n                    //绘制一个节点，节点的key值为&quot;Hello&quot;，其中GoJS中的key值不会重复，是GoJs中的标识\n  { key: &quot;Hello&quot; },\n\n                    //绘制一个节点，节点的key值为&quot;World!&quot;，GoJS中的key值不会重复，是GoJs中的标识\n  { key: &quot;World!&quot; }\n                ],\n                [\n                    //在key值为&quot;Hello&quot;的节点与key值为&quot;World!&quot;的节点之间绘制一条连线\n  { from: &quot;Hello&quot;, to: &quot;World!&quot; }\n                ]\n            );\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=&quot;init()&quot;&gt;\n    &lt;div id=&quot;myDiagramDiv&quot; style=&quot;border: solid 1px blue; width:400px; height:150px&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>执行结果，因为GoJS是收费的，可以免费使用，但是不支付授权费在左上角会有一个水印，并且有些功能不能使用<br><img src=\"http://oqdvwkahb.bkt.clouddn.com/2018070603.png\" alt=\"\"></p>\n<h4 id=\"破解GoJS\"><a href=\"#破解GoJS\" class=\"headerlink\" title=\"破解GoJS\"></a>破解GoJS</h4><p>除了支付授权费还可以通过破解的方式去除左上角的水印，破解方式是使用打开go.js文件或者go-debug.js文件并注释掉go.js文件或者go-debug.js中的下面这段代码</p>\n<pre><code>b[w.Kg(&quot;7ca11abfd022028846&quot;)]=w.Kg(&quot;398c3597c01238&quot;);for(var c=[&quot;5da73c80a36755dc038e4972187c3cae51fd22&quot;,&quot;32ab5ff3b26f42dc0ed90f22432913b54ae6247590da4bb21c324ba3a84e385776&quot;,&quot;54a702f3e53909c447824c6706603faf4cfb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387&quot;,&quot;74bf19bce72555874c86&quot;],d=1;5&gt;d;d++)b[w.Kg(&quot;7ca11abfd7330390&quot;)](w.Kg(c[d-1]),10,15*d+0);b[w.Kg(&quot;7ca11abfd022028846&quot;)]=w.Kg(&quot;39f046ebb36e4b&quot;);for(d=1;5&gt;d;d++)b[w.Kg(&quot;7ca11abfd7330390&quot;)](w.Kg(c[d-\n1]),10,15*d+0);if(4!==c.length||&quot;5&quot;!==c[0][0]||&quot;7&quot;!==c[3][0])w.p=function(a,b){var c=new da(a,b,2);Object.freeze(c);a[b]=c;var d=a.fv;d instanceof ma||(d=new ma(&quot;string&quot;,da),a.fv=d);d.add(b,c);return c};\n</code></pre><p>破解成功后可以看到图表上已经没有水印<br><img src=\"http://oqdvwkahb.bkt.clouddn.com/2018070604.png\" alt=\"\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"\"></a>】</p>\n</blockquote>"},{"title":"SQL Server数据库学习笔记","date":"2018-05-07T12:50:54.000Z","_content":"\n年后来深圳花费了一个多月总算勉强找到了一份程序开发的工作，截止到现在已经入职块一个月了，现在还处于试用期，SQL Server数据库是公司给我安排的第二个任务，对于数据库这块我还是有点熟悉，因为我之前做的开源项目[电商网](https://github.com/meishadevs/dswz)的服务器端是使用PHP和MySQL实现的，公司要求使用SQL Server数据库，所以我花费了两天时间熟悉了一下SQL Server数据库和SQL语句，怕以后忘记所以做了一些笔记。\n<!--more-->\n\n**创建一个记录学生信息的表**  \n\n    create table StuInfo\n    (  \n    \t-- 学生的编号\n    \t-- primary key 表示将字段stuNum设置为主键\n    \t-- identity(1001, 1) 表示初始值为1001,以后每插入一条数据这个值自动增加1\n    \tStuNum int identity(1001, 1) primary key, \n    \t\n    \t-- 学生的姓名\n        Name nvarchar(10) not null,\n        \n        -- 学生的年龄\n        Age int not null,\n        \n        -- 学生的性别\n        Sex nvarchar(5) not null,\n        \n        -- 学生的语文成绩\n        Chinese float not null,  \n        \n        -- 学生的数学成绩\n        Math float not null,  \n        \n        -- 学生的英语成绩\n        English float not null\n    );  \n\n**向表中插入数据**  \n\n    insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\n    values('刘得意', 19, '男', 60, 98, 75);\n    insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\n    values('王锐\t', 20, '男', 63, 90, 96);\n    insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\n    values('何煜中', 19, '男', 90, 73, 82);\n    insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\n    values('王磊', 21, '男', 87, 86, 9\t\n**向表中插入数据的简便写法**  \n\n    insert into StuInfo values('刘得意', 19, '男', 60, 98, 75);\n    insert into StuInfo values('王锐\t', 20, '男', 63, 90, 96);\n    insert into StuInfo values('何煜中', 19, '男', 90, 73, 82);\n    insert into StuInfo values('王磊', 21, '男', 87, 86, 92);\n\n**删除websites表中name字段值为百度, country字段值为CN的数据**  \n\n    delete from websites where name='百度' and country='CN';\n\n**仅删除表test内的所有内容, 保留表的定义, 不释放空间**  \n\n\tdelete from test;\n\n**删除表test, 并释放空间, 将test删除的一干二净**  \n\n\tdrop table test;\n\n**删除表test里的内容, 并释放空间, 但不删除表的定义, 表的结构还在**  \n\n\ttruncate table test;\n\n**将websites表中name字段值为菜鸟教程的alexa字段值设置为5000, country字段值设置为USA**  \n\n\tupdate websites set alexa='5000', country='USA' where name='菜鸟教程';\n\n**查询StuInfo表中的数据**  \n\n\tselect * from StuInfo;\n\n**查询websites表中name字段和country字段中的数据**  \n\n\tselect name, country from websites;\n\n**查询websites表中country字段下的不同的值**  \n\n\tselect distinct country from websites;\n\n**查询websites表中country字段值为CN的值**  \n\n\tselect * from websites where country='CN';\n\n**将websites表中的数据根据alexa字段值的大小按照升序进行排序(从小到大排序)**  \n\n\tselect * from websites order by alexa;\n\n**将websites表中的数据根据alexa字段值的大小按照降序进行排序(从大到小排序)**  \n\n\tselect * from websites order by alexa desc;\n\n**查询websites表中的前3条数据**  \n\n\tselect top 3 * from websites;\n\n**查询websites表中的前50%条数据**  \n\n\tselect top 50 precent * from websites;\n\n**查询websites表中name字段值是以G开头的数据**  \n\n\tselect * from websites where name like 'G%';\n\n**查询websites表中name字段值是以K结尾的数据**  \n\n\tselect * from websites where name like '%K';\n\n**查询websites表中name字段值包含oo的数据**  \n\n\tselect * from websites where name like '%oo%';\n\n**将websites表中的id字段设置为主键，其中pkid表示主键名**\n\n\talter table websites add constraint pkid primary key(id);\n\n**进入school数据库**  \n\n\tuse school;\n\n**添加表说明**  \n\n\t-- 添加表说明\n\t-- '用户信息表': 表说明的值\n\t-- 'UserInfo': 为UserInfo表添加表说明\n\texecute sp_addextendedproperty \n\t'MS_Description',\n\t'用户信息表',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\tnull,\n\tnull;  \n\n**删除表说明**  \n\n\t-- 删除表说明\n\t-- 'UserInfo': 删除UserInfo表的表说明\n\texecute sp_dropextendedproperty \n\t'MS_Description',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\tnull,\n\tnull;  \n\n**修改表说明**  \n\n\t-- 修改表说明\n\t-- '用户信息表': 表说明的值\n\t-- 'UserInfo': 修改UserInfo表的表说明\n\texecute sp_updateextendedproperty \n\t'MS_Description',\n\t'用户信息表',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\tnull,\n\tnull;\n\n**添加字段说明**  \n\n\t-- 为字段添加字段说明\n\t-- '用户编号'：字段说明的值\n\t-- 'UserInfo'：添加说明的字段属于UserInfo表的字段\n\t-- 'UserNo'：添加说明的字段\n\texecute sp_addextendedproperty \n\t'MS_Description',\n\t'用户编号',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\t'column',\n\t'UserNo';  \n\n**删除字段说明**  \n\n\t-- 删除字段中的字段说明\n\t-- 'UserInfo': 删除UserInfo表下的字段说明\n\t-- 'UserNo': 删除UserInfo表下UserNo字段的字段说明\n\texecute sp_dropextendedproperty \n\t'MS_Description',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\t'column',\n\t'UserNo';  \n\n**修改字段说明**\n\n\t-- 修改字段中的字段说明\n\t-- '用户编号'：字段说明的值\n\t-- 'UserInfo'：添加说明的字段属于UserInfo表的字段\n\t-- 'UserNo'：添加说明的字段\n\texecute sp_updateextendedproperty\n\t'MS_Description',\n\t'用户编号',\n\t'user','dbo',\n\t'table',\n\t'UserInfo',\n\t'column',\n\t'UserNo';  \n\n##  参考资料\n- [sql server 添加表注释、字段注释](https://blog.csdn.net/stupidbird003/article/details/64562683)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[SQL Server数据库学习笔记](http://meishadevs.com/blog/SQL-Server%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/)】","source":"_posts/SQL-Server数据库学习笔记.md","raw":"---\ntitle: SQL Server数据库学习笔记\ncategories:\n  - 数据库\ntags:\n  - SQL\n  - SQL Server\n  - 数据库\ndate: 2018-05-07 20:50:54\n---\n\n年后来深圳花费了一个多月总算勉强找到了一份程序开发的工作，截止到现在已经入职块一个月了，现在还处于试用期，SQL Server数据库是公司给我安排的第二个任务，对于数据库这块我还是有点熟悉，因为我之前做的开源项目[电商网](https://github.com/meishadevs/dswz)的服务器端是使用PHP和MySQL实现的，公司要求使用SQL Server数据库，所以我花费了两天时间熟悉了一下SQL Server数据库和SQL语句，怕以后忘记所以做了一些笔记。\n<!--more-->\n\n**创建一个记录学生信息的表**  \n\n    create table StuInfo\n    (  \n    \t-- 学生的编号\n    \t-- primary key 表示将字段stuNum设置为主键\n    \t-- identity(1001, 1) 表示初始值为1001,以后每插入一条数据这个值自动增加1\n    \tStuNum int identity(1001, 1) primary key, \n    \t\n    \t-- 学生的姓名\n        Name nvarchar(10) not null,\n        \n        -- 学生的年龄\n        Age int not null,\n        \n        -- 学生的性别\n        Sex nvarchar(5) not null,\n        \n        -- 学生的语文成绩\n        Chinese float not null,  \n        \n        -- 学生的数学成绩\n        Math float not null,  \n        \n        -- 学生的英语成绩\n        English float not null\n    );  \n\n**向表中插入数据**  \n\n    insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\n    values('刘得意', 19, '男', 60, 98, 75);\n    insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\n    values('王锐\t', 20, '男', 63, 90, 96);\n    insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\n    values('何煜中', 19, '男', 90, 73, 82);\n    insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\n    values('王磊', 21, '男', 87, 86, 9\t\n**向表中插入数据的简便写法**  \n\n    insert into StuInfo values('刘得意', 19, '男', 60, 98, 75);\n    insert into StuInfo values('王锐\t', 20, '男', 63, 90, 96);\n    insert into StuInfo values('何煜中', 19, '男', 90, 73, 82);\n    insert into StuInfo values('王磊', 21, '男', 87, 86, 92);\n\n**删除websites表中name字段值为百度, country字段值为CN的数据**  \n\n    delete from websites where name='百度' and country='CN';\n\n**仅删除表test内的所有内容, 保留表的定义, 不释放空间**  \n\n\tdelete from test;\n\n**删除表test, 并释放空间, 将test删除的一干二净**  \n\n\tdrop table test;\n\n**删除表test里的内容, 并释放空间, 但不删除表的定义, 表的结构还在**  \n\n\ttruncate table test;\n\n**将websites表中name字段值为菜鸟教程的alexa字段值设置为5000, country字段值设置为USA**  \n\n\tupdate websites set alexa='5000', country='USA' where name='菜鸟教程';\n\n**查询StuInfo表中的数据**  \n\n\tselect * from StuInfo;\n\n**查询websites表中name字段和country字段中的数据**  \n\n\tselect name, country from websites;\n\n**查询websites表中country字段下的不同的值**  \n\n\tselect distinct country from websites;\n\n**查询websites表中country字段值为CN的值**  \n\n\tselect * from websites where country='CN';\n\n**将websites表中的数据根据alexa字段值的大小按照升序进行排序(从小到大排序)**  \n\n\tselect * from websites order by alexa;\n\n**将websites表中的数据根据alexa字段值的大小按照降序进行排序(从大到小排序)**  \n\n\tselect * from websites order by alexa desc;\n\n**查询websites表中的前3条数据**  \n\n\tselect top 3 * from websites;\n\n**查询websites表中的前50%条数据**  \n\n\tselect top 50 precent * from websites;\n\n**查询websites表中name字段值是以G开头的数据**  \n\n\tselect * from websites where name like 'G%';\n\n**查询websites表中name字段值是以K结尾的数据**  \n\n\tselect * from websites where name like '%K';\n\n**查询websites表中name字段值包含oo的数据**  \n\n\tselect * from websites where name like '%oo%';\n\n**将websites表中的id字段设置为主键，其中pkid表示主键名**\n\n\talter table websites add constraint pkid primary key(id);\n\n**进入school数据库**  \n\n\tuse school;\n\n**添加表说明**  \n\n\t-- 添加表说明\n\t-- '用户信息表': 表说明的值\n\t-- 'UserInfo': 为UserInfo表添加表说明\n\texecute sp_addextendedproperty \n\t'MS_Description',\n\t'用户信息表',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\tnull,\n\tnull;  \n\n**删除表说明**  \n\n\t-- 删除表说明\n\t-- 'UserInfo': 删除UserInfo表的表说明\n\texecute sp_dropextendedproperty \n\t'MS_Description',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\tnull,\n\tnull;  \n\n**修改表说明**  \n\n\t-- 修改表说明\n\t-- '用户信息表': 表说明的值\n\t-- 'UserInfo': 修改UserInfo表的表说明\n\texecute sp_updateextendedproperty \n\t'MS_Description',\n\t'用户信息表',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\tnull,\n\tnull;\n\n**添加字段说明**  \n\n\t-- 为字段添加字段说明\n\t-- '用户编号'：字段说明的值\n\t-- 'UserInfo'：添加说明的字段属于UserInfo表的字段\n\t-- 'UserNo'：添加说明的字段\n\texecute sp_addextendedproperty \n\t'MS_Description',\n\t'用户编号',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\t'column',\n\t'UserNo';  \n\n**删除字段说明**  \n\n\t-- 删除字段中的字段说明\n\t-- 'UserInfo': 删除UserInfo表下的字段说明\n\t-- 'UserNo': 删除UserInfo表下UserNo字段的字段说明\n\texecute sp_dropextendedproperty \n\t'MS_Description',\n\t'user',\n\t'dbo',\n\t'table',\n\t'UserInfo',\n\t'column',\n\t'UserNo';  \n\n**修改字段说明**\n\n\t-- 修改字段中的字段说明\n\t-- '用户编号'：字段说明的值\n\t-- 'UserInfo'：添加说明的字段属于UserInfo表的字段\n\t-- 'UserNo'：添加说明的字段\n\texecute sp_updateextendedproperty\n\t'MS_Description',\n\t'用户编号',\n\t'user','dbo',\n\t'table',\n\t'UserInfo',\n\t'column',\n\t'UserNo';  \n\n##  参考资料\n- [sql server 添加表注释、字段注释](https://blog.csdn.net/stupidbird003/article/details/64562683)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[SQL Server数据库学习笔记](http://meishadevs.com/blog/SQL-Server%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/)】","slug":"SQL-Server数据库学习笔记","published":1,"updated":"2018-07-07T02:23:40.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnk0006jc7unh9p0gep","content":"<p>年后来深圳花费了一个多月总算勉强找到了一份程序开发的工作，截止到现在已经入职块一个月了，现在还处于试用期，SQL Server数据库是公司给我安排的第二个任务，对于数据库这块我还是有点熟悉，因为我之前做的开源项目<a href=\"https://github.com/meishadevs/dswz\" target=\"_blank\" rel=\"noopener\">电商网</a>的服务器端是使用PHP和MySQL实现的，公司要求使用SQL Server数据库，所以我花费了两天时间熟悉了一下SQL Server数据库和SQL语句，怕以后忘记所以做了一些笔记。<br><a id=\"more\"></a></p>\n<p><strong>创建一个记录学生信息的表</strong>  </p>\n<pre><code>create table StuInfo\n(  \n    -- 学生的编号\n    -- primary key 表示将字段stuNum设置为主键\n    -- identity(1001, 1) 表示初始值为1001,以后每插入一条数据这个值自动增加1\n    StuNum int identity(1001, 1) primary key, \n\n    -- 学生的姓名\n    Name nvarchar(10) not null,\n\n    -- 学生的年龄\n    Age int not null,\n\n    -- 学生的性别\n    Sex nvarchar(5) not null,\n\n    -- 学生的语文成绩\n    Chinese float not null,  \n\n    -- 学生的数学成绩\n    Math float not null,  \n\n    -- 学生的英语成绩\n    English float not null\n);  \n</code></pre><p><strong>向表中插入数据</strong>  </p>\n<pre><code>insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\nvalues(&apos;刘得意&apos;, 19, &apos;男&apos;, 60, 98, 75);\ninsert into StuInfo(Name, Age, Sex, Chinese, Math, English)\nvalues(&apos;王锐    &apos;, 20, &apos;男&apos;, 63, 90, 96);\ninsert into StuInfo(Name, Age, Sex, Chinese, Math, English)\nvalues(&apos;何煜中&apos;, 19, &apos;男&apos;, 90, 73, 82);\ninsert into StuInfo(Name, Age, Sex, Chinese, Math, English)\nvalues(&apos;王磊&apos;, 21, &apos;男&apos;, 87, 86, 9    \n</code></pre><p><strong>向表中插入数据的简便写法</strong>  </p>\n<pre><code>insert into StuInfo values(&apos;刘得意&apos;, 19, &apos;男&apos;, 60, 98, 75);\ninsert into StuInfo values(&apos;王锐    &apos;, 20, &apos;男&apos;, 63, 90, 96);\ninsert into StuInfo values(&apos;何煜中&apos;, 19, &apos;男&apos;, 90, 73, 82);\ninsert into StuInfo values(&apos;王磊&apos;, 21, &apos;男&apos;, 87, 86, 92);\n</code></pre><p><strong>删除websites表中name字段值为百度, country字段值为CN的数据</strong>  </p>\n<pre><code>delete from websites where name=&apos;百度&apos; and country=&apos;CN&apos;;\n</code></pre><p><strong>仅删除表test内的所有内容, 保留表的定义, 不释放空间</strong>  </p>\n<pre><code>delete from test;\n</code></pre><p><strong>删除表test, 并释放空间, 将test删除的一干二净</strong>  </p>\n<pre><code>drop table test;\n</code></pre><p><strong>删除表test里的内容, 并释放空间, 但不删除表的定义, 表的结构还在</strong>  </p>\n<pre><code>truncate table test;\n</code></pre><p><strong>将websites表中name字段值为菜鸟教程的alexa字段值设置为5000, country字段值设置为USA</strong>  </p>\n<pre><code>update websites set alexa=&apos;5000&apos;, country=&apos;USA&apos; where name=&apos;菜鸟教程&apos;;\n</code></pre><p><strong>查询StuInfo表中的数据</strong>  </p>\n<pre><code>select * from StuInfo;\n</code></pre><p><strong>查询websites表中name字段和country字段中的数据</strong>  </p>\n<pre><code>select name, country from websites;\n</code></pre><p><strong>查询websites表中country字段下的不同的值</strong>  </p>\n<pre><code>select distinct country from websites;\n</code></pre><p><strong>查询websites表中country字段值为CN的值</strong>  </p>\n<pre><code>select * from websites where country=&apos;CN&apos;;\n</code></pre><p><strong>将websites表中的数据根据alexa字段值的大小按照升序进行排序(从小到大排序)</strong>  </p>\n<pre><code>select * from websites order by alexa;\n</code></pre><p><strong>将websites表中的数据根据alexa字段值的大小按照降序进行排序(从大到小排序)</strong>  </p>\n<pre><code>select * from websites order by alexa desc;\n</code></pre><p><strong>查询websites表中的前3条数据</strong>  </p>\n<pre><code>select top 3 * from websites;\n</code></pre><p><strong>查询websites表中的前50%条数据</strong>  </p>\n<pre><code>select top 50 precent * from websites;\n</code></pre><p><strong>查询websites表中name字段值是以G开头的数据</strong>  </p>\n<pre><code>select * from websites where name like &apos;G%&apos;;\n</code></pre><p><strong>查询websites表中name字段值是以K结尾的数据</strong>  </p>\n<pre><code>select * from websites where name like &apos;%K&apos;;\n</code></pre><p><strong>查询websites表中name字段值包含oo的数据</strong>  </p>\n<pre><code>select * from websites where name like &apos;%oo%&apos;;\n</code></pre><p><strong>将websites表中的id字段设置为主键，其中pkid表示主键名</strong></p>\n<pre><code>alter table websites add constraint pkid primary key(id);\n</code></pre><p><strong>进入school数据库</strong>  </p>\n<pre><code>use school;\n</code></pre><p><strong>添加表说明</strong>  </p>\n<pre><code>-- 添加表说明\n-- &apos;用户信息表&apos;: 表说明的值\n-- &apos;UserInfo&apos;: 为UserInfo表添加表说明\nexecute sp_addextendedproperty \n&apos;MS_Description&apos;,\n&apos;用户信息表&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\nnull,\nnull;  \n</code></pre><p><strong>删除表说明</strong>  </p>\n<pre><code>-- 删除表说明\n-- &apos;UserInfo&apos;: 删除UserInfo表的表说明\nexecute sp_dropextendedproperty \n&apos;MS_Description&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\nnull,\nnull;  \n</code></pre><p><strong>修改表说明</strong>  </p>\n<pre><code>-- 修改表说明\n-- &apos;用户信息表&apos;: 表说明的值\n-- &apos;UserInfo&apos;: 修改UserInfo表的表说明\nexecute sp_updateextendedproperty \n&apos;MS_Description&apos;,\n&apos;用户信息表&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\nnull,\nnull;\n</code></pre><p><strong>添加字段说明</strong>  </p>\n<pre><code>-- 为字段添加字段说明\n-- &apos;用户编号&apos;：字段说明的值\n-- &apos;UserInfo&apos;：添加说明的字段属于UserInfo表的字段\n-- &apos;UserNo&apos;：添加说明的字段\nexecute sp_addextendedproperty \n&apos;MS_Description&apos;,\n&apos;用户编号&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\n&apos;column&apos;,\n&apos;UserNo&apos;;  \n</code></pre><p><strong>删除字段说明</strong>  </p>\n<pre><code>-- 删除字段中的字段说明\n-- &apos;UserInfo&apos;: 删除UserInfo表下的字段说明\n-- &apos;UserNo&apos;: 删除UserInfo表下UserNo字段的字段说明\nexecute sp_dropextendedproperty \n&apos;MS_Description&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\n&apos;column&apos;,\n&apos;UserNo&apos;;  \n</code></pre><p><strong>修改字段说明</strong></p>\n<pre><code>-- 修改字段中的字段说明\n-- &apos;用户编号&apos;：字段说明的值\n-- &apos;UserInfo&apos;：添加说明的字段属于UserInfo表的字段\n-- &apos;UserNo&apos;：添加说明的字段\nexecute sp_updateextendedproperty\n&apos;MS_Description&apos;,\n&apos;用户编号&apos;,\n&apos;user&apos;,&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\n&apos;column&apos;,\n&apos;UserNo&apos;;  \n</code></pre><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/stupidbird003/article/details/64562683\" target=\"_blank\" rel=\"noopener\">sql server 添加表注释、字段注释</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/SQL-Server%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/\">SQL Server数据库学习笔记</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>年后来深圳花费了一个多月总算勉强找到了一份程序开发的工作，截止到现在已经入职块一个月了，现在还处于试用期，SQL Server数据库是公司给我安排的第二个任务，对于数据库这块我还是有点熟悉，因为我之前做的开源项目<a href=\"https://github.com/meishadevs/dswz\" target=\"_blank\" rel=\"noopener\">电商网</a>的服务器端是使用PHP和MySQL实现的，公司要求使用SQL Server数据库，所以我花费了两天时间熟悉了一下SQL Server数据库和SQL语句，怕以后忘记所以做了一些笔记。<br>","more":"</p>\n<p><strong>创建一个记录学生信息的表</strong>  </p>\n<pre><code>create table StuInfo\n(  \n    -- 学生的编号\n    -- primary key 表示将字段stuNum设置为主键\n    -- identity(1001, 1) 表示初始值为1001,以后每插入一条数据这个值自动增加1\n    StuNum int identity(1001, 1) primary key, \n\n    -- 学生的姓名\n    Name nvarchar(10) not null,\n\n    -- 学生的年龄\n    Age int not null,\n\n    -- 学生的性别\n    Sex nvarchar(5) not null,\n\n    -- 学生的语文成绩\n    Chinese float not null,  \n\n    -- 学生的数学成绩\n    Math float not null,  \n\n    -- 学生的英语成绩\n    English float not null\n);  \n</code></pre><p><strong>向表中插入数据</strong>  </p>\n<pre><code>insert into StuInfo(Name, Age, Sex, Chinese, Math, English)\nvalues(&apos;刘得意&apos;, 19, &apos;男&apos;, 60, 98, 75);\ninsert into StuInfo(Name, Age, Sex, Chinese, Math, English)\nvalues(&apos;王锐    &apos;, 20, &apos;男&apos;, 63, 90, 96);\ninsert into StuInfo(Name, Age, Sex, Chinese, Math, English)\nvalues(&apos;何煜中&apos;, 19, &apos;男&apos;, 90, 73, 82);\ninsert into StuInfo(Name, Age, Sex, Chinese, Math, English)\nvalues(&apos;王磊&apos;, 21, &apos;男&apos;, 87, 86, 9    \n</code></pre><p><strong>向表中插入数据的简便写法</strong>  </p>\n<pre><code>insert into StuInfo values(&apos;刘得意&apos;, 19, &apos;男&apos;, 60, 98, 75);\ninsert into StuInfo values(&apos;王锐    &apos;, 20, &apos;男&apos;, 63, 90, 96);\ninsert into StuInfo values(&apos;何煜中&apos;, 19, &apos;男&apos;, 90, 73, 82);\ninsert into StuInfo values(&apos;王磊&apos;, 21, &apos;男&apos;, 87, 86, 92);\n</code></pre><p><strong>删除websites表中name字段值为百度, country字段值为CN的数据</strong>  </p>\n<pre><code>delete from websites where name=&apos;百度&apos; and country=&apos;CN&apos;;\n</code></pre><p><strong>仅删除表test内的所有内容, 保留表的定义, 不释放空间</strong>  </p>\n<pre><code>delete from test;\n</code></pre><p><strong>删除表test, 并释放空间, 将test删除的一干二净</strong>  </p>\n<pre><code>drop table test;\n</code></pre><p><strong>删除表test里的内容, 并释放空间, 但不删除表的定义, 表的结构还在</strong>  </p>\n<pre><code>truncate table test;\n</code></pre><p><strong>将websites表中name字段值为菜鸟教程的alexa字段值设置为5000, country字段值设置为USA</strong>  </p>\n<pre><code>update websites set alexa=&apos;5000&apos;, country=&apos;USA&apos; where name=&apos;菜鸟教程&apos;;\n</code></pre><p><strong>查询StuInfo表中的数据</strong>  </p>\n<pre><code>select * from StuInfo;\n</code></pre><p><strong>查询websites表中name字段和country字段中的数据</strong>  </p>\n<pre><code>select name, country from websites;\n</code></pre><p><strong>查询websites表中country字段下的不同的值</strong>  </p>\n<pre><code>select distinct country from websites;\n</code></pre><p><strong>查询websites表中country字段值为CN的值</strong>  </p>\n<pre><code>select * from websites where country=&apos;CN&apos;;\n</code></pre><p><strong>将websites表中的数据根据alexa字段值的大小按照升序进行排序(从小到大排序)</strong>  </p>\n<pre><code>select * from websites order by alexa;\n</code></pre><p><strong>将websites表中的数据根据alexa字段值的大小按照降序进行排序(从大到小排序)</strong>  </p>\n<pre><code>select * from websites order by alexa desc;\n</code></pre><p><strong>查询websites表中的前3条数据</strong>  </p>\n<pre><code>select top 3 * from websites;\n</code></pre><p><strong>查询websites表中的前50%条数据</strong>  </p>\n<pre><code>select top 50 precent * from websites;\n</code></pre><p><strong>查询websites表中name字段值是以G开头的数据</strong>  </p>\n<pre><code>select * from websites where name like &apos;G%&apos;;\n</code></pre><p><strong>查询websites表中name字段值是以K结尾的数据</strong>  </p>\n<pre><code>select * from websites where name like &apos;%K&apos;;\n</code></pre><p><strong>查询websites表中name字段值包含oo的数据</strong>  </p>\n<pre><code>select * from websites where name like &apos;%oo%&apos;;\n</code></pre><p><strong>将websites表中的id字段设置为主键，其中pkid表示主键名</strong></p>\n<pre><code>alter table websites add constraint pkid primary key(id);\n</code></pre><p><strong>进入school数据库</strong>  </p>\n<pre><code>use school;\n</code></pre><p><strong>添加表说明</strong>  </p>\n<pre><code>-- 添加表说明\n-- &apos;用户信息表&apos;: 表说明的值\n-- &apos;UserInfo&apos;: 为UserInfo表添加表说明\nexecute sp_addextendedproperty \n&apos;MS_Description&apos;,\n&apos;用户信息表&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\nnull,\nnull;  \n</code></pre><p><strong>删除表说明</strong>  </p>\n<pre><code>-- 删除表说明\n-- &apos;UserInfo&apos;: 删除UserInfo表的表说明\nexecute sp_dropextendedproperty \n&apos;MS_Description&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\nnull,\nnull;  \n</code></pre><p><strong>修改表说明</strong>  </p>\n<pre><code>-- 修改表说明\n-- &apos;用户信息表&apos;: 表说明的值\n-- &apos;UserInfo&apos;: 修改UserInfo表的表说明\nexecute sp_updateextendedproperty \n&apos;MS_Description&apos;,\n&apos;用户信息表&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\nnull,\nnull;\n</code></pre><p><strong>添加字段说明</strong>  </p>\n<pre><code>-- 为字段添加字段说明\n-- &apos;用户编号&apos;：字段说明的值\n-- &apos;UserInfo&apos;：添加说明的字段属于UserInfo表的字段\n-- &apos;UserNo&apos;：添加说明的字段\nexecute sp_addextendedproperty \n&apos;MS_Description&apos;,\n&apos;用户编号&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\n&apos;column&apos;,\n&apos;UserNo&apos;;  \n</code></pre><p><strong>删除字段说明</strong>  </p>\n<pre><code>-- 删除字段中的字段说明\n-- &apos;UserInfo&apos;: 删除UserInfo表下的字段说明\n-- &apos;UserNo&apos;: 删除UserInfo表下UserNo字段的字段说明\nexecute sp_dropextendedproperty \n&apos;MS_Description&apos;,\n&apos;user&apos;,\n&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\n&apos;column&apos;,\n&apos;UserNo&apos;;  \n</code></pre><p><strong>修改字段说明</strong></p>\n<pre><code>-- 修改字段中的字段说明\n-- &apos;用户编号&apos;：字段说明的值\n-- &apos;UserInfo&apos;：添加说明的字段属于UserInfo表的字段\n-- &apos;UserNo&apos;：添加说明的字段\nexecute sp_updateextendedproperty\n&apos;MS_Description&apos;,\n&apos;用户编号&apos;,\n&apos;user&apos;,&apos;dbo&apos;,\n&apos;table&apos;,\n&apos;UserInfo&apos;,\n&apos;column&apos;,\n&apos;UserNo&apos;;  \n</code></pre><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/stupidbird003/article/details/64562683\" target=\"_blank\" rel=\"noopener\">sql server 添加表注释、字段注释</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/SQL-Server%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/\">SQL Server数据库学习笔记</a>】</p>\n</blockquote>"},{"title":"idea中导入maven项目","date":"2018-06-26T11:51:37.000Z","_content":"\n我们项目组所开发的项目没有做前后端分离，所有开发人员都在同一个项目下编写代码，项目的前端使用jQuery+Layui+GoJS+echarts实现，后端使用的是SSH，因为没做前后端分离再加上后端开发用了maven构建代码，所以每个开发人员的开发工具都是idea，刚接触项目时，因为我是做前端开发，对后端不熟，每次搭建开发环境的时候都要叫后端开发的同事帮忙，经过不断摸索，我现在差不多也能自己独立完成开发环境的配置。\n<!--more-->\n\n#### 准备一个maven项目\n首先需要准备一个使用maven构建的项目，我这里用cloud-component项目作为演示\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062601.png)\n\n#### 将项目导入到idea中\n\n**启动idea**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062602.png)\n\n**选择 Import Project 选项**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062603.png)\n\n**选择项目目录下的cloud-pom文件夹，因为cloud-pom文件夹下有个pom.xml文件，pom.xml文件中记录了项目的配置信息，选好后单击OK按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062604.png)\n\n**选择项目的构建方式为Maven，选好后单击Next按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062605.png)\n\n**此时会弹出一个项目的设置对话框，不用管直接使用默认设置点击Next**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062606.png)\n\n**此时会弹出一个对话框，并且会会自动选好一个Maven项目，直接单击Next按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062607.png)\n\n**设置JDK，设置好后单击Next按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062608.png)\n\n**在弹出的对话框中单击Finish按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062609.png)\n\n**此时会进入idea的主界面，并且在idea的底部会出现一个滚动条，并且会不断刷新进度表示在下载项目的依赖**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062610.png)\n\n####  配置Spring\n**进入idea，并且选择菜单栏上的File**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062611.png)\n\n**在弹出的下拉菜单中选择Project Structure**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062612.png)\n\n**依次进行以下操作：选择Modules、选择cloud-admin下的Spring、点击对话框上的加号**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062613.png)\n\n**首先勾选上cloud-admin下的那两个选择，然后单击OK按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062614.png)\n\n**此时可以看到配置好了Spring，最后单击OK按钮完成Spring配置**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062615.png)\n\n\n#### 配置Tomcat\n**点击工具栏中，箭头所指的图标**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062616.png)\n\n**在弹出的下拉菜单中选择Edit Configurations**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062617.png)\n\n**点击弹出的对话框上的加号**  \n![](http://oq3pg8pg4.bkt.clouddn.com/201806261800.png)\n\n**在弹出的下拉菜单中选择Tomcat Server，并在弹出的二级菜单中选择Local表示选择本地的Tomcat**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062619.png)\n\n**在弹出的Tomcat配置界面中选择Deployment**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062620.png)\n\n**单击加号**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062621.png)\n\n**选择下拉菜单中的选择下拉菜单中的Artifact**\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062622.png)\n\n**在弹出的对话框中选择cloud-admin:war exploded，选择完成后单击OK按钮**\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062623.png)\n\n**设置 Application context的值为/clod-admin，设置完成后单击OK按钮**\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062624.png)\n\n**在Tomcat配置界面依次做如下设置：设置Name的值为clod-admin(这里当idea中配置了多个Tomcat时为了区分Tomcat)、设置Tomcat的版本、选择On 'Update' action 的值为 Update classes and resources 设置 On frame deactivation 的值为 Update classes and resources，设置完成后单击OK按钮，此时就配置完成Tomcat**\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062625.png)\n\n**此时单击下图圈出的绿色箭头可以启动Tomcat，并且服务器的连接为http://localhost:8080/cloud-admin/**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062626.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[idea中导入maven项目](http://meishadevs.com/blog/idea%E4%B8%AD%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE/)】","source":"_posts/idea中导入maven项目.md","raw":"---\ntitle: idea中导入maven项目\ncategories: \n  - Java\ntags:\n  - Java\ndate: 2018-06-26 19:51:37\n---\n\n我们项目组所开发的项目没有做前后端分离，所有开发人员都在同一个项目下编写代码，项目的前端使用jQuery+Layui+GoJS+echarts实现，后端使用的是SSH，因为没做前后端分离再加上后端开发用了maven构建代码，所以每个开发人员的开发工具都是idea，刚接触项目时，因为我是做前端开发，对后端不熟，每次搭建开发环境的时候都要叫后端开发的同事帮忙，经过不断摸索，我现在差不多也能自己独立完成开发环境的配置。\n<!--more-->\n\n#### 准备一个maven项目\n首先需要准备一个使用maven构建的项目，我这里用cloud-component项目作为演示\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062601.png)\n\n#### 将项目导入到idea中\n\n**启动idea**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062602.png)\n\n**选择 Import Project 选项**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062603.png)\n\n**选择项目目录下的cloud-pom文件夹，因为cloud-pom文件夹下有个pom.xml文件，pom.xml文件中记录了项目的配置信息，选好后单击OK按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062604.png)\n\n**选择项目的构建方式为Maven，选好后单击Next按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062605.png)\n\n**此时会弹出一个项目的设置对话框，不用管直接使用默认设置点击Next**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062606.png)\n\n**此时会弹出一个对话框，并且会会自动选好一个Maven项目，直接单击Next按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062607.png)\n\n**设置JDK，设置好后单击Next按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062608.png)\n\n**在弹出的对话框中单击Finish按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062609.png)\n\n**此时会进入idea的主界面，并且在idea的底部会出现一个滚动条，并且会不断刷新进度表示在下载项目的依赖**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062610.png)\n\n####  配置Spring\n**进入idea，并且选择菜单栏上的File**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062611.png)\n\n**在弹出的下拉菜单中选择Project Structure**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062612.png)\n\n**依次进行以下操作：选择Modules、选择cloud-admin下的Spring、点击对话框上的加号**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062613.png)\n\n**首先勾选上cloud-admin下的那两个选择，然后单击OK按钮**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062614.png)\n\n**此时可以看到配置好了Spring，最后单击OK按钮完成Spring配置**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062615.png)\n\n\n#### 配置Tomcat\n**点击工具栏中，箭头所指的图标**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062616.png)\n\n**在弹出的下拉菜单中选择Edit Configurations**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062617.png)\n\n**点击弹出的对话框上的加号**  \n![](http://oq3pg8pg4.bkt.clouddn.com/201806261800.png)\n\n**在弹出的下拉菜单中选择Tomcat Server，并在弹出的二级菜单中选择Local表示选择本地的Tomcat**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062619.png)\n\n**在弹出的Tomcat配置界面中选择Deployment**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062620.png)\n\n**单击加号**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062621.png)\n\n**选择下拉菜单中的选择下拉菜单中的Artifact**\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062622.png)\n\n**在弹出的对话框中选择cloud-admin:war exploded，选择完成后单击OK按钮**\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062623.png)\n\n**设置 Application context的值为/clod-admin，设置完成后单击OK按钮**\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062624.png)\n\n**在Tomcat配置界面依次做如下设置：设置Name的值为clod-admin(这里当idea中配置了多个Tomcat时为了区分Tomcat)、设置Tomcat的版本、选择On 'Update' action 的值为 Update classes and resources 设置 On frame deactivation 的值为 Update classes and resources，设置完成后单击OK按钮，此时就配置完成Tomcat**\n![](http://oq3pg8pg4.bkt.clouddn.com/2018062625.png)\n\n**此时单击下图圈出的绿色箭头可以启动Tomcat，并且服务器的连接为http://localhost:8080/cloud-admin/**  \n![](http://oq3pg8pg4.bkt.clouddn.com/2018062626.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[idea中导入maven项目](http://meishadevs.com/blog/idea%E4%B8%AD%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE/)】","slug":"idea中导入maven项目","published":1,"updated":"2018-07-07T02:23:40.194Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnk0007jc7uanhlzpwo","content":"<p>我们项目组所开发的项目没有做前后端分离，所有开发人员都在同一个项目下编写代码，项目的前端使用jQuery+Layui+GoJS+echarts实现，后端使用的是SSH，因为没做前后端分离再加上后端开发用了maven构建代码，所以每个开发人员的开发工具都是idea，刚接触项目时，因为我是做前端开发，对后端不熟，每次搭建开发环境的时候都要叫后端开发的同事帮忙，经过不断摸索，我现在差不多也能自己独立完成开发环境的配置。<br><a id=\"more\"></a></p>\n<h4 id=\"准备一个maven项目\"><a href=\"#准备一个maven项目\" class=\"headerlink\" title=\"准备一个maven项目\"></a>准备一个maven项目</h4><p>首先需要准备一个使用maven构建的项目，我这里用cloud-component项目作为演示<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062601.png\" alt=\"\"></p>\n<h4 id=\"将项目导入到idea中\"><a href=\"#将项目导入到idea中\" class=\"headerlink\" title=\"将项目导入到idea中\"></a>将项目导入到idea中</h4><p><strong>启动idea</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062602.png\" alt=\"\"></p>\n<p><strong>选择 Import Project 选项</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062603.png\" alt=\"\"></p>\n<p><strong>选择项目目录下的cloud-pom文件夹，因为cloud-pom文件夹下有个pom.xml文件，pom.xml文件中记录了项目的配置信息，选好后单击OK按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062604.png\" alt=\"\"></p>\n<p><strong>选择项目的构建方式为Maven，选好后单击Next按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062605.png\" alt=\"\"></p>\n<p><strong>此时会弹出一个项目的设置对话框，不用管直接使用默认设置点击Next</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062606.png\" alt=\"\"></p>\n<p><strong>此时会弹出一个对话框，并且会会自动选好一个Maven项目，直接单击Next按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062607.png\" alt=\"\"></p>\n<p><strong>设置JDK，设置好后单击Next按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062608.png\" alt=\"\"></p>\n<p><strong>在弹出的对话框中单击Finish按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062609.png\" alt=\"\"></p>\n<p><strong>此时会进入idea的主界面，并且在idea的底部会出现一个滚动条，并且会不断刷新进度表示在下载项目的依赖</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062610.png\" alt=\"\"></p>\n<h4 id=\"配置Spring\"><a href=\"#配置Spring\" class=\"headerlink\" title=\"配置Spring\"></a>配置Spring</h4><p><strong>进入idea，并且选择菜单栏上的File</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062611.png\" alt=\"\"></p>\n<p><strong>在弹出的下拉菜单中选择Project Structure</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062612.png\" alt=\"\"></p>\n<p><strong>依次进行以下操作：选择Modules、选择cloud-admin下的Spring、点击对话框上的加号</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062613.png\" alt=\"\"></p>\n<p><strong>首先勾选上cloud-admin下的那两个选择，然后单击OK按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062614.png\" alt=\"\"></p>\n<p><strong>此时可以看到配置好了Spring，最后单击OK按钮完成Spring配置</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062615.png\" alt=\"\"></p>\n<h4 id=\"配置Tomcat\"><a href=\"#配置Tomcat\" class=\"headerlink\" title=\"配置Tomcat\"></a>配置Tomcat</h4><p><strong>点击工具栏中，箭头所指的图标</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062616.png\" alt=\"\"></p>\n<p><strong>在弹出的下拉菜单中选择Edit Configurations</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062617.png\" alt=\"\"></p>\n<p><strong>点击弹出的对话框上的加号</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/201806261800.png\" alt=\"\"></p>\n<p><strong>在弹出的下拉菜单中选择Tomcat Server，并在弹出的二级菜单中选择Local表示选择本地的Tomcat</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062619.png\" alt=\"\"></p>\n<p><strong>在弹出的Tomcat配置界面中选择Deployment</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062620.png\" alt=\"\"></p>\n<p><strong>单击加号</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062621.png\" alt=\"\"></p>\n<p><strong>选择下拉菜单中的选择下拉菜单中的Artifact</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062622.png\" alt=\"\"></p>\n<p><strong>在弹出的对话框中选择cloud-admin:war exploded，选择完成后单击OK按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062623.png\" alt=\"\"></p>\n<p><strong>设置 Application context的值为/clod-admin，设置完成后单击OK按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062624.png\" alt=\"\"></p>\n<p><strong>在Tomcat配置界面依次做如下设置：设置Name的值为clod-admin(这里当idea中配置了多个Tomcat时为了区分Tomcat)、设置Tomcat的版本、选择On ‘Update’ action 的值为 Update classes and resources 设置 On frame deactivation 的值为 Update classes and resources，设置完成后单击OK按钮，此时就配置完成Tomcat</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062625.png\" alt=\"\"></p>\n<p><strong>此时单击下图圈出的绿色箭头可以启动Tomcat，并且服务器的连接为<a href=\"http://localhost:8080/cloud-admin/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/cloud-admin/</a></strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062626.png\" alt=\"\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/idea%E4%B8%AD%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE/\">idea中导入maven项目</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>我们项目组所开发的项目没有做前后端分离，所有开发人员都在同一个项目下编写代码，项目的前端使用jQuery+Layui+GoJS+echarts实现，后端使用的是SSH，因为没做前后端分离再加上后端开发用了maven构建代码，所以每个开发人员的开发工具都是idea，刚接触项目时，因为我是做前端开发，对后端不熟，每次搭建开发环境的时候都要叫后端开发的同事帮忙，经过不断摸索，我现在差不多也能自己独立完成开发环境的配置。<br>","more":"</p>\n<h4 id=\"准备一个maven项目\"><a href=\"#准备一个maven项目\" class=\"headerlink\" title=\"准备一个maven项目\"></a>准备一个maven项目</h4><p>首先需要准备一个使用maven构建的项目，我这里用cloud-component项目作为演示<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062601.png\" alt=\"\"></p>\n<h4 id=\"将项目导入到idea中\"><a href=\"#将项目导入到idea中\" class=\"headerlink\" title=\"将项目导入到idea中\"></a>将项目导入到idea中</h4><p><strong>启动idea</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062602.png\" alt=\"\"></p>\n<p><strong>选择 Import Project 选项</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062603.png\" alt=\"\"></p>\n<p><strong>选择项目目录下的cloud-pom文件夹，因为cloud-pom文件夹下有个pom.xml文件，pom.xml文件中记录了项目的配置信息，选好后单击OK按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062604.png\" alt=\"\"></p>\n<p><strong>选择项目的构建方式为Maven，选好后单击Next按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062605.png\" alt=\"\"></p>\n<p><strong>此时会弹出一个项目的设置对话框，不用管直接使用默认设置点击Next</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062606.png\" alt=\"\"></p>\n<p><strong>此时会弹出一个对话框，并且会会自动选好一个Maven项目，直接单击Next按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062607.png\" alt=\"\"></p>\n<p><strong>设置JDK，设置好后单击Next按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062608.png\" alt=\"\"></p>\n<p><strong>在弹出的对话框中单击Finish按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062609.png\" alt=\"\"></p>\n<p><strong>此时会进入idea的主界面，并且在idea的底部会出现一个滚动条，并且会不断刷新进度表示在下载项目的依赖</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062610.png\" alt=\"\"></p>\n<h4 id=\"配置Spring\"><a href=\"#配置Spring\" class=\"headerlink\" title=\"配置Spring\"></a>配置Spring</h4><p><strong>进入idea，并且选择菜单栏上的File</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062611.png\" alt=\"\"></p>\n<p><strong>在弹出的下拉菜单中选择Project Structure</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062612.png\" alt=\"\"></p>\n<p><strong>依次进行以下操作：选择Modules、选择cloud-admin下的Spring、点击对话框上的加号</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062613.png\" alt=\"\"></p>\n<p><strong>首先勾选上cloud-admin下的那两个选择，然后单击OK按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062614.png\" alt=\"\"></p>\n<p><strong>此时可以看到配置好了Spring，最后单击OK按钮完成Spring配置</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062615.png\" alt=\"\"></p>\n<h4 id=\"配置Tomcat\"><a href=\"#配置Tomcat\" class=\"headerlink\" title=\"配置Tomcat\"></a>配置Tomcat</h4><p><strong>点击工具栏中，箭头所指的图标</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062616.png\" alt=\"\"></p>\n<p><strong>在弹出的下拉菜单中选择Edit Configurations</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062617.png\" alt=\"\"></p>\n<p><strong>点击弹出的对话框上的加号</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/201806261800.png\" alt=\"\"></p>\n<p><strong>在弹出的下拉菜单中选择Tomcat Server，并在弹出的二级菜单中选择Local表示选择本地的Tomcat</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062619.png\" alt=\"\"></p>\n<p><strong>在弹出的Tomcat配置界面中选择Deployment</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062620.png\" alt=\"\"></p>\n<p><strong>单击加号</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062621.png\" alt=\"\"></p>\n<p><strong>选择下拉菜单中的选择下拉菜单中的Artifact</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062622.png\" alt=\"\"></p>\n<p><strong>在弹出的对话框中选择cloud-admin:war exploded，选择完成后单击OK按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062623.png\" alt=\"\"></p>\n<p><strong>设置 Application context的值为/clod-admin，设置完成后单击OK按钮</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062624.png\" alt=\"\"></p>\n<p><strong>在Tomcat配置界面依次做如下设置：设置Name的值为clod-admin(这里当idea中配置了多个Tomcat时为了区分Tomcat)、设置Tomcat的版本、选择On ‘Update’ action 的值为 Update classes and resources 设置 On frame deactivation 的值为 Update classes and resources，设置完成后单击OK按钮，此时就配置完成Tomcat</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062625.png\" alt=\"\"></p>\n<p><strong>此时单击下图圈出的绿色箭头可以启动Tomcat，并且服务器的连接为<a href=\"http://localhost:8080/cloud-admin/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/cloud-admin/</a></strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/2018062626.png\" alt=\"\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/idea%E4%B8%AD%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE/\">idea中导入maven项目</a>】</p>\n</blockquote>"},{"title":"《JavaScript高级程序设计》读书笔记","date":"2017-05-04T03:40:36.000Z","_content":"\n##### kbit/s\n数据传送率的单位.意思是每秒钟多少千字节.比如20Kbit/s就是每秒钟20000个字节.一般上网、下载的速度用这个单位.adsl宽带上网下载速度大概为30-50Kbit/s.\n\n<!--more-->\n\n##### JavaScript的组成\n**JavaScript**由**ECMAScript(JavaScript的版本)**、**DOM(文档对象模型)**、**BOM(浏览器对象模型)**三部分组成\n\n##### 开启严格模式的方法\n在js脚本的最顶部添加下面一段代码\n\n\t\"use strict\"\n\n##### 创建全局变量的方法\n**方法1：**在函数外部定义一个变量，在函数内部使用变量\n\n\tvar message;\n\n\tfunction test() {\n\t\tmessage = \"hello world\";\n\t}\n\n\ttest();\n\talert(message);\n\n**方法2：**在函数内部定义变量，并且不写**var**操作符\n\n\tfunction test() {\n\t\tmessage = \"hello world\";\n\t}\n\n\ttest();\n\talert(message);\n\n##### 将十进制转换成二进制的方法\n除二取余，倒序排列。例如将十进制的18转换成二进制  \n**第一步：**计算除二取余  \n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170503113832828.png)  \n**第二步：**将余数倒序排列就可以得到18的二进制是10010\n\n##### 将十进制的负数转换成二进制\n负数的二进制是用负数的绝对值的补码表示，以计算-18的二进制为例介绍负数的二进制计算方法  \n**第一步：**计算-18的绝对值 |-18| = 18  \n**第二步：**计算18的二进制 0000 0000 0000 0000 0000 0000 0001 0010  \n**第三步：**计算二进制的反码 1111 1111 1111 1111 1111 1111 1110 1101  \n**第四步：**将反码加1 1111 1111 1111 1111 1111 1111 1110 1110  \n**所以-18的二进制值** 1111 1111 1111 1111 1111 1111 1110 1110，其中第31位表示的是符号位不参与计算，1表示是负数，0表示是正数，位的顺序是从右往左排列的从0开始，也就是所最右边的哪位是第0位，然后往左依次是1、2、3、......位以此类推，最后一位是第31位\n\n##### 计算按位非操作的简便方法\n操作数的负值减1，例如计算25的按位非操作的方法如下\n\n\tvar num1 = 25;\n\tvar num2 = -num1 - 1;\n\n##### 获得变量的基本数据类型\nJavaScript中使用**typeof**关键字获得变量的基本数据类型\n\t\n\t var s = \"Nicholas\";\n    var b = true;\n    var i = 22;\n    var u;\n    var n = null;\n    var o = new Object();\n\n    alert(typeof s);  //string\n    alert(typeof i);  //number\n    alert(typeof b);  //boolean\n    alert(typeof u);  //undefined\n    alert(typeof n);  //object\n    alert(typeof o);  //object\n\n##### 判断变量的引用的数据类型\nJavaScript中使用**instanceof**关键字判断变量的引用数据类型\n\t\n\t var person = new Object();\n    var colors = [];\n    var pattern = new RegExp();\n\n    alert(person instanceof Object);   //变量person是Object类型吗\n    alert(colors instanceof Array);    //变量colors是Array类型吗\n    alert(pattern instanceof RegExp);  //变量pattern是RegExp类型吗\n\n##### JavaScript的基本数据类型\nJavaScript一共有5种基本数据类型，分别是**Undefined**、**Null**、**Boolean**、**Number**和**String**。\n\n##### JavaScript中的引用类型\n常见的引用类型：**Object**、**Array**、**Function**、**RegExp**\n\n##### 构造函数\n**构造函数的定义：**构造函数是一种特殊的方法，主要用在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中\n\n**构造函数的特点：**  \n\n- 构造函数的函数名和类名相同\n- 构造函数定义时没有返回值\n- 构造函数只能用于定义对象时初始化对象  \n\n##### 创建Object实例(对象)的两种方式\n**方式1：**使用new操作符后跟Object构造函数\n\t\n\tvar person = new Object();\n    person.name = \"Nicholas\";\n    person.age = 29;\n\n**方式2：**使用对象字面量表示法\n\t\n\t var person = {\n        name : \"Nicholas\",\n        age : 29\n    };\n\n##### 创建数组的方式\n**方式1：**使用Array的构造函数创建数组\n\n\t//创建一个空数组\n    var colors = new Array();\n\n    //创建一个保存20个数据的数组\n    var colors = new Array(20);\n\n    //创建一个保存了3个字符串的数组\n    var colors = new Array(\"red\", \"blue\", \"green\");\n\n**方式2：**使用Array的构造函数创建数组时也可以省略**new**操作符\n\n\t //创建一个空数组\n    var colors = Array();\n\n    //创建一个保存20个数据的数组\n    var colors = Array(20);\n\n    //创建一个包含3个字符串的数组\n    var colors = Array(\"red\", \"blue\", \"green\");\n\n**方式3：**使用数组的字面量创建数组\n\t\n\t //创建一个空数组\n    var colors = [];\n\n    //创建一个包含3个字符串的数组\n    var colors = [\"red\", \"blue\", \"green\"];\n\n##### 栈与队列\n**栈的访问规则：**先进后出  \n**队列的访问规则：**先进先出\n\n##### JavaScript中创建对象的方式\n**方式1：**使用Object创建对象\n\t\n\tvar person = new Object();\n    person.name = \"Nicholas\";\n    person.age = 29;\n    person.job = \"Software Engineer\";\n\n    person.showName = function () {\n        console.log(this.name);\n    }\n\n    person.showAge = function () {\n        console.log(this.age);\n    }\n\n    person.showJob = function () {\n        console.log(this.job);\n    }\n\n**方式2：**用对象字面量语法创建对象\n\t\n\tvar person = {\n        name: \"Nicholas\",\n        age: 29,\n        job: \"Software Engineer\",\n\n        showName: function () {\n            console.log(this.name);\n        },\n\n        showAge: function () {\n            console.log(this.age);\n        },\n\n        showJob: function () {\n            console.log(this.job);\n        }\n    };\n\n**方法3：**用函数封装特定接口创建对象\n\t\n\tfunction createPerson(name, age, job) {\n        var o = new Object();\n        o.name = name;\n        o.age = age;\n        o.job = job;\n\n        o.showName = function () {\n            console.log(this.name);\n        };\n\n        o.showAge = function () {\n            console.log(this.age);\n        };\n\n        o.showJob = function () {\n            console.log(this.job);\n        };\n\n        return o;\n    }\n\n    var person1 = createPerson(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = createPerson(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法4：**使用构造函数创建对象\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n\n        this.showName = function () {\n            console.log(this.name);\n        };\n\n        this.showAge = function () {\n            console.log(this.age);\n        };\n\n        this.showJob = function () {\n            console.log(this.job);\n        }\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法5：**使用构造函数创建对象改进版\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n\n        this.showName = new Function(\"console.log(this.name)\");\n        this.showAge = new Function(\"console.log(this.age)\");\n        this.showJob = new Function(\"console.log(this.job)\");\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法6：**将成员函数放在外面\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n        this.showName = showName;\n        this.showAge = showAge;\n        this.showJob = showJob;\n    }\n\n    function showName() {\n        console.log(this.name);\n    }\n\n    function showAge() {\n        console.log(this.age);\n    }\n\n    function showJob() {\n        console.log(this.job);\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方式7：**使用原型创建对象\n\t\n\t function Person() {\n    }\n\n    Person.prototype.name = \"Nicholas\";\n    Person.prototype.age = 29;\n    Person.prototype.job = \"Software Engineer\";\n\n    Person.prototype.showName = function () {\n        console.log(this.name);\n    }\n\n    Person.prototype.showAge = function () {\n        console.log(this.age);\n    }\n\n    Person.prototype.showJob = function () {\n        console.log(this.job);\n    }\n\n    var person1 = new Person();\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n##### js中获得父节点下所有子节点的方法  \n**childNodes：** 获得的子节点中包含文本节点  \n**children:** 获得的子节点中不包含文本节点\n\n##### let、var、const 三者的区别  \n**var：** 使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象  \n**let：** 使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升  \n**const：** 使用const声明的是常量，在后面出现的代码中不能再修改该常量的值\n\n##### 属性的描述符\n**Configurable：**表示能否通过delete删除属性，从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，它的默认值是true  \n**Enumerable：**表示能否通过 for-in 循环返回属性，它的默认值是true  \n**Writable：**表示能否修改属性的值，它的默认值是true  \n**Value：**属性的值\n\n##### 访问器属性的特性\n**Configurable：**表示能否通过delete删除属性，从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，它的默认值是true  \n**Enumerable：**表示能否通过 for-in 循环返回属性，它的默认值是true  \n**Get：**在读取属性时调用的函数，默认值为undefined  \n**Set：**在写入属性时调用的函数，默认值为undefined\n\n##### target 与 currentTarget\n**target：**返回触发事件的那个节点，即事件最初发生的节点  \n**currentTarget：**返回事件当前所在的节点，即正在执行的监听函数所绑定的那个节点\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[《JavaScript高级程序设计》读书笔记](http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/)】","source":"_posts/《JavaScript高级程序设计》读书笔记.md","raw":"---\ntitle: 《JavaScript高级程序设计》读书笔记\ncategories:\n  - 读书笔记\ntags:\n  - 读书笔记\n  - JavaScript\ndate: 2017-05-04 11:40:36\n---\n\n##### kbit/s\n数据传送率的单位.意思是每秒钟多少千字节.比如20Kbit/s就是每秒钟20000个字节.一般上网、下载的速度用这个单位.adsl宽带上网下载速度大概为30-50Kbit/s.\n\n<!--more-->\n\n##### JavaScript的组成\n**JavaScript**由**ECMAScript(JavaScript的版本)**、**DOM(文档对象模型)**、**BOM(浏览器对象模型)**三部分组成\n\n##### 开启严格模式的方法\n在js脚本的最顶部添加下面一段代码\n\n\t\"use strict\"\n\n##### 创建全局变量的方法\n**方法1：**在函数外部定义一个变量，在函数内部使用变量\n\n\tvar message;\n\n\tfunction test() {\n\t\tmessage = \"hello world\";\n\t}\n\n\ttest();\n\talert(message);\n\n**方法2：**在函数内部定义变量，并且不写**var**操作符\n\n\tfunction test() {\n\t\tmessage = \"hello world\";\n\t}\n\n\ttest();\n\talert(message);\n\n##### 将十进制转换成二进制的方法\n除二取余，倒序排列。例如将十进制的18转换成二进制  \n**第一步：**计算除二取余  \n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170503113832828.png)  \n**第二步：**将余数倒序排列就可以得到18的二进制是10010\n\n##### 将十进制的负数转换成二进制\n负数的二进制是用负数的绝对值的补码表示，以计算-18的二进制为例介绍负数的二进制计算方法  \n**第一步：**计算-18的绝对值 |-18| = 18  \n**第二步：**计算18的二进制 0000 0000 0000 0000 0000 0000 0001 0010  \n**第三步：**计算二进制的反码 1111 1111 1111 1111 1111 1111 1110 1101  \n**第四步：**将反码加1 1111 1111 1111 1111 1111 1111 1110 1110  \n**所以-18的二进制值** 1111 1111 1111 1111 1111 1111 1110 1110，其中第31位表示的是符号位不参与计算，1表示是负数，0表示是正数，位的顺序是从右往左排列的从0开始，也就是所最右边的哪位是第0位，然后往左依次是1、2、3、......位以此类推，最后一位是第31位\n\n##### 计算按位非操作的简便方法\n操作数的负值减1，例如计算25的按位非操作的方法如下\n\n\tvar num1 = 25;\n\tvar num2 = -num1 - 1;\n\n##### 获得变量的基本数据类型\nJavaScript中使用**typeof**关键字获得变量的基本数据类型\n\t\n\t var s = \"Nicholas\";\n    var b = true;\n    var i = 22;\n    var u;\n    var n = null;\n    var o = new Object();\n\n    alert(typeof s);  //string\n    alert(typeof i);  //number\n    alert(typeof b);  //boolean\n    alert(typeof u);  //undefined\n    alert(typeof n);  //object\n    alert(typeof o);  //object\n\n##### 判断变量的引用的数据类型\nJavaScript中使用**instanceof**关键字判断变量的引用数据类型\n\t\n\t var person = new Object();\n    var colors = [];\n    var pattern = new RegExp();\n\n    alert(person instanceof Object);   //变量person是Object类型吗\n    alert(colors instanceof Array);    //变量colors是Array类型吗\n    alert(pattern instanceof RegExp);  //变量pattern是RegExp类型吗\n\n##### JavaScript的基本数据类型\nJavaScript一共有5种基本数据类型，分别是**Undefined**、**Null**、**Boolean**、**Number**和**String**。\n\n##### JavaScript中的引用类型\n常见的引用类型：**Object**、**Array**、**Function**、**RegExp**\n\n##### 构造函数\n**构造函数的定义：**构造函数是一种特殊的方法，主要用在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中\n\n**构造函数的特点：**  \n\n- 构造函数的函数名和类名相同\n- 构造函数定义时没有返回值\n- 构造函数只能用于定义对象时初始化对象  \n\n##### 创建Object实例(对象)的两种方式\n**方式1：**使用new操作符后跟Object构造函数\n\t\n\tvar person = new Object();\n    person.name = \"Nicholas\";\n    person.age = 29;\n\n**方式2：**使用对象字面量表示法\n\t\n\t var person = {\n        name : \"Nicholas\",\n        age : 29\n    };\n\n##### 创建数组的方式\n**方式1：**使用Array的构造函数创建数组\n\n\t//创建一个空数组\n    var colors = new Array();\n\n    //创建一个保存20个数据的数组\n    var colors = new Array(20);\n\n    //创建一个保存了3个字符串的数组\n    var colors = new Array(\"red\", \"blue\", \"green\");\n\n**方式2：**使用Array的构造函数创建数组时也可以省略**new**操作符\n\n\t //创建一个空数组\n    var colors = Array();\n\n    //创建一个保存20个数据的数组\n    var colors = Array(20);\n\n    //创建一个包含3个字符串的数组\n    var colors = Array(\"red\", \"blue\", \"green\");\n\n**方式3：**使用数组的字面量创建数组\n\t\n\t //创建一个空数组\n    var colors = [];\n\n    //创建一个包含3个字符串的数组\n    var colors = [\"red\", \"blue\", \"green\"];\n\n##### 栈与队列\n**栈的访问规则：**先进后出  \n**队列的访问规则：**先进先出\n\n##### JavaScript中创建对象的方式\n**方式1：**使用Object创建对象\n\t\n\tvar person = new Object();\n    person.name = \"Nicholas\";\n    person.age = 29;\n    person.job = \"Software Engineer\";\n\n    person.showName = function () {\n        console.log(this.name);\n    }\n\n    person.showAge = function () {\n        console.log(this.age);\n    }\n\n    person.showJob = function () {\n        console.log(this.job);\n    }\n\n**方式2：**用对象字面量语法创建对象\n\t\n\tvar person = {\n        name: \"Nicholas\",\n        age: 29,\n        job: \"Software Engineer\",\n\n        showName: function () {\n            console.log(this.name);\n        },\n\n        showAge: function () {\n            console.log(this.age);\n        },\n\n        showJob: function () {\n            console.log(this.job);\n        }\n    };\n\n**方法3：**用函数封装特定接口创建对象\n\t\n\tfunction createPerson(name, age, job) {\n        var o = new Object();\n        o.name = name;\n        o.age = age;\n        o.job = job;\n\n        o.showName = function () {\n            console.log(this.name);\n        };\n\n        o.showAge = function () {\n            console.log(this.age);\n        };\n\n        o.showJob = function () {\n            console.log(this.job);\n        };\n\n        return o;\n    }\n\n    var person1 = createPerson(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = createPerson(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法4：**使用构造函数创建对象\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n\n        this.showName = function () {\n            console.log(this.name);\n        };\n\n        this.showAge = function () {\n            console.log(this.age);\n        };\n\n        this.showJob = function () {\n            console.log(this.job);\n        }\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法5：**使用构造函数创建对象改进版\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n\n        this.showName = new Function(\"console.log(this.name)\");\n        this.showAge = new Function(\"console.log(this.age)\");\n        this.showJob = new Function(\"console.log(this.job)\");\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法6：**将成员函数放在外面\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n        this.showName = showName;\n        this.showAge = showAge;\n        this.showJob = showJob;\n    }\n\n    function showName() {\n        console.log(this.name);\n    }\n\n    function showAge() {\n        console.log(this.age);\n    }\n\n    function showJob() {\n        console.log(this.job);\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方式7：**使用原型创建对象\n\t\n\t function Person() {\n    }\n\n    Person.prototype.name = \"Nicholas\";\n    Person.prototype.age = 29;\n    Person.prototype.job = \"Software Engineer\";\n\n    Person.prototype.showName = function () {\n        console.log(this.name);\n    }\n\n    Person.prototype.showAge = function () {\n        console.log(this.age);\n    }\n\n    Person.prototype.showJob = function () {\n        console.log(this.job);\n    }\n\n    var person1 = new Person();\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n##### js中获得父节点下所有子节点的方法  \n**childNodes：** 获得的子节点中包含文本节点  \n**children:** 获得的子节点中不包含文本节点\n\n##### let、var、const 三者的区别  \n**var：** 使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象  \n**let：** 使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升  \n**const：** 使用const声明的是常量，在后面出现的代码中不能再修改该常量的值\n\n##### 属性的描述符\n**Configurable：**表示能否通过delete删除属性，从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，它的默认值是true  \n**Enumerable：**表示能否通过 for-in 循环返回属性，它的默认值是true  \n**Writable：**表示能否修改属性的值，它的默认值是true  \n**Value：**属性的值\n\n##### 访问器属性的特性\n**Configurable：**表示能否通过delete删除属性，从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，它的默认值是true  \n**Enumerable：**表示能否通过 for-in 循环返回属性，它的默认值是true  \n**Get：**在读取属性时调用的函数，默认值为undefined  \n**Set：**在写入属性时调用的函数，默认值为undefined\n\n##### target 与 currentTarget\n**target：**返回触发事件的那个节点，即事件最初发生的节点  \n**currentTarget：**返回事件当前所在的节点，即正在执行的监听函数所绑定的那个节点\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[《JavaScript高级程序设计》读书笔记](http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/)】","slug":"《JavaScript高级程序设计》读书笔记","published":1,"updated":"2018-07-07T02:23:40.217Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnk0008jc7ucieujomt","content":"<h5 id=\"kbit-s\"><a href=\"#kbit-s\" class=\"headerlink\" title=\"kbit/s\"></a>kbit/s</h5><p>数据传送率的单位.意思是每秒钟多少千字节.比如20Kbit/s就是每秒钟20000个字节.一般上网、下载的速度用这个单位.adsl宽带上网下载速度大概为30-50Kbit/s.</p>\n<a id=\"more\"></a>\n<h5 id=\"JavaScript的组成\"><a href=\"#JavaScript的组成\" class=\"headerlink\" title=\"JavaScript的组成\"></a>JavaScript的组成</h5><p><strong>JavaScript</strong>由<strong>ECMAScript(JavaScript的版本)</strong>、<strong>DOM(文档对象模型)</strong>、<strong>BOM(浏览器对象模型)</strong>三部分组成</p>\n<h5 id=\"开启严格模式的方法\"><a href=\"#开启严格模式的方法\" class=\"headerlink\" title=\"开启严格模式的方法\"></a>开启严格模式的方法</h5><p>在js脚本的最顶部添加下面一段代码</p>\n<pre><code>&quot;use strict&quot;\n</code></pre><h5 id=\"创建全局变量的方法\"><a href=\"#创建全局变量的方法\" class=\"headerlink\" title=\"创建全局变量的方法\"></a>创建全局变量的方法</h5><p><strong>方法1：</strong>在函数外部定义一个变量，在函数内部使用变量</p>\n<pre><code>var message;\n\nfunction test() {\n    message = &quot;hello world&quot;;\n}\n\ntest();\nalert(message);\n</code></pre><p><strong>方法2：</strong>在函数内部定义变量，并且不写<strong>var</strong>操作符</p>\n<pre><code>function test() {\n    message = &quot;hello world&quot;;\n}\n\ntest();\nalert(message);\n</code></pre><h5 id=\"将十进制转换成二进制的方法\"><a href=\"#将十进制转换成二进制的方法\" class=\"headerlink\" title=\"将十进制转换成二进制的方法\"></a>将十进制转换成二进制的方法</h5><p>除二取余，倒序排列。例如将十进制的18转换成二进制<br><strong>第一步：</strong>计算除二取余<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170503113832828.png\" alt=\"这里写图片描述\"><br><strong>第二步：</strong>将余数倒序排列就可以得到18的二进制是10010</p>\n<h5 id=\"将十进制的负数转换成二进制\"><a href=\"#将十进制的负数转换成二进制\" class=\"headerlink\" title=\"将十进制的负数转换成二进制\"></a>将十进制的负数转换成二进制</h5><p>负数的二进制是用负数的绝对值的补码表示，以计算-18的二进制为例介绍负数的二进制计算方法<br><strong>第一步：</strong>计算-18的绝对值 |-18| = 18<br><strong>第二步：</strong>计算18的二进制 0000 0000 0000 0000 0000 0000 0001 0010<br><strong>第三步：</strong>计算二进制的反码 1111 1111 1111 1111 1111 1111 1110 1101<br><strong>第四步：</strong>将反码加1 1111 1111 1111 1111 1111 1111 1110 1110<br><strong>所以-18的二进制值</strong> 1111 1111 1111 1111 1111 1111 1110 1110，其中第31位表示的是符号位不参与计算，1表示是负数，0表示是正数，位的顺序是从右往左排列的从0开始，也就是所最右边的哪位是第0位，然后往左依次是1、2、3、……位以此类推，最后一位是第31位</p>\n<h5 id=\"计算按位非操作的简便方法\"><a href=\"#计算按位非操作的简便方法\" class=\"headerlink\" title=\"计算按位非操作的简便方法\"></a>计算按位非操作的简便方法</h5><p>操作数的负值减1，例如计算25的按位非操作的方法如下</p>\n<pre><code>var num1 = 25;\nvar num2 = -num1 - 1;\n</code></pre><h5 id=\"获得变量的基本数据类型\"><a href=\"#获得变量的基本数据类型\" class=\"headerlink\" title=\"获得变量的基本数据类型\"></a>获得变量的基本数据类型</h5><p>JavaScript中使用<strong>typeof</strong>关键字获得变量的基本数据类型</p>\n<pre><code> var s = &quot;Nicholas&quot;;\nvar b = true;\nvar i = 22;\nvar u;\nvar n = null;\nvar o = new Object();\n\nalert(typeof s);  //string\nalert(typeof i);  //number\nalert(typeof b);  //boolean\nalert(typeof u);  //undefined\nalert(typeof n);  //object\nalert(typeof o);  //object\n</code></pre><h5 id=\"判断变量的引用的数据类型\"><a href=\"#判断变量的引用的数据类型\" class=\"headerlink\" title=\"判断变量的引用的数据类型\"></a>判断变量的引用的数据类型</h5><p>JavaScript中使用<strong>instanceof</strong>关键字判断变量的引用数据类型</p>\n<pre><code> var person = new Object();\nvar colors = [];\nvar pattern = new RegExp();\n\nalert(person instanceof Object);   //变量person是Object类型吗\nalert(colors instanceof Array);    //变量colors是Array类型吗\nalert(pattern instanceof RegExp);  //变量pattern是RegExp类型吗\n</code></pre><h5 id=\"JavaScript的基本数据类型\"><a href=\"#JavaScript的基本数据类型\" class=\"headerlink\" title=\"JavaScript的基本数据类型\"></a>JavaScript的基本数据类型</h5><p>JavaScript一共有5种基本数据类型，分别是<strong>Undefined</strong>、<strong>Null</strong>、<strong>Boolean</strong>、<strong>Number</strong>和<strong>String</strong>。</p>\n<h5 id=\"JavaScript中的引用类型\"><a href=\"#JavaScript中的引用类型\" class=\"headerlink\" title=\"JavaScript中的引用类型\"></a>JavaScript中的引用类型</h5><p>常见的引用类型：<strong>Object</strong>、<strong>Array</strong>、<strong>Function</strong>、<strong>RegExp</strong></p>\n<h5 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h5><p><strong>构造函数的定义：</strong>构造函数是一种特殊的方法，主要用在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中</p>\n<p><strong>构造函数的特点：</strong>  </p>\n<ul>\n<li>构造函数的函数名和类名相同</li>\n<li>构造函数定义时没有返回值</li>\n<li>构造函数只能用于定义对象时初始化对象  </li>\n</ul>\n<h5 id=\"创建Object实例-对象-的两种方式\"><a href=\"#创建Object实例-对象-的两种方式\" class=\"headerlink\" title=\"创建Object实例(对象)的两种方式\"></a>创建Object实例(对象)的两种方式</h5><p><strong>方式1：</strong>使用new操作符后跟Object构造函数</p>\n<pre><code>var person = new Object();\nperson.name = &quot;Nicholas&quot;;\nperson.age = 29;\n</code></pre><p><strong>方式2：</strong>使用对象字面量表示法</p>\n<pre><code> var person = {\n    name : &quot;Nicholas&quot;,\n    age : 29\n};\n</code></pre><h5 id=\"创建数组的方式\"><a href=\"#创建数组的方式\" class=\"headerlink\" title=\"创建数组的方式\"></a>创建数组的方式</h5><p><strong>方式1：</strong>使用Array的构造函数创建数组</p>\n<pre><code>//创建一个空数组\nvar colors = new Array();\n\n//创建一个保存20个数据的数组\nvar colors = new Array(20);\n\n//创建一个保存了3个字符串的数组\nvar colors = new Array(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;);\n</code></pre><p><strong>方式2：</strong>使用Array的构造函数创建数组时也可以省略<strong>new</strong>操作符</p>\n<pre><code> //创建一个空数组\nvar colors = Array();\n\n//创建一个保存20个数据的数组\nvar colors = Array(20);\n\n//创建一个包含3个字符串的数组\nvar colors = Array(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;);\n</code></pre><p><strong>方式3：</strong>使用数组的字面量创建数组</p>\n<pre><code> //创建一个空数组\nvar colors = [];\n\n//创建一个包含3个字符串的数组\nvar colors = [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;];\n</code></pre><h5 id=\"栈与队列\"><a href=\"#栈与队列\" class=\"headerlink\" title=\"栈与队列\"></a>栈与队列</h5><p><strong>栈的访问规则：</strong>先进后出<br><strong>队列的访问规则：</strong>先进先出</p>\n<h5 id=\"JavaScript中创建对象的方式\"><a href=\"#JavaScript中创建对象的方式\" class=\"headerlink\" title=\"JavaScript中创建对象的方式\"></a>JavaScript中创建对象的方式</h5><p><strong>方式1：</strong>使用Object创建对象</p>\n<pre><code>var person = new Object();\nperson.name = &quot;Nicholas&quot;;\nperson.age = 29;\nperson.job = &quot;Software Engineer&quot;;\n\nperson.showName = function () {\n    console.log(this.name);\n}\n\nperson.showAge = function () {\n    console.log(this.age);\n}\n\nperson.showJob = function () {\n    console.log(this.job);\n}\n</code></pre><p><strong>方式2：</strong>用对象字面量语法创建对象</p>\n<pre><code>var person = {\n    name: &quot;Nicholas&quot;,\n    age: 29,\n    job: &quot;Software Engineer&quot;,\n\n    showName: function () {\n        console.log(this.name);\n    },\n\n    showAge: function () {\n        console.log(this.age);\n    },\n\n    showJob: function () {\n        console.log(this.job);\n    }\n};\n</code></pre><p><strong>方法3：</strong>用函数封装特定接口创建对象</p>\n<pre><code>function createPerson(name, age, job) {\n    var o = new Object();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n\n    o.showName = function () {\n        console.log(this.name);\n    };\n\n    o.showAge = function () {\n        console.log(this.age);\n    };\n\n    o.showJob = function () {\n        console.log(this.job);\n    };\n\n    return o;\n}\n\nvar person1 = createPerson(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = createPerson(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法4：</strong>使用构造函数创建对象</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n\n    this.showName = function () {\n        console.log(this.name);\n    };\n\n    this.showAge = function () {\n        console.log(this.age);\n    };\n\n    this.showJob = function () {\n        console.log(this.job);\n    }\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法5：</strong>使用构造函数创建对象改进版</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n\n    this.showName = new Function(&quot;console.log(this.name)&quot;);\n    this.showAge = new Function(&quot;console.log(this.age)&quot;);\n    this.showJob = new Function(&quot;console.log(this.job)&quot;);\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法6：</strong>将成员函数放在外面</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n    this.showName = showName;\n    this.showAge = showAge;\n    this.showJob = showJob;\n}\n\nfunction showName() {\n    console.log(this.name);\n}\n\nfunction showAge() {\n    console.log(this.age);\n}\n\nfunction showJob() {\n    console.log(this.job);\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方式7：</strong>使用原型创建对象</p>\n<pre><code> function Person() {\n}\n\nPerson.prototype.name = &quot;Nicholas&quot;;\nPerson.prototype.age = 29;\nPerson.prototype.job = &quot;Software Engineer&quot;;\n\nPerson.prototype.showName = function () {\n    console.log(this.name);\n}\n\nPerson.prototype.showAge = function () {\n    console.log(this.age);\n}\n\nPerson.prototype.showJob = function () {\n    console.log(this.job);\n}\n\nvar person1 = new Person();\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n</code></pre><h5 id=\"js中获得父节点下所有子节点的方法\"><a href=\"#js中获得父节点下所有子节点的方法\" class=\"headerlink\" title=\"js中获得父节点下所有子节点的方法\"></a>js中获得父节点下所有子节点的方法</h5><p><strong>childNodes：</strong> 获得的子节点中包含文本节点<br><strong>children:</strong> 获得的子节点中不包含文本节点</p>\n<h5 id=\"let、var、const-三者的区别\"><a href=\"#let、var、const-三者的区别\" class=\"headerlink\" title=\"let、var、const 三者的区别\"></a>let、var、const 三者的区别</h5><p><strong>var：</strong> 使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象<br><strong>let：</strong> 使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升<br><strong>const：</strong> 使用const声明的是常量，在后面出现的代码中不能再修改该常量的值</p>\n<h5 id=\"属性的描述符\"><a href=\"#属性的描述符\" class=\"headerlink\" title=\"属性的描述符\"></a>属性的描述符</h5><p><strong>Configurable：</strong>表示能否通过delete删除属性，从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，它的默认值是true<br><strong>Enumerable：</strong>表示能否通过 for-in 循环返回属性，它的默认值是true<br><strong>Writable：</strong>表示能否修改属性的值，它的默认值是true<br><strong>Value：</strong>属性的值</p>\n<h5 id=\"访问器属性的特性\"><a href=\"#访问器属性的特性\" class=\"headerlink\" title=\"访问器属性的特性\"></a>访问器属性的特性</h5><p><strong>Configurable：</strong>表示能否通过delete删除属性，从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，它的默认值是true<br><strong>Enumerable：</strong>表示能否通过 for-in 循环返回属性，它的默认值是true<br><strong>Get：</strong>在读取属性时调用的函数，默认值为undefined<br><strong>Set：</strong>在写入属性时调用的函数，默认值为undefined</p>\n<h5 id=\"target-与-currentTarget\"><a href=\"#target-与-currentTarget\" class=\"headerlink\" title=\"target 与 currentTarget\"></a>target 与 currentTarget</h5><p><strong>target：</strong>返回触发事件的那个节点，即事件最初发生的节点<br><strong>currentTarget：</strong>返回事件当前所在的节点，即正在执行的监听函数所绑定的那个节点</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/\">《JavaScript高级程序设计》读书笔记</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<h5 id=\"kbit-s\"><a href=\"#kbit-s\" class=\"headerlink\" title=\"kbit/s\"></a>kbit/s</h5><p>数据传送率的单位.意思是每秒钟多少千字节.比如20Kbit/s就是每秒钟20000个字节.一般上网、下载的速度用这个单位.adsl宽带上网下载速度大概为30-50Kbit/s.</p>","more":"<h5 id=\"JavaScript的组成\"><a href=\"#JavaScript的组成\" class=\"headerlink\" title=\"JavaScript的组成\"></a>JavaScript的组成</h5><p><strong>JavaScript</strong>由<strong>ECMAScript(JavaScript的版本)</strong>、<strong>DOM(文档对象模型)</strong>、<strong>BOM(浏览器对象模型)</strong>三部分组成</p>\n<h5 id=\"开启严格模式的方法\"><a href=\"#开启严格模式的方法\" class=\"headerlink\" title=\"开启严格模式的方法\"></a>开启严格模式的方法</h5><p>在js脚本的最顶部添加下面一段代码</p>\n<pre><code>&quot;use strict&quot;\n</code></pre><h5 id=\"创建全局变量的方法\"><a href=\"#创建全局变量的方法\" class=\"headerlink\" title=\"创建全局变量的方法\"></a>创建全局变量的方法</h5><p><strong>方法1：</strong>在函数外部定义一个变量，在函数内部使用变量</p>\n<pre><code>var message;\n\nfunction test() {\n    message = &quot;hello world&quot;;\n}\n\ntest();\nalert(message);\n</code></pre><p><strong>方法2：</strong>在函数内部定义变量，并且不写<strong>var</strong>操作符</p>\n<pre><code>function test() {\n    message = &quot;hello world&quot;;\n}\n\ntest();\nalert(message);\n</code></pre><h5 id=\"将十进制转换成二进制的方法\"><a href=\"#将十进制转换成二进制的方法\" class=\"headerlink\" title=\"将十进制转换成二进制的方法\"></a>将十进制转换成二进制的方法</h5><p>除二取余，倒序排列。例如将十进制的18转换成二进制<br><strong>第一步：</strong>计算除二取余<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170503113832828.png\" alt=\"这里写图片描述\"><br><strong>第二步：</strong>将余数倒序排列就可以得到18的二进制是10010</p>\n<h5 id=\"将十进制的负数转换成二进制\"><a href=\"#将十进制的负数转换成二进制\" class=\"headerlink\" title=\"将十进制的负数转换成二进制\"></a>将十进制的负数转换成二进制</h5><p>负数的二进制是用负数的绝对值的补码表示，以计算-18的二进制为例介绍负数的二进制计算方法<br><strong>第一步：</strong>计算-18的绝对值 |-18| = 18<br><strong>第二步：</strong>计算18的二进制 0000 0000 0000 0000 0000 0000 0001 0010<br><strong>第三步：</strong>计算二进制的反码 1111 1111 1111 1111 1111 1111 1110 1101<br><strong>第四步：</strong>将反码加1 1111 1111 1111 1111 1111 1111 1110 1110<br><strong>所以-18的二进制值</strong> 1111 1111 1111 1111 1111 1111 1110 1110，其中第31位表示的是符号位不参与计算，1表示是负数，0表示是正数，位的顺序是从右往左排列的从0开始，也就是所最右边的哪位是第0位，然后往左依次是1、2、3、……位以此类推，最后一位是第31位</p>\n<h5 id=\"计算按位非操作的简便方法\"><a href=\"#计算按位非操作的简便方法\" class=\"headerlink\" title=\"计算按位非操作的简便方法\"></a>计算按位非操作的简便方法</h5><p>操作数的负值减1，例如计算25的按位非操作的方法如下</p>\n<pre><code>var num1 = 25;\nvar num2 = -num1 - 1;\n</code></pre><h5 id=\"获得变量的基本数据类型\"><a href=\"#获得变量的基本数据类型\" class=\"headerlink\" title=\"获得变量的基本数据类型\"></a>获得变量的基本数据类型</h5><p>JavaScript中使用<strong>typeof</strong>关键字获得变量的基本数据类型</p>\n<pre><code> var s = &quot;Nicholas&quot;;\nvar b = true;\nvar i = 22;\nvar u;\nvar n = null;\nvar o = new Object();\n\nalert(typeof s);  //string\nalert(typeof i);  //number\nalert(typeof b);  //boolean\nalert(typeof u);  //undefined\nalert(typeof n);  //object\nalert(typeof o);  //object\n</code></pre><h5 id=\"判断变量的引用的数据类型\"><a href=\"#判断变量的引用的数据类型\" class=\"headerlink\" title=\"判断变量的引用的数据类型\"></a>判断变量的引用的数据类型</h5><p>JavaScript中使用<strong>instanceof</strong>关键字判断变量的引用数据类型</p>\n<pre><code> var person = new Object();\nvar colors = [];\nvar pattern = new RegExp();\n\nalert(person instanceof Object);   //变量person是Object类型吗\nalert(colors instanceof Array);    //变量colors是Array类型吗\nalert(pattern instanceof RegExp);  //变量pattern是RegExp类型吗\n</code></pre><h5 id=\"JavaScript的基本数据类型\"><a href=\"#JavaScript的基本数据类型\" class=\"headerlink\" title=\"JavaScript的基本数据类型\"></a>JavaScript的基本数据类型</h5><p>JavaScript一共有5种基本数据类型，分别是<strong>Undefined</strong>、<strong>Null</strong>、<strong>Boolean</strong>、<strong>Number</strong>和<strong>String</strong>。</p>\n<h5 id=\"JavaScript中的引用类型\"><a href=\"#JavaScript中的引用类型\" class=\"headerlink\" title=\"JavaScript中的引用类型\"></a>JavaScript中的引用类型</h5><p>常见的引用类型：<strong>Object</strong>、<strong>Array</strong>、<strong>Function</strong>、<strong>RegExp</strong></p>\n<h5 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h5><p><strong>构造函数的定义：</strong>构造函数是一种特殊的方法，主要用在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中</p>\n<p><strong>构造函数的特点：</strong>  </p>\n<ul>\n<li>构造函数的函数名和类名相同</li>\n<li>构造函数定义时没有返回值</li>\n<li>构造函数只能用于定义对象时初始化对象  </li>\n</ul>\n<h5 id=\"创建Object实例-对象-的两种方式\"><a href=\"#创建Object实例-对象-的两种方式\" class=\"headerlink\" title=\"创建Object实例(对象)的两种方式\"></a>创建Object实例(对象)的两种方式</h5><p><strong>方式1：</strong>使用new操作符后跟Object构造函数</p>\n<pre><code>var person = new Object();\nperson.name = &quot;Nicholas&quot;;\nperson.age = 29;\n</code></pre><p><strong>方式2：</strong>使用对象字面量表示法</p>\n<pre><code> var person = {\n    name : &quot;Nicholas&quot;,\n    age : 29\n};\n</code></pre><h5 id=\"创建数组的方式\"><a href=\"#创建数组的方式\" class=\"headerlink\" title=\"创建数组的方式\"></a>创建数组的方式</h5><p><strong>方式1：</strong>使用Array的构造函数创建数组</p>\n<pre><code>//创建一个空数组\nvar colors = new Array();\n\n//创建一个保存20个数据的数组\nvar colors = new Array(20);\n\n//创建一个保存了3个字符串的数组\nvar colors = new Array(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;);\n</code></pre><p><strong>方式2：</strong>使用Array的构造函数创建数组时也可以省略<strong>new</strong>操作符</p>\n<pre><code> //创建一个空数组\nvar colors = Array();\n\n//创建一个保存20个数据的数组\nvar colors = Array(20);\n\n//创建一个包含3个字符串的数组\nvar colors = Array(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;);\n</code></pre><p><strong>方式3：</strong>使用数组的字面量创建数组</p>\n<pre><code> //创建一个空数组\nvar colors = [];\n\n//创建一个包含3个字符串的数组\nvar colors = [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;];\n</code></pre><h5 id=\"栈与队列\"><a href=\"#栈与队列\" class=\"headerlink\" title=\"栈与队列\"></a>栈与队列</h5><p><strong>栈的访问规则：</strong>先进后出<br><strong>队列的访问规则：</strong>先进先出</p>\n<h5 id=\"JavaScript中创建对象的方式\"><a href=\"#JavaScript中创建对象的方式\" class=\"headerlink\" title=\"JavaScript中创建对象的方式\"></a>JavaScript中创建对象的方式</h5><p><strong>方式1：</strong>使用Object创建对象</p>\n<pre><code>var person = new Object();\nperson.name = &quot;Nicholas&quot;;\nperson.age = 29;\nperson.job = &quot;Software Engineer&quot;;\n\nperson.showName = function () {\n    console.log(this.name);\n}\n\nperson.showAge = function () {\n    console.log(this.age);\n}\n\nperson.showJob = function () {\n    console.log(this.job);\n}\n</code></pre><p><strong>方式2：</strong>用对象字面量语法创建对象</p>\n<pre><code>var person = {\n    name: &quot;Nicholas&quot;,\n    age: 29,\n    job: &quot;Software Engineer&quot;,\n\n    showName: function () {\n        console.log(this.name);\n    },\n\n    showAge: function () {\n        console.log(this.age);\n    },\n\n    showJob: function () {\n        console.log(this.job);\n    }\n};\n</code></pre><p><strong>方法3：</strong>用函数封装特定接口创建对象</p>\n<pre><code>function createPerson(name, age, job) {\n    var o = new Object();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n\n    o.showName = function () {\n        console.log(this.name);\n    };\n\n    o.showAge = function () {\n        console.log(this.age);\n    };\n\n    o.showJob = function () {\n        console.log(this.job);\n    };\n\n    return o;\n}\n\nvar person1 = createPerson(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = createPerson(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法4：</strong>使用构造函数创建对象</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n\n    this.showName = function () {\n        console.log(this.name);\n    };\n\n    this.showAge = function () {\n        console.log(this.age);\n    };\n\n    this.showJob = function () {\n        console.log(this.job);\n    }\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法5：</strong>使用构造函数创建对象改进版</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n\n    this.showName = new Function(&quot;console.log(this.name)&quot;);\n    this.showAge = new Function(&quot;console.log(this.age)&quot;);\n    this.showJob = new Function(&quot;console.log(this.job)&quot;);\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法6：</strong>将成员函数放在外面</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n    this.showName = showName;\n    this.showAge = showAge;\n    this.showJob = showJob;\n}\n\nfunction showName() {\n    console.log(this.name);\n}\n\nfunction showAge() {\n    console.log(this.age);\n}\n\nfunction showJob() {\n    console.log(this.job);\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方式7：</strong>使用原型创建对象</p>\n<pre><code> function Person() {\n}\n\nPerson.prototype.name = &quot;Nicholas&quot;;\nPerson.prototype.age = 29;\nPerson.prototype.job = &quot;Software Engineer&quot;;\n\nPerson.prototype.showName = function () {\n    console.log(this.name);\n}\n\nPerson.prototype.showAge = function () {\n    console.log(this.age);\n}\n\nPerson.prototype.showJob = function () {\n    console.log(this.job);\n}\n\nvar person1 = new Person();\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n</code></pre><h5 id=\"js中获得父节点下所有子节点的方法\"><a href=\"#js中获得父节点下所有子节点的方法\" class=\"headerlink\" title=\"js中获得父节点下所有子节点的方法\"></a>js中获得父节点下所有子节点的方法</h5><p><strong>childNodes：</strong> 获得的子节点中包含文本节点<br><strong>children:</strong> 获得的子节点中不包含文本节点</p>\n<h5 id=\"let、var、const-三者的区别\"><a href=\"#let、var、const-三者的区别\" class=\"headerlink\" title=\"let、var、const 三者的区别\"></a>let、var、const 三者的区别</h5><p><strong>var：</strong> 使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象<br><strong>let：</strong> 使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升<br><strong>const：</strong> 使用const声明的是常量，在后面出现的代码中不能再修改该常量的值</p>\n<h5 id=\"属性的描述符\"><a href=\"#属性的描述符\" class=\"headerlink\" title=\"属性的描述符\"></a>属性的描述符</h5><p><strong>Configurable：</strong>表示能否通过delete删除属性，从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，它的默认值是true<br><strong>Enumerable：</strong>表示能否通过 for-in 循环返回属性，它的默认值是true<br><strong>Writable：</strong>表示能否修改属性的值，它的默认值是true<br><strong>Value：</strong>属性的值</p>\n<h5 id=\"访问器属性的特性\"><a href=\"#访问器属性的特性\" class=\"headerlink\" title=\"访问器属性的特性\"></a>访问器属性的特性</h5><p><strong>Configurable：</strong>表示能否通过delete删除属性，从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，它的默认值是true<br><strong>Enumerable：</strong>表示能否通过 for-in 循环返回属性，它的默认值是true<br><strong>Get：</strong>在读取属性时调用的函数，默认值为undefined<br><strong>Set：</strong>在写入属性时调用的函数，默认值为undefined</p>\n<h5 id=\"target-与-currentTarget\"><a href=\"#target-与-currentTarget\" class=\"headerlink\" title=\"target 与 currentTarget\"></a>target 与 currentTarget</h5><p><strong>target：</strong>返回触发事件的那个节点，即事件最初发生的节点<br><strong>currentTarget：</strong>返回事件当前所在的节点，即正在执行的监听函数所绑定的那个节点</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/\">《JavaScript高级程序设计》读书笔记</a>】</p>\n</blockquote>"},{"title":"一次有意义的前端面试总结","date":"2018-03-07T07:02:54.000Z","_content":"\n我今天去参加了位于深圳某公司的前端开发工程师岗位的面试，这是我来深圳后参加的第二次面试，感觉这次面试经历比较有趣，也通过这次面试学到了很多东西，所以决定以博客的形式记录下来。\n<!--more-->\n\n## 获得面试机会\n\n该从哪里讲起呢，就从看到那个公司的招聘信息讲起吧，当我还在江西老家的时候就打算年后来深圳找工作，所以我在来深圳之前就通过Boss直聘和一些技术社区查找深圳的前端开发工程师的招聘信息，并投递了部分简历，在某个**技术论坛**上看到这个公司招聘前端工程师，我便通过Email投了一份简历过去，几天后对方回复了我一份邮件，大意是问我何时有空去面试，我当时还在江西老家，告知对方我要在正月十五才会去深圳后，对方很爽快的表示我到深圳后再告知对方，再安排其他时间面试，我到了深圳后发Email告诉对方我来深圳了，在元宵节假期结束后的的第一天上班时，对方发来了回复邮件，让HR为我安排面试时间，下午HR便打电话给我，通知我去面试，并通过Email将面试的时间和地址发给了我，感觉比Boss直聘上的通知方式要正式的多，在Boss直聘上如果对方通知你去面试直接就说你过来面试吧，还要自己再问对方，对方才会告知你面试的地址。\n\n## 满是陷阱的笔试\n\n乘地铁到高新园站出来后便来到了那个公司的所在地，一栋非常高端的写字楼，那个公司就在这个写字楼里，进入公司后便开始笔试，感觉笔试题都很基础，但是里面有很多陷阱，比如第一题`要求写出 10 + '20' 的值，然后将计算的结果再加 '20'`，这题主要考察数字与字符串之间的运算，在 JavaScript 中字符串加上数字，首先需要将数字转换成字符串，然后再进行相加运算，相加的结果仍能是字符串，所以 `10 + '20' = '1020'`，结果再加上'20'为 `'1020' + '20' = '102020'`。还有一题`要求写出add(4)(5)的实现函数`，看到这题后我一脸懵逼，函数不都是只有一个括号吗，这里怎么出现了两个括号，面试结束后我通过在一个前端交流群里问了这个问题，这题考察的是函数柯里化，还有一题要求`使用ES6的语法实现数组去重`等，通过这次面试我也发现了我的很多知识盲区。\n\n## 糟糕的自我介绍\n\n笔试结束后HR拿着我的简历和做的笔试题指引我来到了一个会议室，当我在会议室坐下后不久，会议室里进来了一位女士，她就是我今天面试的面试官，互相打了个招呼后，她首先让我做自我介绍，然后我便说道`我叫 xxx，今年 xx 岁，来自江西，有一年工作经验，过来是应聘前端开发工程师职位`，我说完后她让我再介绍一下之前的工作经历和做过的项目，我因为提前没准备好，说的吞吞吐吐，这次我学到了**做自我介绍时要简要的介绍一下个人信息、工作经历和之前做过的项目**。\n\n## 有意义的面试\n\n自我介绍完成后她便拿着我的简历问我问题。  \n**面试官：**你知道盒模型吗？  \n**我：**盒模型是由 margin、border、padding、width 巴拉巴拉一大堆。  \n**面试官：**我是问你标准盒模型和怪异模型你了解吗？  \n**我：**标准盒模型width=padding+border+(当时太紧张了，不知道如何回答了)。  \n**面试官：**你知道 JavaScript 中的事件绑定方式吗？  \n**我：**onclick。  \n**面试官：**onclick不能算是事件绑定的方式。  \n**我：**addEventListener。  \n**面试官：**还有吗？  \n**我：**我知道的就这么多。  \n**面试官：**知道 rem 和 em 吗，他们两个有什么区别？  \n**我：**rem表示的是相对于网页的根节点然后巴拉巴拉一大堆。  \n**面试官：**知道原型吗？  \n**我：**知道，在 JavaScript 中的继承就是通过原型实现的。  \n**面试官：**那你说说 JavaScript 中实现继承的方式有哪些？  \n**我：**巴拉巴拉一大堆。  \n**面试官：**知道数据的存储方式吗？  \n**我：**localStorage、seesionStorage、Cookie。  \n**面试官：**localStorage 和 sessionStorage 之间有什么区别？  \n**我：**localStorage 可以实现数据的永久保存，sessionStorage 存放的数据，当浏览器关闭后会自动丢失。  \n**面试官：** 知道元素层叠吗？  \n**我：**一脸懵逼，后来不知怎么回事就想起来了，我顺便问了一句是指两个元素，一个在上面一个在下面，两个元素的距离为那个margin值大的那个元素的margin值吗？  \n**面试官：**如何解决这个问题？  \n**我：**能用padding就尽量不要用margin。  \n**面试官：**知道call和apply吗？  \n**我：**你能不能在纸上写一下(当时没听懂)，两个都可以让对象调用函数，其中apply中的第一个参数为调用函数的对象，第二个参数为函数传递的数据，其中apply传递数据是数组，call巴拉巴拉。  \n**面试官：**知道跨域吗？  \n**我：**知道。  \n**面试官：**如何解决跨域问题？  \n**我：**使用JSONP和在服务器端设置CORS。  \n**面试官：**看你简历中还提到了你会组件化开发，那你介绍一下你的项目中哪里设使用了组件化开发？  \n**我：**header组件用于头部、footer组件用于脚部、banner组件用于轮播图。  \n**面试官：**介绍一个组件，并说一个如何设计它的外部接口？  \n**我：**那就介绍banner组件吧。  \n**面试官：**好。  \n**我：**banner组件可以设计一个JSON数组，数组中的对象可以设计url属性表示点击图片后跳转的链接，image属性表示图片的地址巴拉巴拉。。。  \n**面试官：**好了你回去等通知吧。  \n\n## 最后附上我能想起来的笔试题和面试题\n\n**1、10 + '20' = ? 再加 '20' 呢？**  \n\n\t10 + '20' = '1020' \n\t'1020' + '20' = '102020'\n \n**2、请写出 Ajax 请求中用到的函数**  \n\n\tvar xhr = new XMLHttpRequest();\n\txhr.open('GET/POST', 'http://localhost:8080?username=meishadevs', true);\n\txhr.onreadystatechange = function() {};\n\txhr.send();\n\n**3、使用正则表达式提取出url值为 https://map.baidu.com/x/y/z 中的 [map.baidu.com](map.baidu.com)**  \n\n\t/https:\\/\\/([^\\/]+)/.exec('https://map.baidu.com/x/y/z')[1]\n\t'https://map.baidu.com/x/y/z'.match(/https:\\/\\/([^\\/]+)/)[1]\n\n执行结果\n![](http://oq3pg8pg4.bkt.clouddn.com/exec.png)\n\n**4、使用ES6的方法实现数组去重**  \n\n\tlet array = [1, 1, 1, 1, 2, 3, 4, 4, 5, 3];\n\tlet set = new Set(array);\n\tlet arr = Array.from(set);\n\n**5、设计一个函数实现add(3)(4)**  \n\n\tfunction add(a) {\n\t\treturn function(b) {\n\t\t\treturn a + b;\n\t    }\n\t}\n\n\tadd(3)(4)\n\nES6的写法\n\n\tadd = a => b => a + b\n\tadd(3)(4)\n\n对ES6写法做一个变形\n\n\tadd = a => (b => a + b)\n\n再变\n\n\tadd = function (a) {\n\t\treturn (b => a + b)\n\t}\n\n再变\n\n\tadd = function (a) {\n\t\treturn function (b) {\n\t\t\treturn a + b;\n\t\t}\n\t}\n\n**6、使用Ajax实现一个表单提交功能，并跳转到提交的地址，（可以使用 jQuery 或 Zepto**）  \n\n**7、在完成第6题后使用 Promise 再实现一遍**  \n\n**8、JavaScript中的基本数据类型**  \n\n\tNumber、String、Boolean、Null、Undefined\n\n**9、一道响应式布局的题目**\n\n**10、call、apply的作用与区别**  \ncall 和 apply 都是为了改变函数体内部 this 的指向，它们的第一个参数都是调用函数的对象，call方法接收由若干个参数组成的参数列表，apply方法接收的是一个包含多个参数的数组\n\n例如使用**call**获取一组数字中的最大值\n\n\tMath.max.call(null, 1, 3, 5, 8, 2)\n\n例如使用**apply**获取一组数字中的最大值\n\n\tMath.max.apply(null, [1, 3, 5, 8, 2])\n\n**11、标准盒模型和怪异盒模型的区别**  \n标准盒模型的 box-sizing 属性的值为 content-box  \n怪异盒模型的 box-sizing 属性的值为 border-box  \n标准盒模型中 width = 内容的宽度  \n怪异盒模型中 width = 内容的宽度 + padding + border  \n\n**12、em 与 rem 的区别**  \nrem 表示根节点(html标签)的字体大小的倍数  \n当 em 作为 font-size 的单位时，表示相对于父元素的 font-size 值的倍数  \n当 em作为其他属性单位时，代表自身字体大小的倍数\n\n**13、localStorage 与 sessionStorage 的区别**  \n使用 localStorage 保存的数据，除非手动清除，否则会永久保存  \n使用 sessionStorage 保存的数据仅在当前会话下有效，关闭页面或浏览器后会被清除  \n\n**14、元素层叠**  \n参考张鑫旭大神的文章：[深入理解CSS中的层叠上下文和层叠顺序](http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n\n**15、使用原型现继承**  \n\n使用 \\_\\_proto\\_\\_ 实现继承(不推荐使用这种方式)\n\n\t//创建animal对象\n\tvar animal = {\n\t    name: \"animal\",\n\t    \n\t    eat: function () {\n\t        console.log(this.name + \" is eating\");\n\t    }\n\t};\n\t\n\t//创建dog对象\n\tvar dog = {\n\t    name: \"dog\",\n\t\n\t    //指向animal对象（dog继承自animal）\n\t    __proto__: animal\n\t};\n\t\n\t//创建cat对象\n\tvar cat = {\n\t    name: \"cat\",\n\t\n\t    //指向animal对象(cat继承自animal)\n\t    __proto__: animal\n\t};\n\t\n\tdog.eat();\n\tcat.eat();\n\n使用 prototype 实现继承\n\n\t//创建animal对象\n\tvar animal = {\n\t    name: \"animal\",\n\t\n\t    eat: function () {\n\t        console.log(this.name + \" is eating\");\n\t    }\n\t};\n\t\n\t//创建构造函数Dog\n\tfunction Dog() {\n\t    this.name = \"dog\";\n\t}\n\t\n\t//创建构造函数Cat\n\tfunction Cat() {\n\t    this.name = \"cat\";\n\t}\n\t\n\t//设置Dog的原型为animal(Dog继承自animal)\n\tDog.prototype = animal;\n\n\t//设置Cat的原型为animal(Cat继承自animal)\n\tCat.prototype = animal;\n\t\n\t//创建dog对象\n\tvar dog = new Dog();\n\n\t//创建cat对象\n\tvar cat = new Cat();\n\n\tdog.eat();\n\tcat.eat();\n\n**16、JavaScript 中事件绑定的方式**  \n\n\tbutton.onclick = function() {}\n\n\tbutton.addEventListener(\"click\", function () {});\n\n**17、设计一个函数实现判断一个数据的数据类型是不是数组**  \n\n\tfunction isArray(num) {\n    \treturn num instanceof Array;\n\t}\n\n## 总结\n- 自我介绍没准备好，只介绍了我的个人信息，没有介绍工作经历和做过的项目，说话吞吞吐吐，\n- 笔试和面试的问题大部分都是前端开发中的基础知识，只有少部分 ES6 和 jQuery 的内容，可见我前端基础掌握的不够好  \n- 没有提前计划好，导致块要超过约定的时间时才到面试地点 \n- 不管是面试还是笔试不知道的就说不知道，不清楚的地方要多问  \n\n## 参考链接\n- [深入理解CSS中的层叠上下文和层叠顺序](http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n- [Javascript：一个屌丝的逆袭](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513059&idx=1&sn=a2eaf97d9e3000d15a33681d1b720463&scene=21#wechat_redirect)\n- [javascript王国的一次旅行，一个没有类的世界怎么玩转面向对象？](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513786&idx=1&sn=6f51ad314e3ef3e1575e032568477f3a&scene=0#wechat_redirect&rd2werd=1#wechat_redirect)\n- [javascript王国之函数教主](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513789&idx=1&sn=e2e39002a915291fa06050c8116c2f96&chksm=80d67b7eb7a1f2681267fa53c624add554c47ed1c39dc8d44b98b0a414c80a646e52ad399173&scene=4&rd2werd=1#wechat_redirect)\n- [怪异模式和标准模式](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode)\n- [HTTP常见状态码 200 301 302 404 500 - starof - 博客园](http://www.cnblogs.com/starof/p/5035119.html)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[一次有意义的前端面试总结](http://meishadevs.com/blog/%E4%B8%80%E6%AC%A1%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/)】","source":"_posts/一次有意义的前端面试总结.md","raw":"---\ntitle: 一次有意义的前端面试总结\ncategories:\n  - 面试\ntags:\n  - 面试\ndate: 2018-03-07 15:02:54\n---\n\n我今天去参加了位于深圳某公司的前端开发工程师岗位的面试，这是我来深圳后参加的第二次面试，感觉这次面试经历比较有趣，也通过这次面试学到了很多东西，所以决定以博客的形式记录下来。\n<!--more-->\n\n## 获得面试机会\n\n该从哪里讲起呢，就从看到那个公司的招聘信息讲起吧，当我还在江西老家的时候就打算年后来深圳找工作，所以我在来深圳之前就通过Boss直聘和一些技术社区查找深圳的前端开发工程师的招聘信息，并投递了部分简历，在某个**技术论坛**上看到这个公司招聘前端工程师，我便通过Email投了一份简历过去，几天后对方回复了我一份邮件，大意是问我何时有空去面试，我当时还在江西老家，告知对方我要在正月十五才会去深圳后，对方很爽快的表示我到深圳后再告知对方，再安排其他时间面试，我到了深圳后发Email告诉对方我来深圳了，在元宵节假期结束后的的第一天上班时，对方发来了回复邮件，让HR为我安排面试时间，下午HR便打电话给我，通知我去面试，并通过Email将面试的时间和地址发给了我，感觉比Boss直聘上的通知方式要正式的多，在Boss直聘上如果对方通知你去面试直接就说你过来面试吧，还要自己再问对方，对方才会告知你面试的地址。\n\n## 满是陷阱的笔试\n\n乘地铁到高新园站出来后便来到了那个公司的所在地，一栋非常高端的写字楼，那个公司就在这个写字楼里，进入公司后便开始笔试，感觉笔试题都很基础，但是里面有很多陷阱，比如第一题`要求写出 10 + '20' 的值，然后将计算的结果再加 '20'`，这题主要考察数字与字符串之间的运算，在 JavaScript 中字符串加上数字，首先需要将数字转换成字符串，然后再进行相加运算，相加的结果仍能是字符串，所以 `10 + '20' = '1020'`，结果再加上'20'为 `'1020' + '20' = '102020'`。还有一题`要求写出add(4)(5)的实现函数`，看到这题后我一脸懵逼，函数不都是只有一个括号吗，这里怎么出现了两个括号，面试结束后我通过在一个前端交流群里问了这个问题，这题考察的是函数柯里化，还有一题要求`使用ES6的语法实现数组去重`等，通过这次面试我也发现了我的很多知识盲区。\n\n## 糟糕的自我介绍\n\n笔试结束后HR拿着我的简历和做的笔试题指引我来到了一个会议室，当我在会议室坐下后不久，会议室里进来了一位女士，她就是我今天面试的面试官，互相打了个招呼后，她首先让我做自我介绍，然后我便说道`我叫 xxx，今年 xx 岁，来自江西，有一年工作经验，过来是应聘前端开发工程师职位`，我说完后她让我再介绍一下之前的工作经历和做过的项目，我因为提前没准备好，说的吞吞吐吐，这次我学到了**做自我介绍时要简要的介绍一下个人信息、工作经历和之前做过的项目**。\n\n## 有意义的面试\n\n自我介绍完成后她便拿着我的简历问我问题。  \n**面试官：**你知道盒模型吗？  \n**我：**盒模型是由 margin、border、padding、width 巴拉巴拉一大堆。  \n**面试官：**我是问你标准盒模型和怪异模型你了解吗？  \n**我：**标准盒模型width=padding+border+(当时太紧张了，不知道如何回答了)。  \n**面试官：**你知道 JavaScript 中的事件绑定方式吗？  \n**我：**onclick。  \n**面试官：**onclick不能算是事件绑定的方式。  \n**我：**addEventListener。  \n**面试官：**还有吗？  \n**我：**我知道的就这么多。  \n**面试官：**知道 rem 和 em 吗，他们两个有什么区别？  \n**我：**rem表示的是相对于网页的根节点然后巴拉巴拉一大堆。  \n**面试官：**知道原型吗？  \n**我：**知道，在 JavaScript 中的继承就是通过原型实现的。  \n**面试官：**那你说说 JavaScript 中实现继承的方式有哪些？  \n**我：**巴拉巴拉一大堆。  \n**面试官：**知道数据的存储方式吗？  \n**我：**localStorage、seesionStorage、Cookie。  \n**面试官：**localStorage 和 sessionStorage 之间有什么区别？  \n**我：**localStorage 可以实现数据的永久保存，sessionStorage 存放的数据，当浏览器关闭后会自动丢失。  \n**面试官：** 知道元素层叠吗？  \n**我：**一脸懵逼，后来不知怎么回事就想起来了，我顺便问了一句是指两个元素，一个在上面一个在下面，两个元素的距离为那个margin值大的那个元素的margin值吗？  \n**面试官：**如何解决这个问题？  \n**我：**能用padding就尽量不要用margin。  \n**面试官：**知道call和apply吗？  \n**我：**你能不能在纸上写一下(当时没听懂)，两个都可以让对象调用函数，其中apply中的第一个参数为调用函数的对象，第二个参数为函数传递的数据，其中apply传递数据是数组，call巴拉巴拉。  \n**面试官：**知道跨域吗？  \n**我：**知道。  \n**面试官：**如何解决跨域问题？  \n**我：**使用JSONP和在服务器端设置CORS。  \n**面试官：**看你简历中还提到了你会组件化开发，那你介绍一下你的项目中哪里设使用了组件化开发？  \n**我：**header组件用于头部、footer组件用于脚部、banner组件用于轮播图。  \n**面试官：**介绍一个组件，并说一个如何设计它的外部接口？  \n**我：**那就介绍banner组件吧。  \n**面试官：**好。  \n**我：**banner组件可以设计一个JSON数组，数组中的对象可以设计url属性表示点击图片后跳转的链接，image属性表示图片的地址巴拉巴拉。。。  \n**面试官：**好了你回去等通知吧。  \n\n## 最后附上我能想起来的笔试题和面试题\n\n**1、10 + '20' = ? 再加 '20' 呢？**  \n\n\t10 + '20' = '1020' \n\t'1020' + '20' = '102020'\n \n**2、请写出 Ajax 请求中用到的函数**  \n\n\tvar xhr = new XMLHttpRequest();\n\txhr.open('GET/POST', 'http://localhost:8080?username=meishadevs', true);\n\txhr.onreadystatechange = function() {};\n\txhr.send();\n\n**3、使用正则表达式提取出url值为 https://map.baidu.com/x/y/z 中的 [map.baidu.com](map.baidu.com)**  \n\n\t/https:\\/\\/([^\\/]+)/.exec('https://map.baidu.com/x/y/z')[1]\n\t'https://map.baidu.com/x/y/z'.match(/https:\\/\\/([^\\/]+)/)[1]\n\n执行结果\n![](http://oq3pg8pg4.bkt.clouddn.com/exec.png)\n\n**4、使用ES6的方法实现数组去重**  \n\n\tlet array = [1, 1, 1, 1, 2, 3, 4, 4, 5, 3];\n\tlet set = new Set(array);\n\tlet arr = Array.from(set);\n\n**5、设计一个函数实现add(3)(4)**  \n\n\tfunction add(a) {\n\t\treturn function(b) {\n\t\t\treturn a + b;\n\t    }\n\t}\n\n\tadd(3)(4)\n\nES6的写法\n\n\tadd = a => b => a + b\n\tadd(3)(4)\n\n对ES6写法做一个变形\n\n\tadd = a => (b => a + b)\n\n再变\n\n\tadd = function (a) {\n\t\treturn (b => a + b)\n\t}\n\n再变\n\n\tadd = function (a) {\n\t\treturn function (b) {\n\t\t\treturn a + b;\n\t\t}\n\t}\n\n**6、使用Ajax实现一个表单提交功能，并跳转到提交的地址，（可以使用 jQuery 或 Zepto**）  \n\n**7、在完成第6题后使用 Promise 再实现一遍**  \n\n**8、JavaScript中的基本数据类型**  \n\n\tNumber、String、Boolean、Null、Undefined\n\n**9、一道响应式布局的题目**\n\n**10、call、apply的作用与区别**  \ncall 和 apply 都是为了改变函数体内部 this 的指向，它们的第一个参数都是调用函数的对象，call方法接收由若干个参数组成的参数列表，apply方法接收的是一个包含多个参数的数组\n\n例如使用**call**获取一组数字中的最大值\n\n\tMath.max.call(null, 1, 3, 5, 8, 2)\n\n例如使用**apply**获取一组数字中的最大值\n\n\tMath.max.apply(null, [1, 3, 5, 8, 2])\n\n**11、标准盒模型和怪异盒模型的区别**  \n标准盒模型的 box-sizing 属性的值为 content-box  \n怪异盒模型的 box-sizing 属性的值为 border-box  \n标准盒模型中 width = 内容的宽度  \n怪异盒模型中 width = 内容的宽度 + padding + border  \n\n**12、em 与 rem 的区别**  \nrem 表示根节点(html标签)的字体大小的倍数  \n当 em 作为 font-size 的单位时，表示相对于父元素的 font-size 值的倍数  \n当 em作为其他属性单位时，代表自身字体大小的倍数\n\n**13、localStorage 与 sessionStorage 的区别**  \n使用 localStorage 保存的数据，除非手动清除，否则会永久保存  \n使用 sessionStorage 保存的数据仅在当前会话下有效，关闭页面或浏览器后会被清除  \n\n**14、元素层叠**  \n参考张鑫旭大神的文章：[深入理解CSS中的层叠上下文和层叠顺序](http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n\n**15、使用原型现继承**  \n\n使用 \\_\\_proto\\_\\_ 实现继承(不推荐使用这种方式)\n\n\t//创建animal对象\n\tvar animal = {\n\t    name: \"animal\",\n\t    \n\t    eat: function () {\n\t        console.log(this.name + \" is eating\");\n\t    }\n\t};\n\t\n\t//创建dog对象\n\tvar dog = {\n\t    name: \"dog\",\n\t\n\t    //指向animal对象（dog继承自animal）\n\t    __proto__: animal\n\t};\n\t\n\t//创建cat对象\n\tvar cat = {\n\t    name: \"cat\",\n\t\n\t    //指向animal对象(cat继承自animal)\n\t    __proto__: animal\n\t};\n\t\n\tdog.eat();\n\tcat.eat();\n\n使用 prototype 实现继承\n\n\t//创建animal对象\n\tvar animal = {\n\t    name: \"animal\",\n\t\n\t    eat: function () {\n\t        console.log(this.name + \" is eating\");\n\t    }\n\t};\n\t\n\t//创建构造函数Dog\n\tfunction Dog() {\n\t    this.name = \"dog\";\n\t}\n\t\n\t//创建构造函数Cat\n\tfunction Cat() {\n\t    this.name = \"cat\";\n\t}\n\t\n\t//设置Dog的原型为animal(Dog继承自animal)\n\tDog.prototype = animal;\n\n\t//设置Cat的原型为animal(Cat继承自animal)\n\tCat.prototype = animal;\n\t\n\t//创建dog对象\n\tvar dog = new Dog();\n\n\t//创建cat对象\n\tvar cat = new Cat();\n\n\tdog.eat();\n\tcat.eat();\n\n**16、JavaScript 中事件绑定的方式**  \n\n\tbutton.onclick = function() {}\n\n\tbutton.addEventListener(\"click\", function () {});\n\n**17、设计一个函数实现判断一个数据的数据类型是不是数组**  \n\n\tfunction isArray(num) {\n    \treturn num instanceof Array;\n\t}\n\n## 总结\n- 自我介绍没准备好，只介绍了我的个人信息，没有介绍工作经历和做过的项目，说话吞吞吐吐，\n- 笔试和面试的问题大部分都是前端开发中的基础知识，只有少部分 ES6 和 jQuery 的内容，可见我前端基础掌握的不够好  \n- 没有提前计划好，导致块要超过约定的时间时才到面试地点 \n- 不管是面试还是笔试不知道的就说不知道，不清楚的地方要多问  \n\n## 参考链接\n- [深入理解CSS中的层叠上下文和层叠顺序](http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n- [Javascript：一个屌丝的逆袭](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513059&idx=1&sn=a2eaf97d9e3000d15a33681d1b720463&scene=21#wechat_redirect)\n- [javascript王国的一次旅行，一个没有类的世界怎么玩转面向对象？](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513786&idx=1&sn=6f51ad314e3ef3e1575e032568477f3a&scene=0#wechat_redirect&rd2werd=1#wechat_redirect)\n- [javascript王国之函数教主](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513789&idx=1&sn=e2e39002a915291fa06050c8116c2f96&chksm=80d67b7eb7a1f2681267fa53c624add554c47ed1c39dc8d44b98b0a414c80a646e52ad399173&scene=4&rd2werd=1#wechat_redirect)\n- [怪异模式和标准模式](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode)\n- [HTTP常见状态码 200 301 302 404 500 - starof - 博客园](http://www.cnblogs.com/starof/p/5035119.html)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[一次有意义的前端面试总结](http://meishadevs.com/blog/%E4%B8%80%E6%AC%A1%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/)】","slug":"一次有意义的前端面试总结","published":1,"updated":"2018-07-07T02:23:40.244Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz0009jc7u05dxhx4o","content":"<p>我今天去参加了位于深圳某公司的前端开发工程师岗位的面试，这是我来深圳后参加的第二次面试，感觉这次面试经历比较有趣，也通过这次面试学到了很多东西，所以决定以博客的形式记录下来。<br><a id=\"more\"></a></p>\n<h2 id=\"获得面试机会\"><a href=\"#获得面试机会\" class=\"headerlink\" title=\"获得面试机会\"></a>获得面试机会</h2><p>该从哪里讲起呢，就从看到那个公司的招聘信息讲起吧，当我还在江西老家的时候就打算年后来深圳找工作，所以我在来深圳之前就通过Boss直聘和一些技术社区查找深圳的前端开发工程师的招聘信息，并投递了部分简历，在某个<strong>技术论坛</strong>上看到这个公司招聘前端工程师，我便通过Email投了一份简历过去，几天后对方回复了我一份邮件，大意是问我何时有空去面试，我当时还在江西老家，告知对方我要在正月十五才会去深圳后，对方很爽快的表示我到深圳后再告知对方，再安排其他时间面试，我到了深圳后发Email告诉对方我来深圳了，在元宵节假期结束后的的第一天上班时，对方发来了回复邮件，让HR为我安排面试时间，下午HR便打电话给我，通知我去面试，并通过Email将面试的时间和地址发给了我，感觉比Boss直聘上的通知方式要正式的多，在Boss直聘上如果对方通知你去面试直接就说你过来面试吧，还要自己再问对方，对方才会告知你面试的地址。</p>\n<h2 id=\"满是陷阱的笔试\"><a href=\"#满是陷阱的笔试\" class=\"headerlink\" title=\"满是陷阱的笔试\"></a>满是陷阱的笔试</h2><p>乘地铁到高新园站出来后便来到了那个公司的所在地，一栋非常高端的写字楼，那个公司就在这个写字楼里，进入公司后便开始笔试，感觉笔试题都很基础，但是里面有很多陷阱，比如第一题<code>要求写出 10 + &#39;20&#39; 的值，然后将计算的结果再加 &#39;20&#39;</code>，这题主要考察数字与字符串之间的运算，在 JavaScript 中字符串加上数字，首先需要将数字转换成字符串，然后再进行相加运算，相加的结果仍能是字符串，所以 <code>10 + &#39;20&#39; = &#39;1020&#39;</code>，结果再加上’20’为 <code>&#39;1020&#39; + &#39;20&#39; = &#39;102020&#39;</code>。还有一题<code>要求写出add(4)(5)的实现函数</code>，看到这题后我一脸懵逼，函数不都是只有一个括号吗，这里怎么出现了两个括号，面试结束后我通过在一个前端交流群里问了这个问题，这题考察的是函数柯里化，还有一题要求<code>使用ES6的语法实现数组去重</code>等，通过这次面试我也发现了我的很多知识盲区。</p>\n<h2 id=\"糟糕的自我介绍\"><a href=\"#糟糕的自我介绍\" class=\"headerlink\" title=\"糟糕的自我介绍\"></a>糟糕的自我介绍</h2><p>笔试结束后HR拿着我的简历和做的笔试题指引我来到了一个会议室，当我在会议室坐下后不久，会议室里进来了一位女士，她就是我今天面试的面试官，互相打了个招呼后，她首先让我做自我介绍，然后我便说道<code>我叫 xxx，今年 xx 岁，来自江西，有一年工作经验，过来是应聘前端开发工程师职位</code>，我说完后她让我再介绍一下之前的工作经历和做过的项目，我因为提前没准备好，说的吞吞吐吐，这次我学到了<strong>做自我介绍时要简要的介绍一下个人信息、工作经历和之前做过的项目</strong>。</p>\n<h2 id=\"有意义的面试\"><a href=\"#有意义的面试\" class=\"headerlink\" title=\"有意义的面试\"></a>有意义的面试</h2><p>自我介绍完成后她便拿着我的简历问我问题。<br><strong>面试官：</strong>你知道盒模型吗？<br><strong>我：</strong>盒模型是由 margin、border、padding、width 巴拉巴拉一大堆。<br><strong>面试官：</strong>我是问你标准盒模型和怪异模型你了解吗？<br><strong>我：</strong>标准盒模型width=padding+border+(当时太紧张了，不知道如何回答了)。<br><strong>面试官：</strong>你知道 JavaScript 中的事件绑定方式吗？<br><strong>我：</strong>onclick。<br><strong>面试官：</strong>onclick不能算是事件绑定的方式。<br><strong>我：</strong>addEventListener。<br><strong>面试官：</strong>还有吗？<br><strong>我：</strong>我知道的就这么多。<br><strong>面试官：</strong>知道 rem 和 em 吗，他们两个有什么区别？<br><strong>我：</strong>rem表示的是相对于网页的根节点然后巴拉巴拉一大堆。<br><strong>面试官：</strong>知道原型吗？<br><strong>我：</strong>知道，在 JavaScript 中的继承就是通过原型实现的。<br><strong>面试官：</strong>那你说说 JavaScript 中实现继承的方式有哪些？<br><strong>我：</strong>巴拉巴拉一大堆。<br><strong>面试官：</strong>知道数据的存储方式吗？<br><strong>我：</strong>localStorage、seesionStorage、Cookie。<br><strong>面试官：</strong>localStorage 和 sessionStorage 之间有什么区别？<br><strong>我：</strong>localStorage 可以实现数据的永久保存，sessionStorage 存放的数据，当浏览器关闭后会自动丢失。<br><strong>面试官：</strong> 知道元素层叠吗？<br><strong>我：</strong>一脸懵逼，后来不知怎么回事就想起来了，我顺便问了一句是指两个元素，一个在上面一个在下面，两个元素的距离为那个margin值大的那个元素的margin值吗？<br><strong>面试官：</strong>如何解决这个问题？<br><strong>我：</strong>能用padding就尽量不要用margin。<br><strong>面试官：</strong>知道call和apply吗？<br><strong>我：</strong>你能不能在纸上写一下(当时没听懂)，两个都可以让对象调用函数，其中apply中的第一个参数为调用函数的对象，第二个参数为函数传递的数据，其中apply传递数据是数组，call巴拉巴拉。<br><strong>面试官：</strong>知道跨域吗？<br><strong>我：</strong>知道。<br><strong>面试官：</strong>如何解决跨域问题？<br><strong>我：</strong>使用JSONP和在服务器端设置CORS。<br><strong>面试官：</strong>看你简历中还提到了你会组件化开发，那你介绍一下你的项目中哪里设使用了组件化开发？<br><strong>我：</strong>header组件用于头部、footer组件用于脚部、banner组件用于轮播图。<br><strong>面试官：</strong>介绍一个组件，并说一个如何设计它的外部接口？<br><strong>我：</strong>那就介绍banner组件吧。<br><strong>面试官：</strong>好。<br><strong>我：</strong>banner组件可以设计一个JSON数组，数组中的对象可以设计url属性表示点击图片后跳转的链接，image属性表示图片的地址巴拉巴拉。。。<br><strong>面试官：</strong>好了你回去等通知吧。  </p>\n<h2 id=\"最后附上我能想起来的笔试题和面试题\"><a href=\"#最后附上我能想起来的笔试题和面试题\" class=\"headerlink\" title=\"最后附上我能想起来的笔试题和面试题\"></a>最后附上我能想起来的笔试题和面试题</h2><p><strong>1、10 + ‘20’ = ? 再加 ‘20’ 呢？</strong>  </p>\n<pre><code>10 + &apos;20&apos; = &apos;1020&apos; \n&apos;1020&apos; + &apos;20&apos; = &apos;102020&apos;\n</code></pre><p><strong>2、请写出 Ajax 请求中用到的函数</strong>  </p>\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.open(&apos;GET/POST&apos;, &apos;http://localhost:8080?username=meishadevs&apos;, true);\nxhr.onreadystatechange = function() {};\nxhr.send();\n</code></pre><p><strong>3、使用正则表达式提取出url值为 <a href=\"https://map.baidu.com/x/y/z\" target=\"_blank\" rel=\"noopener\">https://map.baidu.com/x/y/z</a> 中的 <a href=\"map.baidu.com\">map.baidu.com</a></strong>  </p>\n<pre><code>/https:\\/\\/([^\\/]+)/.exec(&apos;https://map.baidu.com/x/y/z&apos;)[1]\n&apos;https://map.baidu.com/x/y/z&apos;.match(/https:\\/\\/([^\\/]+)/)[1]\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/exec.png\" alt=\"\"></p>\n<p><strong>4、使用ES6的方法实现数组去重</strong>  </p>\n<pre><code>let array = [1, 1, 1, 1, 2, 3, 4, 4, 5, 3];\nlet set = new Set(array);\nlet arr = Array.from(set);\n</code></pre><p><strong>5、设计一个函数实现add(3)(4)</strong>  </p>\n<pre><code>function add(a) {\n    return function(b) {\n        return a + b;\n    }\n}\n\nadd(3)(4)\n</code></pre><p>ES6的写法</p>\n<pre><code>add = a =&gt; b =&gt; a + b\nadd(3)(4)\n</code></pre><p>对ES6写法做一个变形</p>\n<pre><code>add = a =&gt; (b =&gt; a + b)\n</code></pre><p>再变</p>\n<pre><code>add = function (a) {\n    return (b =&gt; a + b)\n}\n</code></pre><p>再变</p>\n<pre><code>add = function (a) {\n    return function (b) {\n        return a + b;\n    }\n}\n</code></pre><p><strong>6、使用Ajax实现一个表单提交功能，并跳转到提交的地址，（可以使用 jQuery 或 Zepto</strong>）  </p>\n<p><strong>7、在完成第6题后使用 Promise 再实现一遍</strong>  </p>\n<p><strong>8、JavaScript中的基本数据类型</strong>  </p>\n<pre><code>Number、String、Boolean、Null、Undefined\n</code></pre><p><strong>9、一道响应式布局的题目</strong></p>\n<p><strong>10、call、apply的作用与区别</strong><br>call 和 apply 都是为了改变函数体内部 this 的指向，它们的第一个参数都是调用函数的对象，call方法接收由若干个参数组成的参数列表，apply方法接收的是一个包含多个参数的数组</p>\n<p>例如使用<strong>call</strong>获取一组数字中的最大值</p>\n<pre><code>Math.max.call(null, 1, 3, 5, 8, 2)\n</code></pre><p>例如使用<strong>apply</strong>获取一组数字中的最大值</p>\n<pre><code>Math.max.apply(null, [1, 3, 5, 8, 2])\n</code></pre><p><strong>11、标准盒模型和怪异盒模型的区别</strong><br>标准盒模型的 box-sizing 属性的值为 content-box<br>怪异盒模型的 box-sizing 属性的值为 border-box<br>标准盒模型中 width = 内容的宽度<br>怪异盒模型中 width = 内容的宽度 + padding + border  </p>\n<p><strong>12、em 与 rem 的区别</strong><br>rem 表示根节点(html标签)的字体大小的倍数<br>当 em 作为 font-size 的单位时，表示相对于父元素的 font-size 值的倍数<br>当 em作为其他属性单位时，代表自身字体大小的倍数</p>\n<p><strong>13、localStorage 与 sessionStorage 的区别</strong><br>使用 localStorage 保存的数据，除非手动清除，否则会永久保存<br>使用 sessionStorage 保存的数据仅在当前会话下有效，关闭页面或浏览器后会被清除  </p>\n<p><strong>14、元素层叠</strong><br>参考张鑫旭大神的文章：<a href=\"http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">深入理解CSS中的层叠上下文和层叠顺序</a></p>\n<p><strong>15、使用原型现继承</strong>  </p>\n<p>使用 __proto__ 实现继承(不推荐使用这种方式)</p>\n<pre><code>//创建animal对象\nvar animal = {\n    name: &quot;animal&quot;,\n\n    eat: function () {\n        console.log(this.name + &quot; is eating&quot;);\n    }\n};\n\n//创建dog对象\nvar dog = {\n    name: &quot;dog&quot;,\n\n    //指向animal对象（dog继承自animal）\n    __proto__: animal\n};\n\n//创建cat对象\nvar cat = {\n    name: &quot;cat&quot;,\n\n    //指向animal对象(cat继承自animal)\n    __proto__: animal\n};\n\ndog.eat();\ncat.eat();\n</code></pre><p>使用 prototype 实现继承</p>\n<pre><code>//创建animal对象\nvar animal = {\n    name: &quot;animal&quot;,\n\n    eat: function () {\n        console.log(this.name + &quot; is eating&quot;);\n    }\n};\n\n//创建构造函数Dog\nfunction Dog() {\n    this.name = &quot;dog&quot;;\n}\n\n//创建构造函数Cat\nfunction Cat() {\n    this.name = &quot;cat&quot;;\n}\n\n//设置Dog的原型为animal(Dog继承自animal)\nDog.prototype = animal;\n\n//设置Cat的原型为animal(Cat继承自animal)\nCat.prototype = animal;\n\n//创建dog对象\nvar dog = new Dog();\n\n//创建cat对象\nvar cat = new Cat();\n\ndog.eat();\ncat.eat();\n</code></pre><p><strong>16、JavaScript 中事件绑定的方式</strong>  </p>\n<pre><code>button.onclick = function() {}\n\nbutton.addEventListener(&quot;click&quot;, function () {});\n</code></pre><p><strong>17、设计一个函数实现判断一个数据的数据类型是不是数组</strong>  </p>\n<pre><code>function isArray(num) {\n    return num instanceof Array;\n}\n</code></pre><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>自我介绍没准备好，只介绍了我的个人信息，没有介绍工作经历和做过的项目，说话吞吞吐吐，</li>\n<li>笔试和面试的问题大部分都是前端开发中的基础知识，只有少部分 ES6 和 jQuery 的内容，可见我前端基础掌握的不够好  </li>\n<li>没有提前计划好，导致块要超过约定的时间时才到面试地点 </li>\n<li>不管是面试还是笔试不知道的就说不知道，不清楚的地方要多问  </li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">深入理解CSS中的层叠上下文和层叠顺序</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513059&amp;idx=1&amp;sn=a2eaf97d9e3000d15a33681d1b720463&amp;scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">Javascript：一个屌丝的逆袭</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513786&amp;idx=1&amp;sn=6f51ad314e3ef3e1575e032568477f3a&amp;scene=0#wechat_redirect&amp;rd2werd=1#wechat_redirect\" target=\"_blank\" rel=\"noopener\">javascript王国的一次旅行，一个没有类的世界怎么玩转面向对象？</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513789&amp;idx=1&amp;sn=e2e39002a915291fa06050c8116c2f96&amp;chksm=80d67b7eb7a1f2681267fa53c624add554c47ed1c39dc8d44b98b0a414c80a646e52ad399173&amp;scene=4&amp;rd2werd=1#wechat_redirect\" target=\"_blank\" rel=\"noopener\">javascript王国之函数教主</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode\" target=\"_blank\" rel=\"noopener\">怪异模式和标准模式</a></li>\n<li><a href=\"http://www.cnblogs.com/starof/p/5035119.html\" target=\"_blank\" rel=\"noopener\">HTTP常见状态码 200 301 302 404 500 - starof - 博客园</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E6%AC%A1%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/\">一次有意义的前端面试总结</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>我今天去参加了位于深圳某公司的前端开发工程师岗位的面试，这是我来深圳后参加的第二次面试，感觉这次面试经历比较有趣，也通过这次面试学到了很多东西，所以决定以博客的形式记录下来。<br>","more":"</p>\n<h2 id=\"获得面试机会\"><a href=\"#获得面试机会\" class=\"headerlink\" title=\"获得面试机会\"></a>获得面试机会</h2><p>该从哪里讲起呢，就从看到那个公司的招聘信息讲起吧，当我还在江西老家的时候就打算年后来深圳找工作，所以我在来深圳之前就通过Boss直聘和一些技术社区查找深圳的前端开发工程师的招聘信息，并投递了部分简历，在某个<strong>技术论坛</strong>上看到这个公司招聘前端工程师，我便通过Email投了一份简历过去，几天后对方回复了我一份邮件，大意是问我何时有空去面试，我当时还在江西老家，告知对方我要在正月十五才会去深圳后，对方很爽快的表示我到深圳后再告知对方，再安排其他时间面试，我到了深圳后发Email告诉对方我来深圳了，在元宵节假期结束后的的第一天上班时，对方发来了回复邮件，让HR为我安排面试时间，下午HR便打电话给我，通知我去面试，并通过Email将面试的时间和地址发给了我，感觉比Boss直聘上的通知方式要正式的多，在Boss直聘上如果对方通知你去面试直接就说你过来面试吧，还要自己再问对方，对方才会告知你面试的地址。</p>\n<h2 id=\"满是陷阱的笔试\"><a href=\"#满是陷阱的笔试\" class=\"headerlink\" title=\"满是陷阱的笔试\"></a>满是陷阱的笔试</h2><p>乘地铁到高新园站出来后便来到了那个公司的所在地，一栋非常高端的写字楼，那个公司就在这个写字楼里，进入公司后便开始笔试，感觉笔试题都很基础，但是里面有很多陷阱，比如第一题<code>要求写出 10 + &#39;20&#39; 的值，然后将计算的结果再加 &#39;20&#39;</code>，这题主要考察数字与字符串之间的运算，在 JavaScript 中字符串加上数字，首先需要将数字转换成字符串，然后再进行相加运算，相加的结果仍能是字符串，所以 <code>10 + &#39;20&#39; = &#39;1020&#39;</code>，结果再加上’20’为 <code>&#39;1020&#39; + &#39;20&#39; = &#39;102020&#39;</code>。还有一题<code>要求写出add(4)(5)的实现函数</code>，看到这题后我一脸懵逼，函数不都是只有一个括号吗，这里怎么出现了两个括号，面试结束后我通过在一个前端交流群里问了这个问题，这题考察的是函数柯里化，还有一题要求<code>使用ES6的语法实现数组去重</code>等，通过这次面试我也发现了我的很多知识盲区。</p>\n<h2 id=\"糟糕的自我介绍\"><a href=\"#糟糕的自我介绍\" class=\"headerlink\" title=\"糟糕的自我介绍\"></a>糟糕的自我介绍</h2><p>笔试结束后HR拿着我的简历和做的笔试题指引我来到了一个会议室，当我在会议室坐下后不久，会议室里进来了一位女士，她就是我今天面试的面试官，互相打了个招呼后，她首先让我做自我介绍，然后我便说道<code>我叫 xxx，今年 xx 岁，来自江西，有一年工作经验，过来是应聘前端开发工程师职位</code>，我说完后她让我再介绍一下之前的工作经历和做过的项目，我因为提前没准备好，说的吞吞吐吐，这次我学到了<strong>做自我介绍时要简要的介绍一下个人信息、工作经历和之前做过的项目</strong>。</p>\n<h2 id=\"有意义的面试\"><a href=\"#有意义的面试\" class=\"headerlink\" title=\"有意义的面试\"></a>有意义的面试</h2><p>自我介绍完成后她便拿着我的简历问我问题。<br><strong>面试官：</strong>你知道盒模型吗？<br><strong>我：</strong>盒模型是由 margin、border、padding、width 巴拉巴拉一大堆。<br><strong>面试官：</strong>我是问你标准盒模型和怪异模型你了解吗？<br><strong>我：</strong>标准盒模型width=padding+border+(当时太紧张了，不知道如何回答了)。<br><strong>面试官：</strong>你知道 JavaScript 中的事件绑定方式吗？<br><strong>我：</strong>onclick。<br><strong>面试官：</strong>onclick不能算是事件绑定的方式。<br><strong>我：</strong>addEventListener。<br><strong>面试官：</strong>还有吗？<br><strong>我：</strong>我知道的就这么多。<br><strong>面试官：</strong>知道 rem 和 em 吗，他们两个有什么区别？<br><strong>我：</strong>rem表示的是相对于网页的根节点然后巴拉巴拉一大堆。<br><strong>面试官：</strong>知道原型吗？<br><strong>我：</strong>知道，在 JavaScript 中的继承就是通过原型实现的。<br><strong>面试官：</strong>那你说说 JavaScript 中实现继承的方式有哪些？<br><strong>我：</strong>巴拉巴拉一大堆。<br><strong>面试官：</strong>知道数据的存储方式吗？<br><strong>我：</strong>localStorage、seesionStorage、Cookie。<br><strong>面试官：</strong>localStorage 和 sessionStorage 之间有什么区别？<br><strong>我：</strong>localStorage 可以实现数据的永久保存，sessionStorage 存放的数据，当浏览器关闭后会自动丢失。<br><strong>面试官：</strong> 知道元素层叠吗？<br><strong>我：</strong>一脸懵逼，后来不知怎么回事就想起来了，我顺便问了一句是指两个元素，一个在上面一个在下面，两个元素的距离为那个margin值大的那个元素的margin值吗？<br><strong>面试官：</strong>如何解决这个问题？<br><strong>我：</strong>能用padding就尽量不要用margin。<br><strong>面试官：</strong>知道call和apply吗？<br><strong>我：</strong>你能不能在纸上写一下(当时没听懂)，两个都可以让对象调用函数，其中apply中的第一个参数为调用函数的对象，第二个参数为函数传递的数据，其中apply传递数据是数组，call巴拉巴拉。<br><strong>面试官：</strong>知道跨域吗？<br><strong>我：</strong>知道。<br><strong>面试官：</strong>如何解决跨域问题？<br><strong>我：</strong>使用JSONP和在服务器端设置CORS。<br><strong>面试官：</strong>看你简历中还提到了你会组件化开发，那你介绍一下你的项目中哪里设使用了组件化开发？<br><strong>我：</strong>header组件用于头部、footer组件用于脚部、banner组件用于轮播图。<br><strong>面试官：</strong>介绍一个组件，并说一个如何设计它的外部接口？<br><strong>我：</strong>那就介绍banner组件吧。<br><strong>面试官：</strong>好。<br><strong>我：</strong>banner组件可以设计一个JSON数组，数组中的对象可以设计url属性表示点击图片后跳转的链接，image属性表示图片的地址巴拉巴拉。。。<br><strong>面试官：</strong>好了你回去等通知吧。  </p>\n<h2 id=\"最后附上我能想起来的笔试题和面试题\"><a href=\"#最后附上我能想起来的笔试题和面试题\" class=\"headerlink\" title=\"最后附上我能想起来的笔试题和面试题\"></a>最后附上我能想起来的笔试题和面试题</h2><p><strong>1、10 + ‘20’ = ? 再加 ‘20’ 呢？</strong>  </p>\n<pre><code>10 + &apos;20&apos; = &apos;1020&apos; \n&apos;1020&apos; + &apos;20&apos; = &apos;102020&apos;\n</code></pre><p><strong>2、请写出 Ajax 请求中用到的函数</strong>  </p>\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.open(&apos;GET/POST&apos;, &apos;http://localhost:8080?username=meishadevs&apos;, true);\nxhr.onreadystatechange = function() {};\nxhr.send();\n</code></pre><p><strong>3、使用正则表达式提取出url值为 <a href=\"https://map.baidu.com/x/y/z\" target=\"_blank\" rel=\"noopener\">https://map.baidu.com/x/y/z</a> 中的 <a href=\"map.baidu.com\">map.baidu.com</a></strong>  </p>\n<pre><code>/https:\\/\\/([^\\/]+)/.exec(&apos;https://map.baidu.com/x/y/z&apos;)[1]\n&apos;https://map.baidu.com/x/y/z&apos;.match(/https:\\/\\/([^\\/]+)/)[1]\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/exec.png\" alt=\"\"></p>\n<p><strong>4、使用ES6的方法实现数组去重</strong>  </p>\n<pre><code>let array = [1, 1, 1, 1, 2, 3, 4, 4, 5, 3];\nlet set = new Set(array);\nlet arr = Array.from(set);\n</code></pre><p><strong>5、设计一个函数实现add(3)(4)</strong>  </p>\n<pre><code>function add(a) {\n    return function(b) {\n        return a + b;\n    }\n}\n\nadd(3)(4)\n</code></pre><p>ES6的写法</p>\n<pre><code>add = a =&gt; b =&gt; a + b\nadd(3)(4)\n</code></pre><p>对ES6写法做一个变形</p>\n<pre><code>add = a =&gt; (b =&gt; a + b)\n</code></pre><p>再变</p>\n<pre><code>add = function (a) {\n    return (b =&gt; a + b)\n}\n</code></pre><p>再变</p>\n<pre><code>add = function (a) {\n    return function (b) {\n        return a + b;\n    }\n}\n</code></pre><p><strong>6、使用Ajax实现一个表单提交功能，并跳转到提交的地址，（可以使用 jQuery 或 Zepto</strong>）  </p>\n<p><strong>7、在完成第6题后使用 Promise 再实现一遍</strong>  </p>\n<p><strong>8、JavaScript中的基本数据类型</strong>  </p>\n<pre><code>Number、String、Boolean、Null、Undefined\n</code></pre><p><strong>9、一道响应式布局的题目</strong></p>\n<p><strong>10、call、apply的作用与区别</strong><br>call 和 apply 都是为了改变函数体内部 this 的指向，它们的第一个参数都是调用函数的对象，call方法接收由若干个参数组成的参数列表，apply方法接收的是一个包含多个参数的数组</p>\n<p>例如使用<strong>call</strong>获取一组数字中的最大值</p>\n<pre><code>Math.max.call(null, 1, 3, 5, 8, 2)\n</code></pre><p>例如使用<strong>apply</strong>获取一组数字中的最大值</p>\n<pre><code>Math.max.apply(null, [1, 3, 5, 8, 2])\n</code></pre><p><strong>11、标准盒模型和怪异盒模型的区别</strong><br>标准盒模型的 box-sizing 属性的值为 content-box<br>怪异盒模型的 box-sizing 属性的值为 border-box<br>标准盒模型中 width = 内容的宽度<br>怪异盒模型中 width = 内容的宽度 + padding + border  </p>\n<p><strong>12、em 与 rem 的区别</strong><br>rem 表示根节点(html标签)的字体大小的倍数<br>当 em 作为 font-size 的单位时，表示相对于父元素的 font-size 值的倍数<br>当 em作为其他属性单位时，代表自身字体大小的倍数</p>\n<p><strong>13、localStorage 与 sessionStorage 的区别</strong><br>使用 localStorage 保存的数据，除非手动清除，否则会永久保存<br>使用 sessionStorage 保存的数据仅在当前会话下有效，关闭页面或浏览器后会被清除  </p>\n<p><strong>14、元素层叠</strong><br>参考张鑫旭大神的文章：<a href=\"http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">深入理解CSS中的层叠上下文和层叠顺序</a></p>\n<p><strong>15、使用原型现继承</strong>  </p>\n<p>使用 __proto__ 实现继承(不推荐使用这种方式)</p>\n<pre><code>//创建animal对象\nvar animal = {\n    name: &quot;animal&quot;,\n\n    eat: function () {\n        console.log(this.name + &quot; is eating&quot;);\n    }\n};\n\n//创建dog对象\nvar dog = {\n    name: &quot;dog&quot;,\n\n    //指向animal对象（dog继承自animal）\n    __proto__: animal\n};\n\n//创建cat对象\nvar cat = {\n    name: &quot;cat&quot;,\n\n    //指向animal对象(cat继承自animal)\n    __proto__: animal\n};\n\ndog.eat();\ncat.eat();\n</code></pre><p>使用 prototype 实现继承</p>\n<pre><code>//创建animal对象\nvar animal = {\n    name: &quot;animal&quot;,\n\n    eat: function () {\n        console.log(this.name + &quot; is eating&quot;);\n    }\n};\n\n//创建构造函数Dog\nfunction Dog() {\n    this.name = &quot;dog&quot;;\n}\n\n//创建构造函数Cat\nfunction Cat() {\n    this.name = &quot;cat&quot;;\n}\n\n//设置Dog的原型为animal(Dog继承自animal)\nDog.prototype = animal;\n\n//设置Cat的原型为animal(Cat继承自animal)\nCat.prototype = animal;\n\n//创建dog对象\nvar dog = new Dog();\n\n//创建cat对象\nvar cat = new Cat();\n\ndog.eat();\ncat.eat();\n</code></pre><p><strong>16、JavaScript 中事件绑定的方式</strong>  </p>\n<pre><code>button.onclick = function() {}\n\nbutton.addEventListener(&quot;click&quot;, function () {});\n</code></pre><p><strong>17、设计一个函数实现判断一个数据的数据类型是不是数组</strong>  </p>\n<pre><code>function isArray(num) {\n    return num instanceof Array;\n}\n</code></pre><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>自我介绍没准备好，只介绍了我的个人信息，没有介绍工作经历和做过的项目，说话吞吞吐吐，</li>\n<li>笔试和面试的问题大部分都是前端开发中的基础知识，只有少部分 ES6 和 jQuery 的内容，可见我前端基础掌握的不够好  </li>\n<li>没有提前计划好，导致块要超过约定的时间时才到面试地点 </li>\n<li>不管是面试还是笔试不知道的就说不知道，不清楚的地方要多问  </li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">深入理解CSS中的层叠上下文和层叠顺序</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513059&amp;idx=1&amp;sn=a2eaf97d9e3000d15a33681d1b720463&amp;scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">Javascript：一个屌丝的逆袭</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513786&amp;idx=1&amp;sn=6f51ad314e3ef3e1575e032568477f3a&amp;scene=0#wechat_redirect&amp;rd2werd=1#wechat_redirect\" target=\"_blank\" rel=\"noopener\">javascript王国的一次旅行，一个没有类的世界怎么玩转面向对象？</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513789&amp;idx=1&amp;sn=e2e39002a915291fa06050c8116c2f96&amp;chksm=80d67b7eb7a1f2681267fa53c624add554c47ed1c39dc8d44b98b0a414c80a646e52ad399173&amp;scene=4&amp;rd2werd=1#wechat_redirect\" target=\"_blank\" rel=\"noopener\">javascript王国之函数教主</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode\" target=\"_blank\" rel=\"noopener\">怪异模式和标准模式</a></li>\n<li><a href=\"http://www.cnblogs.com/starof/p/5035119.html\" target=\"_blank\" rel=\"noopener\">HTTP常见状态码 200 301 302 404 500 - starof - 博客园</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E6%AC%A1%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/\">一次有意义的前端面试总结</a>】</p>\n</blockquote>"},{"title":"使用GitHub部署网站","date":"2017-03-07T16:00:00.000Z","_content":"\n在上一篇博客中介绍了[使用新浪云部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)这篇博客将介绍另一种部署网站的方式，使用GitHub部署网站。\n<!--more-->\n\n## 两种部署网站的方式比较\n![](http://oq3pg8pg4.bkt.clouddn.com/20161227094654160.png)\n\n部署网站之前，先要有一个GitHub账号，熟悉一些Git命令，注册GitHub账号和使用git命令可以参考下面的文档，这个文档中介绍的非常详细，我也不做过多的介绍  \n**从0开始学习GitHub：**[http://pan.baidu.com/s/1hsn57YO](http://pan.baidu.com/s/1hsn57YO)\n\n注册好GitHub账号并且完善用户信息后可以得到一个下图所示的界面，下图是我的GitHub界面，其中界面中的信息介绍可以参考[从0开始学习 GITHUB 系列之「加入 GITHUB」](http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/)，这篇博客对GitHub界面的信息介绍的非常详细\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226214844895.png)\n\n## 下面进入正题，使用GitHub部署网站\n**第一步：**单击Repositories，其中Repositories在GitHub上表示的是仓库，在GitHub上每个项目都存放在仓库里，一个仓库保存一个项目\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226215559693.png)\n\n**第二步：**单击New按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226220437338.png)\n\n**第三步：**单击根据图中的提示填写信息，信息填写完成后单击Create respository按钮创建仓库\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226221833076.png)\n\n**第四步：**单击创建好仓库后会自动跳转到下图所示的界面，在界面中单击Settings\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226222230082.png)\n\n**第五步：**进入设置界面后一直往下，找到GitHub Page,并且单击GitHub Page模块中的Choose them按钮创建一个网站的主题\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226222855256.png)\n\n**第六步：**选择Cayman主题，然后单击select theme按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226223107905.png)\n\n**第七步：**单击Commit changes按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226223508227.png)\n\n**第八步：**单击Commit changes按钮后会自动跳转到我们创建的仓库界面，里面包含了仓库的各种信息，其中master表示这个仓库位于master分之上，进入界面后单击Settings按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226224351486.png)\n\n**第九步：** 在Settings界面中往下滑，滑到GitHub Page模块，可以看到GitHub Page模块中多了一个网址\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226224724966.png)\n\n**第十步：**在浏览器中打开网址后可以看到网页上呈现出的内容就是我们刚刚创建的主题为Cayman的网页\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226225252484.png)\n\n**第十一步：**回到GitHub上并且打开我们刚刚创建的那个仓库，仓库里的文件就是刚刚在浏览器中显示的内容，接下来要做的事情就是修改仓库里的文件，单击Clone or download按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226225859038.png)\n\n**第十二步：**单击复制到剪切板按钮，复制仓库的url\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226230341481.png)\n\n**第十三步：**在下面的操作中需要电脑中安装了git，并且熟悉几个简单的git命令，关于git的安装以及git命令的使用可以参考[从0开始学习 GITHUB 系列之「GIT 速成」](http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/)这篇博客将git介绍的非常通俗易懂，安装好git后，先在电脑中创建一个文件夹用于保存从Github中克隆下来的仓库，我建的文件夹叫做GitProject，在E:\\game路径下，打开命令行进入GitProject文件夹下\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226231237026.png)\n\n**第十四步：**执行`git clone https://github.com/meishaxiaozi/boyaa.git`命令，其中`git clone`表示要克隆一个项目，后面的`https://github.com/meishaxiaozi/boyaa.git`表示项目地址，该地址是由**第十二步**操作获得的，当在最后一行出现了100%表示，远程仓库已经成功的克隆到了本地\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226231723810.png)\n\n**第十五步：**打开GitProject文件夹，可以看到在文件夹中多了一个boyaa文件，该文件正是刚刚在GitHub中创建的仓库\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226232212468.png)\n\n**第十六步：**打开文件，并且将需要上传到GitHub上的网站添加到该文件中\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226232503219.png)\n\n**第十七步：**打开命令行，并且进入boyaa文件夹下，并且执行 `git add .` 命令，此命令表示将需要提交到git中的文件先添加到缓存\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226232914298.png)\n\n**第十八步：**执行 `git commit -m “first commit .”`命令，此命令表示将文件提交到git中，下面显示的都是提交到git中的文件\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226233236959.png)\n\n**第十九步：**执行 `git push origin master` 命令，将文件push到GitHub上的master分支上，当出现下图所示的提示信息时，表示网站已经成功的提交到了GitHub上\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226233708442.png)\n\n**第二十步：**回到Github上的boyaa仓库，可以看到文件已经全部提交上来了\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226233941249.png)\n\n**第二十一步：**再次打开位于Settings下，GitHub Page模块中的网址，可以看到网页变成了我们修改后的页面  \n**网站的网址：**[https://meishaxiaozi.github.io/boyaa/](https://meishaxiaozi.github.io/boyaa/)  \n**网址的格式：**https:// + GitHub的用户名 + .github.io/ + 仓库的名称\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226235606553.png)\n\n## GitHub部署网站简化版\n上面介绍的步骤比较复杂，熟悉Git命令的话可以使用几条简单的Git命令实现部署\n\n**第一步：**在Git Bash中执行下面的命令，创建一个boyaa文件夹\n\n\tmkdir boyaa\n\n**第二步：**将需要部署到GitHub上的文件添加到boyaa文件夹中\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170429110653556.png)\n\n**第三步：**进入boyaa文件夹中\n\n\tcd boyaa \n\n**第四步：**初始化一个本地Git仓库\n\n\tgit init\n\n**第五步：**将需要提交的文件添加到缓存区\n\n\tgit add .\n\n**第六步：**将文件提交到本地仓库\n\n\tgit commit -m \"update some data\"\n\n**第七步：**创建一个gh-pages分支\n\n\tgit branch gh-pages\n\n**第八步：**切换到gh-pages分支，gh-pages分支是一个比较特殊的分支，网页文件提交到gh-pages分支上，可以通过HTTP协议访问gh-pages分支上的网页文件\n\n\tgit checkout gh-pages\n\n**第九步：**为本地仓库关联一个远程仓库，其中远程仓库为上一种方法中的第三步创建的boyaa仓库\n\n\tgit remote add origin https://github.com/meishadevs/boyaa.git\n\n**第十步：**将网页文件提交到远程仓库中的gh-pages分支上\n\n\tgit push origin gh-pages\n\n**第十一步：**访问网页  \n此时可以通过[https://meishadevs.github.io/boyaa](https://meishadevs.github.io/boyaa)访问部署好的网页\n\n**说明：**部署到gh-pages分支上的网页的URL格式为  \n\n\thttps:// + username.github.io/ + GitHub上的仓库名\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用GitHub部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8GitHub%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)】","source":"_posts/使用GitHub部署网站.md","raw":"---\ntitle: 使用GitHub部署网站\ndate: 2017-03-08\ncategories:\n\t- 部署\ntags:\n\t- 部署\n---\n\n在上一篇博客中介绍了[使用新浪云部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)这篇博客将介绍另一种部署网站的方式，使用GitHub部署网站。\n<!--more-->\n\n## 两种部署网站的方式比较\n![](http://oq3pg8pg4.bkt.clouddn.com/20161227094654160.png)\n\n部署网站之前，先要有一个GitHub账号，熟悉一些Git命令，注册GitHub账号和使用git命令可以参考下面的文档，这个文档中介绍的非常详细，我也不做过多的介绍  \n**从0开始学习GitHub：**[http://pan.baidu.com/s/1hsn57YO](http://pan.baidu.com/s/1hsn57YO)\n\n注册好GitHub账号并且完善用户信息后可以得到一个下图所示的界面，下图是我的GitHub界面，其中界面中的信息介绍可以参考[从0开始学习 GITHUB 系列之「加入 GITHUB」](http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/)，这篇博客对GitHub界面的信息介绍的非常详细\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226214844895.png)\n\n## 下面进入正题，使用GitHub部署网站\n**第一步：**单击Repositories，其中Repositories在GitHub上表示的是仓库，在GitHub上每个项目都存放在仓库里，一个仓库保存一个项目\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226215559693.png)\n\n**第二步：**单击New按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226220437338.png)\n\n**第三步：**单击根据图中的提示填写信息，信息填写完成后单击Create respository按钮创建仓库\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226221833076.png)\n\n**第四步：**单击创建好仓库后会自动跳转到下图所示的界面，在界面中单击Settings\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226222230082.png)\n\n**第五步：**进入设置界面后一直往下，找到GitHub Page,并且单击GitHub Page模块中的Choose them按钮创建一个网站的主题\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226222855256.png)\n\n**第六步：**选择Cayman主题，然后单击select theme按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226223107905.png)\n\n**第七步：**单击Commit changes按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226223508227.png)\n\n**第八步：**单击Commit changes按钮后会自动跳转到我们创建的仓库界面，里面包含了仓库的各种信息，其中master表示这个仓库位于master分之上，进入界面后单击Settings按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226224351486.png)\n\n**第九步：** 在Settings界面中往下滑，滑到GitHub Page模块，可以看到GitHub Page模块中多了一个网址\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226224724966.png)\n\n**第十步：**在浏览器中打开网址后可以看到网页上呈现出的内容就是我们刚刚创建的主题为Cayman的网页\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226225252484.png)\n\n**第十一步：**回到GitHub上并且打开我们刚刚创建的那个仓库，仓库里的文件就是刚刚在浏览器中显示的内容，接下来要做的事情就是修改仓库里的文件，单击Clone or download按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226225859038.png)\n\n**第十二步：**单击复制到剪切板按钮，复制仓库的url\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226230341481.png)\n\n**第十三步：**在下面的操作中需要电脑中安装了git，并且熟悉几个简单的git命令，关于git的安装以及git命令的使用可以参考[从0开始学习 GITHUB 系列之「GIT 速成」](http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/)这篇博客将git介绍的非常通俗易懂，安装好git后，先在电脑中创建一个文件夹用于保存从Github中克隆下来的仓库，我建的文件夹叫做GitProject，在E:\\game路径下，打开命令行进入GitProject文件夹下\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226231237026.png)\n\n**第十四步：**执行`git clone https://github.com/meishaxiaozi/boyaa.git`命令，其中`git clone`表示要克隆一个项目，后面的`https://github.com/meishaxiaozi/boyaa.git`表示项目地址，该地址是由**第十二步**操作获得的，当在最后一行出现了100%表示，远程仓库已经成功的克隆到了本地\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226231723810.png)\n\n**第十五步：**打开GitProject文件夹，可以看到在文件夹中多了一个boyaa文件，该文件正是刚刚在GitHub中创建的仓库\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226232212468.png)\n\n**第十六步：**打开文件，并且将需要上传到GitHub上的网站添加到该文件中\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226232503219.png)\n\n**第十七步：**打开命令行，并且进入boyaa文件夹下，并且执行 `git add .` 命令，此命令表示将需要提交到git中的文件先添加到缓存\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226232914298.png)\n\n**第十八步：**执行 `git commit -m “first commit .”`命令，此命令表示将文件提交到git中，下面显示的都是提交到git中的文件\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226233236959.png)\n\n**第十九步：**执行 `git push origin master` 命令，将文件push到GitHub上的master分支上，当出现下图所示的提示信息时，表示网站已经成功的提交到了GitHub上\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226233708442.png)\n\n**第二十步：**回到Github上的boyaa仓库，可以看到文件已经全部提交上来了\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226233941249.png)\n\n**第二十一步：**再次打开位于Settings下，GitHub Page模块中的网址，可以看到网页变成了我们修改后的页面  \n**网站的网址：**[https://meishaxiaozi.github.io/boyaa/](https://meishaxiaozi.github.io/boyaa/)  \n**网址的格式：**https:// + GitHub的用户名 + .github.io/ + 仓库的名称\n![](http://oq3pg8pg4.bkt.clouddn.com/20161226235606553.png)\n\n## GitHub部署网站简化版\n上面介绍的步骤比较复杂，熟悉Git命令的话可以使用几条简单的Git命令实现部署\n\n**第一步：**在Git Bash中执行下面的命令，创建一个boyaa文件夹\n\n\tmkdir boyaa\n\n**第二步：**将需要部署到GitHub上的文件添加到boyaa文件夹中\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170429110653556.png)\n\n**第三步：**进入boyaa文件夹中\n\n\tcd boyaa \n\n**第四步：**初始化一个本地Git仓库\n\n\tgit init\n\n**第五步：**将需要提交的文件添加到缓存区\n\n\tgit add .\n\n**第六步：**将文件提交到本地仓库\n\n\tgit commit -m \"update some data\"\n\n**第七步：**创建一个gh-pages分支\n\n\tgit branch gh-pages\n\n**第八步：**切换到gh-pages分支，gh-pages分支是一个比较特殊的分支，网页文件提交到gh-pages分支上，可以通过HTTP协议访问gh-pages分支上的网页文件\n\n\tgit checkout gh-pages\n\n**第九步：**为本地仓库关联一个远程仓库，其中远程仓库为上一种方法中的第三步创建的boyaa仓库\n\n\tgit remote add origin https://github.com/meishadevs/boyaa.git\n\n**第十步：**将网页文件提交到远程仓库中的gh-pages分支上\n\n\tgit push origin gh-pages\n\n**第十一步：**访问网页  \n此时可以通过[https://meishadevs.github.io/boyaa](https://meishadevs.github.io/boyaa)访问部署好的网页\n\n**说明：**部署到gh-pages分支上的网页的URL格式为  \n\n\thttps:// + username.github.io/ + GitHub上的仓库名\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用GitHub部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8GitHub%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)】","slug":"使用GitHub部署网站","published":1,"updated":"2018-07-07T02:23:40.261Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000ajc7uhnvbm2nb","content":"<p>在上一篇博客中介绍了<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">使用新浪云部署网站</a>这篇博客将介绍另一种部署网站的方式，使用GitHub部署网站。<br><a id=\"more\"></a></p>\n<h2 id=\"两种部署网站的方式比较\"><a href=\"#两种部署网站的方式比较\" class=\"headerlink\" title=\"两种部署网站的方式比较\"></a>两种部署网站的方式比较</h2><p><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161227094654160.png\" alt=\"\"></p>\n<p>部署网站之前，先要有一个GitHub账号，熟悉一些Git命令，注册GitHub账号和使用git命令可以参考下面的文档，这个文档中介绍的非常详细，我也不做过多的介绍<br><strong>从0开始学习GitHub：</strong><a href=\"http://pan.baidu.com/s/1hsn57YO\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/s/1hsn57YO</a></p>\n<p>注册好GitHub账号并且完善用户信息后可以得到一个下图所示的界面，下图是我的GitHub界面，其中界面中的信息介绍可以参考<a href=\"http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/\" target=\"_blank\" rel=\"noopener\">从0开始学习 GITHUB 系列之「加入 GITHUB」</a>，这篇博客对GitHub界面的信息介绍的非常详细<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226214844895.png\" alt=\"\"></p>\n<h2 id=\"下面进入正题，使用GitHub部署网站\"><a href=\"#下面进入正题，使用GitHub部署网站\" class=\"headerlink\" title=\"下面进入正题，使用GitHub部署网站\"></a>下面进入正题，使用GitHub部署网站</h2><p><strong>第一步：</strong>单击Repositories，其中Repositories在GitHub上表示的是仓库，在GitHub上每个项目都存放在仓库里，一个仓库保存一个项目<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226215559693.png\" alt=\"\"></p>\n<p><strong>第二步：</strong>单击New按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226220437338.png\" alt=\"\"></p>\n<p><strong>第三步：</strong>单击根据图中的提示填写信息，信息填写完成后单击Create respository按钮创建仓库<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226221833076.png\" alt=\"\"></p>\n<p><strong>第四步：</strong>单击创建好仓库后会自动跳转到下图所示的界面，在界面中单击Settings<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226222230082.png\" alt=\"\"></p>\n<p><strong>第五步：</strong>进入设置界面后一直往下，找到GitHub Page,并且单击GitHub Page模块中的Choose them按钮创建一个网站的主题<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226222855256.png\" alt=\"\"></p>\n<p><strong>第六步：</strong>选择Cayman主题，然后单击select theme按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226223107905.png\" alt=\"\"></p>\n<p><strong>第七步：</strong>单击Commit changes按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226223508227.png\" alt=\"\"></p>\n<p><strong>第八步：</strong>单击Commit changes按钮后会自动跳转到我们创建的仓库界面，里面包含了仓库的各种信息，其中master表示这个仓库位于master分之上，进入界面后单击Settings按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226224351486.png\" alt=\"\"></p>\n<p><strong>第九步：</strong> 在Settings界面中往下滑，滑到GitHub Page模块，可以看到GitHub Page模块中多了一个网址<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226224724966.png\" alt=\"\"></p>\n<p><strong>第十步：</strong>在浏览器中打开网址后可以看到网页上呈现出的内容就是我们刚刚创建的主题为Cayman的网页<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226225252484.png\" alt=\"\"></p>\n<p><strong>第十一步：</strong>回到GitHub上并且打开我们刚刚创建的那个仓库，仓库里的文件就是刚刚在浏览器中显示的内容，接下来要做的事情就是修改仓库里的文件，单击Clone or download按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226225859038.png\" alt=\"\"></p>\n<p><strong>第十二步：</strong>单击复制到剪切板按钮，复制仓库的url<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226230341481.png\" alt=\"\"></p>\n<p><strong>第十三步：</strong>在下面的操作中需要电脑中安装了git，并且熟悉几个简单的git命令，关于git的安装以及git命令的使用可以参考<a href=\"http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/\" target=\"_blank\" rel=\"noopener\">从0开始学习 GITHUB 系列之「GIT 速成」</a>这篇博客将git介绍的非常通俗易懂，安装好git后，先在电脑中创建一个文件夹用于保存从Github中克隆下来的仓库，我建的文件夹叫做GitProject，在E:\\game路径下，打开命令行进入GitProject文件夹下<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226231237026.png\" alt=\"\"></p>\n<p><strong>第十四步：</strong>执行<code>git clone https://github.com/meishaxiaozi/boyaa.git</code>命令，其中<code>git clone</code>表示要克隆一个项目，后面的<code>https://github.com/meishaxiaozi/boyaa.git</code>表示项目地址，该地址是由<strong>第十二步</strong>操作获得的，当在最后一行出现了100%表示，远程仓库已经成功的克隆到了本地<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226231723810.png\" alt=\"\"></p>\n<p><strong>第十五步：</strong>打开GitProject文件夹，可以看到在文件夹中多了一个boyaa文件，该文件正是刚刚在GitHub中创建的仓库<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226232212468.png\" alt=\"\"></p>\n<p><strong>第十六步：</strong>打开文件，并且将需要上传到GitHub上的网站添加到该文件中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226232503219.png\" alt=\"\"></p>\n<p><strong>第十七步：</strong>打开命令行，并且进入boyaa文件夹下，并且执行 <code>git add .</code> 命令，此命令表示将需要提交到git中的文件先添加到缓存<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226232914298.png\" alt=\"\"></p>\n<p><strong>第十八步：</strong>执行 <code>git commit -m “first commit .”</code>命令，此命令表示将文件提交到git中，下面显示的都是提交到git中的文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226233236959.png\" alt=\"\"></p>\n<p><strong>第十九步：</strong>执行 <code>git push origin master</code> 命令，将文件push到GitHub上的master分支上，当出现下图所示的提示信息时，表示网站已经成功的提交到了GitHub上<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226233708442.png\" alt=\"\"></p>\n<p><strong>第二十步：</strong>回到Github上的boyaa仓库，可以看到文件已经全部提交上来了<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226233941249.png\" alt=\"\"></p>\n<p><strong>第二十一步：</strong>再次打开位于Settings下，GitHub Page模块中的网址，可以看到网页变成了我们修改后的页面<br><strong>网站的网址：</strong><a href=\"https://meishaxiaozi.github.io/boyaa/\" target=\"_blank\" rel=\"noopener\">https://meishaxiaozi.github.io/boyaa/</a><br><strong>网址的格式：</strong>https:// + GitHub的用户名 + .github.io/ + 仓库的名称<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226235606553.png\" alt=\"\"></p>\n<h2 id=\"GitHub部署网站简化版\"><a href=\"#GitHub部署网站简化版\" class=\"headerlink\" title=\"GitHub部署网站简化版\"></a>GitHub部署网站简化版</h2><p>上面介绍的步骤比较复杂，熟悉Git命令的话可以使用几条简单的Git命令实现部署</p>\n<p><strong>第一步：</strong>在Git Bash中执行下面的命令，创建一个boyaa文件夹</p>\n<pre><code>mkdir boyaa\n</code></pre><p><strong>第二步：</strong>将需要部署到GitHub上的文件添加到boyaa文件夹中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170429110653556.png\" alt=\"这里写图片描述\"></p>\n<p><strong>第三步：</strong>进入boyaa文件夹中</p>\n<pre><code>cd boyaa \n</code></pre><p><strong>第四步：</strong>初始化一个本地Git仓库</p>\n<pre><code>git init\n</code></pre><p><strong>第五步：</strong>将需要提交的文件添加到缓存区</p>\n<pre><code>git add .\n</code></pre><p><strong>第六步：</strong>将文件提交到本地仓库</p>\n<pre><code>git commit -m &quot;update some data&quot;\n</code></pre><p><strong>第七步：</strong>创建一个gh-pages分支</p>\n<pre><code>git branch gh-pages\n</code></pre><p><strong>第八步：</strong>切换到gh-pages分支，gh-pages分支是一个比较特殊的分支，网页文件提交到gh-pages分支上，可以通过HTTP协议访问gh-pages分支上的网页文件</p>\n<pre><code>git checkout gh-pages\n</code></pre><p><strong>第九步：</strong>为本地仓库关联一个远程仓库，其中远程仓库为上一种方法中的第三步创建的boyaa仓库</p>\n<pre><code>git remote add origin https://github.com/meishadevs/boyaa.git\n</code></pre><p><strong>第十步：</strong>将网页文件提交到远程仓库中的gh-pages分支上</p>\n<pre><code>git push origin gh-pages\n</code></pre><p><strong>第十一步：</strong>访问网页<br>此时可以通过<a href=\"https://meishadevs.github.io/boyaa\" target=\"_blank\" rel=\"noopener\">https://meishadevs.github.io/boyaa</a>访问部署好的网页</p>\n<p><strong>说明：</strong>部署到gh-pages分支上的网页的URL格式为  </p>\n<pre><code>https:// + username.github.io/ + GitHub上的仓库名\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8GitHub%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">使用GitHub部署网站</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>在上一篇博客中介绍了<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">使用新浪云部署网站</a>这篇博客将介绍另一种部署网站的方式，使用GitHub部署网站。<br>","more":"</p>\n<h2 id=\"两种部署网站的方式比较\"><a href=\"#两种部署网站的方式比较\" class=\"headerlink\" title=\"两种部署网站的方式比较\"></a>两种部署网站的方式比较</h2><p><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161227094654160.png\" alt=\"\"></p>\n<p>部署网站之前，先要有一个GitHub账号，熟悉一些Git命令，注册GitHub账号和使用git命令可以参考下面的文档，这个文档中介绍的非常详细，我也不做过多的介绍<br><strong>从0开始学习GitHub：</strong><a href=\"http://pan.baidu.com/s/1hsn57YO\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/s/1hsn57YO</a></p>\n<p>注册好GitHub账号并且完善用户信息后可以得到一个下图所示的界面，下图是我的GitHub界面，其中界面中的信息介绍可以参考<a href=\"http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/\" target=\"_blank\" rel=\"noopener\">从0开始学习 GITHUB 系列之「加入 GITHUB」</a>，这篇博客对GitHub界面的信息介绍的非常详细<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226214844895.png\" alt=\"\"></p>\n<h2 id=\"下面进入正题，使用GitHub部署网站\"><a href=\"#下面进入正题，使用GitHub部署网站\" class=\"headerlink\" title=\"下面进入正题，使用GitHub部署网站\"></a>下面进入正题，使用GitHub部署网站</h2><p><strong>第一步：</strong>单击Repositories，其中Repositories在GitHub上表示的是仓库，在GitHub上每个项目都存放在仓库里，一个仓库保存一个项目<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226215559693.png\" alt=\"\"></p>\n<p><strong>第二步：</strong>单击New按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226220437338.png\" alt=\"\"></p>\n<p><strong>第三步：</strong>单击根据图中的提示填写信息，信息填写完成后单击Create respository按钮创建仓库<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226221833076.png\" alt=\"\"></p>\n<p><strong>第四步：</strong>单击创建好仓库后会自动跳转到下图所示的界面，在界面中单击Settings<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226222230082.png\" alt=\"\"></p>\n<p><strong>第五步：</strong>进入设置界面后一直往下，找到GitHub Page,并且单击GitHub Page模块中的Choose them按钮创建一个网站的主题<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226222855256.png\" alt=\"\"></p>\n<p><strong>第六步：</strong>选择Cayman主题，然后单击select theme按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226223107905.png\" alt=\"\"></p>\n<p><strong>第七步：</strong>单击Commit changes按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226223508227.png\" alt=\"\"></p>\n<p><strong>第八步：</strong>单击Commit changes按钮后会自动跳转到我们创建的仓库界面，里面包含了仓库的各种信息，其中master表示这个仓库位于master分之上，进入界面后单击Settings按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226224351486.png\" alt=\"\"></p>\n<p><strong>第九步：</strong> 在Settings界面中往下滑，滑到GitHub Page模块，可以看到GitHub Page模块中多了一个网址<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226224724966.png\" alt=\"\"></p>\n<p><strong>第十步：</strong>在浏览器中打开网址后可以看到网页上呈现出的内容就是我们刚刚创建的主题为Cayman的网页<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226225252484.png\" alt=\"\"></p>\n<p><strong>第十一步：</strong>回到GitHub上并且打开我们刚刚创建的那个仓库，仓库里的文件就是刚刚在浏览器中显示的内容，接下来要做的事情就是修改仓库里的文件，单击Clone or download按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226225859038.png\" alt=\"\"></p>\n<p><strong>第十二步：</strong>单击复制到剪切板按钮，复制仓库的url<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226230341481.png\" alt=\"\"></p>\n<p><strong>第十三步：</strong>在下面的操作中需要电脑中安装了git，并且熟悉几个简单的git命令，关于git的安装以及git命令的使用可以参考<a href=\"http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/\" target=\"_blank\" rel=\"noopener\">从0开始学习 GITHUB 系列之「GIT 速成」</a>这篇博客将git介绍的非常通俗易懂，安装好git后，先在电脑中创建一个文件夹用于保存从Github中克隆下来的仓库，我建的文件夹叫做GitProject，在E:\\game路径下，打开命令行进入GitProject文件夹下<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226231237026.png\" alt=\"\"></p>\n<p><strong>第十四步：</strong>执行<code>git clone https://github.com/meishaxiaozi/boyaa.git</code>命令，其中<code>git clone</code>表示要克隆一个项目，后面的<code>https://github.com/meishaxiaozi/boyaa.git</code>表示项目地址，该地址是由<strong>第十二步</strong>操作获得的，当在最后一行出现了100%表示，远程仓库已经成功的克隆到了本地<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226231723810.png\" alt=\"\"></p>\n<p><strong>第十五步：</strong>打开GitProject文件夹，可以看到在文件夹中多了一个boyaa文件，该文件正是刚刚在GitHub中创建的仓库<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226232212468.png\" alt=\"\"></p>\n<p><strong>第十六步：</strong>打开文件，并且将需要上传到GitHub上的网站添加到该文件中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226232503219.png\" alt=\"\"></p>\n<p><strong>第十七步：</strong>打开命令行，并且进入boyaa文件夹下，并且执行 <code>git add .</code> 命令，此命令表示将需要提交到git中的文件先添加到缓存<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226232914298.png\" alt=\"\"></p>\n<p><strong>第十八步：</strong>执行 <code>git commit -m “first commit .”</code>命令，此命令表示将文件提交到git中，下面显示的都是提交到git中的文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226233236959.png\" alt=\"\"></p>\n<p><strong>第十九步：</strong>执行 <code>git push origin master</code> 命令，将文件push到GitHub上的master分支上，当出现下图所示的提示信息时，表示网站已经成功的提交到了GitHub上<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226233708442.png\" alt=\"\"></p>\n<p><strong>第二十步：</strong>回到Github上的boyaa仓库，可以看到文件已经全部提交上来了<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226233941249.png\" alt=\"\"></p>\n<p><strong>第二十一步：</strong>再次打开位于Settings下，GitHub Page模块中的网址，可以看到网页变成了我们修改后的页面<br><strong>网站的网址：</strong><a href=\"https://meishaxiaozi.github.io/boyaa/\" target=\"_blank\" rel=\"noopener\">https://meishaxiaozi.github.io/boyaa/</a><br><strong>网址的格式：</strong>https:// + GitHub的用户名 + .github.io/ + 仓库的名称<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161226235606553.png\" alt=\"\"></p>\n<h2 id=\"GitHub部署网站简化版\"><a href=\"#GitHub部署网站简化版\" class=\"headerlink\" title=\"GitHub部署网站简化版\"></a>GitHub部署网站简化版</h2><p>上面介绍的步骤比较复杂，熟悉Git命令的话可以使用几条简单的Git命令实现部署</p>\n<p><strong>第一步：</strong>在Git Bash中执行下面的命令，创建一个boyaa文件夹</p>\n<pre><code>mkdir boyaa\n</code></pre><p><strong>第二步：</strong>将需要部署到GitHub上的文件添加到boyaa文件夹中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170429110653556.png\" alt=\"这里写图片描述\"></p>\n<p><strong>第三步：</strong>进入boyaa文件夹中</p>\n<pre><code>cd boyaa \n</code></pre><p><strong>第四步：</strong>初始化一个本地Git仓库</p>\n<pre><code>git init\n</code></pre><p><strong>第五步：</strong>将需要提交的文件添加到缓存区</p>\n<pre><code>git add .\n</code></pre><p><strong>第六步：</strong>将文件提交到本地仓库</p>\n<pre><code>git commit -m &quot;update some data&quot;\n</code></pre><p><strong>第七步：</strong>创建一个gh-pages分支</p>\n<pre><code>git branch gh-pages\n</code></pre><p><strong>第八步：</strong>切换到gh-pages分支，gh-pages分支是一个比较特殊的分支，网页文件提交到gh-pages分支上，可以通过HTTP协议访问gh-pages分支上的网页文件</p>\n<pre><code>git checkout gh-pages\n</code></pre><p><strong>第九步：</strong>为本地仓库关联一个远程仓库，其中远程仓库为上一种方法中的第三步创建的boyaa仓库</p>\n<pre><code>git remote add origin https://github.com/meishadevs/boyaa.git\n</code></pre><p><strong>第十步：</strong>将网页文件提交到远程仓库中的gh-pages分支上</p>\n<pre><code>git push origin gh-pages\n</code></pre><p><strong>第十一步：</strong>访问网页<br>此时可以通过<a href=\"https://meishadevs.github.io/boyaa\" target=\"_blank\" rel=\"noopener\">https://meishadevs.github.io/boyaa</a>访问部署好的网页</p>\n<p><strong>说明：</strong>部署到gh-pages分支上的网页的URL格式为  </p>\n<pre><code>https:// + username.github.io/ + GitHub上的仓库名\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8GitHub%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">使用GitHub部署网站</a>】</p>\n</blockquote>"},{"title":"一些常见的JavaScript兼容性写法","date":"2017-03-05T16:00:00.000Z","_content":"\n自己平时总结的一些常用的javaScript兼容性写法\n<!--more-->\n\n**1. 获得事件**\n\n\tvar event = event || window.event;\n\n**2. 阻止事件冒泡**\n\n\tvar event = event || window.event;\n\n\t//阻止事件冒泡\n\tif (event && event.stopPropagation) {\n\t    event.stopPropagation();\n\t} else {\n\t    event.cancelBubble = true;\n\t}\n\n\n**3. 获得点击的某个对象的id**\n\n\tvar targetId = event.target ? event.target.id : event.srcElement.id;\n\n**4. 阻止事件的默认行为**\n\t\n\t//除IE浏览器以外的其他浏览器\n\tif(event.preventDefault) {\n\n\t   event.preventDefault();\n\n\t//如果当前的浏览器是IE浏览器\n\t} else {\n\n\t   event.returnValue = false;\n\t}\n\n**5. 获得浏览器的宽度**\n\n\tdocument.documentElement.clientWidth || document.body.clientWidth;\n\n**6. 获得浏览器的高度**\n\n\tdocument.documentElement.clientHeight || document.body.clientHeight；\n\n**7. 获得水平方向上滚动条到浏览器最左端的距离**  \n\n\tdocument.documentElement.scrollLeft || document.body.scrollLeft\n\n**8. 获得竖直方向上的滚动条到浏览器顶部的距离**\n\t\n\tdocument.documentElement.scrollTop || document.body.scrollTop;\n\n**9. 禁止单击鼠标左键并移动鼠标时拖拽图片方法**\n\n\tfunction imgdragstart() {\n        return false;\n    }\n\n    //获得所有图片\n    var imgs = document.getElementsByTagName('img');\n\n    //遍历图片\n    for(var i = 0; i < imgs.length; i++) {\n\n        //禁止单击鼠标左键并移动鼠标时拖拽图片\n        imgs[i].ondragstart = imgdragstart;\n    }\n\n**10.当浏览器窗口发生变化时，重新加载整个页面**  \n\n\t //监听浏览器窗口大小是否发生变化\n    window.onresize = function () {\n\n        //重新加载当前页面\n        location.reload(true);\n    }\n\n**11.获得浏览器到显示屏的距离**\n\n\t//获得浏览器左端到显示屏左端的距离\n    var leftPos = (typeof window.screenLeft == 'number') ?\n        window.screenLeft : window.screenX;\n\n    //获得浏览器上端到显示屏上端的距离\n    var topPos = (typeof window.screenTop == 'number') ?\n        window.screenTop : window.screenY;\n\n**12.获得浏览器窗口大小**\n\n\t//获得浏览器窗口的宽度\n\tvar pageWidth = window.innerWidth;\n\n\t//获得浏览器窗口的高度\n    var pageHeight = window.innerHeight;\n\n    if (typeof pageWidth != 'number') {\n        if (document.compatMode == 'CSS1Compat') {\n            pageWidth = document.documentElement.clientWidth;\n            pageHeight = document.documentElement.clientHeight;\n        } else {\n            pageWidth = document.body.clientWidth;\n            pageHeight = document.body.clientHeight;\n        }\n    }\n\n**13.获得竖直方向上的滚动条到浏览器顶部的距离**\n\n\tgetScrollTop: function () {\n\n        var scrollPos;\n\n        if (window.pageYOffset) {\n\n          scrollPos = window.pageYOffset;\n\n        } else if (document.compatMode && document.compatMode !== 'BackCompat') {\n\n          scrollPos = document.documentElement.scrollTop;\n\n        } else if (document.body) {\n\n          scrollPos = document.body.scrollTop;\n        }\n\n        return scrollPos;\n      }\n\n**14.将字符串转换成数组**\n\n\tvar arr = Array.prototype.slice.call('abc');\n\n**15.判断数据类型**\n\n\tvar type = function (o) {\n\t  var s = Object.prototype.toString.call(o);\n\t  return s.match(/\\[object (.*?)\\]/)[1].toLowerCase();\n\t};\n\t\n\ttype({}); // \"object\"\n\ttype([]); // \"array\"\n\ttype(5); // \"number\"\n\ttype(null); // \"null\"\n\ttype(); // \"undefined\"\n\ttype(/abcd/); // \"regex\"\n\ttype(new Date()); // \"date\"\n\n**16.获得任意范围内数字的随机数**\n\n\tfunction getRandomInt(min, max) {\n\t  return Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\t\n\tgetRandomInt(1, 6) // 5\n\n**17.使用 JavaScript 创建二维数组**  \n\n\tvar array = new Array(15);\n\n    for (var x = 0; x < 15; x++) {\n        array[x] = new Array(15);\n        for (var y = 0; y < 15; y++) {\n            array[x][y] = 0;\n        }\n    }\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[一些常见的JavaScript兼容性写法](http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84JavaScript%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/)】","source":"_posts/一些常见的JavaScript兼容性写法.md","raw":"---\ntitle: 一些常见的JavaScript兼容性写法\ndate: 2017-03-06\ncategories:\n\t- JavaScript\n\t- 兼容\ntags:\n    - JavaScript\n    - 兼容\n---\n\n自己平时总结的一些常用的javaScript兼容性写法\n<!--more-->\n\n**1. 获得事件**\n\n\tvar event = event || window.event;\n\n**2. 阻止事件冒泡**\n\n\tvar event = event || window.event;\n\n\t//阻止事件冒泡\n\tif (event && event.stopPropagation) {\n\t    event.stopPropagation();\n\t} else {\n\t    event.cancelBubble = true;\n\t}\n\n\n**3. 获得点击的某个对象的id**\n\n\tvar targetId = event.target ? event.target.id : event.srcElement.id;\n\n**4. 阻止事件的默认行为**\n\t\n\t//除IE浏览器以外的其他浏览器\n\tif(event.preventDefault) {\n\n\t   event.preventDefault();\n\n\t//如果当前的浏览器是IE浏览器\n\t} else {\n\n\t   event.returnValue = false;\n\t}\n\n**5. 获得浏览器的宽度**\n\n\tdocument.documentElement.clientWidth || document.body.clientWidth;\n\n**6. 获得浏览器的高度**\n\n\tdocument.documentElement.clientHeight || document.body.clientHeight；\n\n**7. 获得水平方向上滚动条到浏览器最左端的距离**  \n\n\tdocument.documentElement.scrollLeft || document.body.scrollLeft\n\n**8. 获得竖直方向上的滚动条到浏览器顶部的距离**\n\t\n\tdocument.documentElement.scrollTop || document.body.scrollTop;\n\n**9. 禁止单击鼠标左键并移动鼠标时拖拽图片方法**\n\n\tfunction imgdragstart() {\n        return false;\n    }\n\n    //获得所有图片\n    var imgs = document.getElementsByTagName('img');\n\n    //遍历图片\n    for(var i = 0; i < imgs.length; i++) {\n\n        //禁止单击鼠标左键并移动鼠标时拖拽图片\n        imgs[i].ondragstart = imgdragstart;\n    }\n\n**10.当浏览器窗口发生变化时，重新加载整个页面**  \n\n\t //监听浏览器窗口大小是否发生变化\n    window.onresize = function () {\n\n        //重新加载当前页面\n        location.reload(true);\n    }\n\n**11.获得浏览器到显示屏的距离**\n\n\t//获得浏览器左端到显示屏左端的距离\n    var leftPos = (typeof window.screenLeft == 'number') ?\n        window.screenLeft : window.screenX;\n\n    //获得浏览器上端到显示屏上端的距离\n    var topPos = (typeof window.screenTop == 'number') ?\n        window.screenTop : window.screenY;\n\n**12.获得浏览器窗口大小**\n\n\t//获得浏览器窗口的宽度\n\tvar pageWidth = window.innerWidth;\n\n\t//获得浏览器窗口的高度\n    var pageHeight = window.innerHeight;\n\n    if (typeof pageWidth != 'number') {\n        if (document.compatMode == 'CSS1Compat') {\n            pageWidth = document.documentElement.clientWidth;\n            pageHeight = document.documentElement.clientHeight;\n        } else {\n            pageWidth = document.body.clientWidth;\n            pageHeight = document.body.clientHeight;\n        }\n    }\n\n**13.获得竖直方向上的滚动条到浏览器顶部的距离**\n\n\tgetScrollTop: function () {\n\n        var scrollPos;\n\n        if (window.pageYOffset) {\n\n          scrollPos = window.pageYOffset;\n\n        } else if (document.compatMode && document.compatMode !== 'BackCompat') {\n\n          scrollPos = document.documentElement.scrollTop;\n\n        } else if (document.body) {\n\n          scrollPos = document.body.scrollTop;\n        }\n\n        return scrollPos;\n      }\n\n**14.将字符串转换成数组**\n\n\tvar arr = Array.prototype.slice.call('abc');\n\n**15.判断数据类型**\n\n\tvar type = function (o) {\n\t  var s = Object.prototype.toString.call(o);\n\t  return s.match(/\\[object (.*?)\\]/)[1].toLowerCase();\n\t};\n\t\n\ttype({}); // \"object\"\n\ttype([]); // \"array\"\n\ttype(5); // \"number\"\n\ttype(null); // \"null\"\n\ttype(); // \"undefined\"\n\ttype(/abcd/); // \"regex\"\n\ttype(new Date()); // \"date\"\n\n**16.获得任意范围内数字的随机数**\n\n\tfunction getRandomInt(min, max) {\n\t  return Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\t\n\tgetRandomInt(1, 6) // 5\n\n**17.使用 JavaScript 创建二维数组**  \n\n\tvar array = new Array(15);\n\n    for (var x = 0; x < 15; x++) {\n        array[x] = new Array(15);\n        for (var y = 0; y < 15; y++) {\n            array[x][y] = 0;\n        }\n    }\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[一些常见的JavaScript兼容性写法](http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84JavaScript%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/)】","slug":"一些常见的JavaScript兼容性写法","published":1,"updated":"2018-07-07T02:23:40.230Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000bjc7uyqf4fn9h","content":"<p>自己平时总结的一些常用的javaScript兼容性写法<br><a id=\"more\"></a></p>\n<p><strong>1. 获得事件</strong></p>\n<pre><code>var event = event || window.event;\n</code></pre><p><strong>2. 阻止事件冒泡</strong></p>\n<pre><code>var event = event || window.event;\n\n//阻止事件冒泡\nif (event &amp;&amp; event.stopPropagation) {\n    event.stopPropagation();\n} else {\n    event.cancelBubble = true;\n}\n</code></pre><p><strong>3. 获得点击的某个对象的id</strong></p>\n<pre><code>var targetId = event.target ? event.target.id : event.srcElement.id;\n</code></pre><p><strong>4. 阻止事件的默认行为</strong></p>\n<pre><code>//除IE浏览器以外的其他浏览器\nif(event.preventDefault) {\n\n   event.preventDefault();\n\n//如果当前的浏览器是IE浏览器\n} else {\n\n   event.returnValue = false;\n}\n</code></pre><p><strong>5. 获得浏览器的宽度</strong></p>\n<pre><code>document.documentElement.clientWidth || document.body.clientWidth;\n</code></pre><p><strong>6. 获得浏览器的高度</strong></p>\n<pre><code>document.documentElement.clientHeight || document.body.clientHeight；\n</code></pre><p><strong>7. 获得水平方向上滚动条到浏览器最左端的距离</strong>  </p>\n<pre><code>document.documentElement.scrollLeft || document.body.scrollLeft\n</code></pre><p><strong>8. 获得竖直方向上的滚动条到浏览器顶部的距离</strong></p>\n<pre><code>document.documentElement.scrollTop || document.body.scrollTop;\n</code></pre><p><strong>9. 禁止单击鼠标左键并移动鼠标时拖拽图片方法</strong></p>\n<pre><code>function imgdragstart() {\n    return false;\n}\n\n//获得所有图片\nvar imgs = document.getElementsByTagName(&apos;img&apos;);\n\n//遍历图片\nfor(var i = 0; i &lt; imgs.length; i++) {\n\n    //禁止单击鼠标左键并移动鼠标时拖拽图片\n    imgs[i].ondragstart = imgdragstart;\n}\n</code></pre><p><strong>10.当浏览器窗口发生变化时，重新加载整个页面</strong>  </p>\n<pre><code> //监听浏览器窗口大小是否发生变化\nwindow.onresize = function () {\n\n    //重新加载当前页面\n    location.reload(true);\n}\n</code></pre><p><strong>11.获得浏览器到显示屏的距离</strong></p>\n<pre><code>//获得浏览器左端到显示屏左端的距离\nvar leftPos = (typeof window.screenLeft == &apos;number&apos;) ?\n    window.screenLeft : window.screenX;\n\n//获得浏览器上端到显示屏上端的距离\nvar topPos = (typeof window.screenTop == &apos;number&apos;) ?\n    window.screenTop : window.screenY;\n</code></pre><p><strong>12.获得浏览器窗口大小</strong></p>\n<pre><code>//获得浏览器窗口的宽度\nvar pageWidth = window.innerWidth;\n\n//获得浏览器窗口的高度\nvar pageHeight = window.innerHeight;\n\nif (typeof pageWidth != &apos;number&apos;) {\n    if (document.compatMode == &apos;CSS1Compat&apos;) {\n        pageWidth = document.documentElement.clientWidth;\n        pageHeight = document.documentElement.clientHeight;\n    } else {\n        pageWidth = document.body.clientWidth;\n        pageHeight = document.body.clientHeight;\n    }\n}\n</code></pre><p><strong>13.获得竖直方向上的滚动条到浏览器顶部的距离</strong></p>\n<pre><code>getScrollTop: function () {\n\n    var scrollPos;\n\n    if (window.pageYOffset) {\n\n      scrollPos = window.pageYOffset;\n\n    } else if (document.compatMode &amp;&amp; document.compatMode !== &apos;BackCompat&apos;) {\n\n      scrollPos = document.documentElement.scrollTop;\n\n    } else if (document.body) {\n\n      scrollPos = document.body.scrollTop;\n    }\n\n    return scrollPos;\n  }\n</code></pre><p><strong>14.将字符串转换成数组</strong></p>\n<pre><code>var arr = Array.prototype.slice.call(&apos;abc&apos;);\n</code></pre><p><strong>15.判断数据类型</strong></p>\n<pre><code>var type = function (o) {\n  var s = Object.prototype.toString.call(o);\n  return s.match(/\\[object (.*?)\\]/)[1].toLowerCase();\n};\n\ntype({}); // &quot;object&quot;\ntype([]); // &quot;array&quot;\ntype(5); // &quot;number&quot;\ntype(null); // &quot;null&quot;\ntype(); // &quot;undefined&quot;\ntype(/abcd/); // &quot;regex&quot;\ntype(new Date()); // &quot;date&quot;\n</code></pre><p><strong>16.获得任意范围内数字的随机数</strong></p>\n<pre><code>function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\ngetRandomInt(1, 6) // 5\n</code></pre><p><strong>17.使用 JavaScript 创建二维数组</strong>  </p>\n<pre><code>var array = new Array(15);\n\nfor (var x = 0; x &lt; 15; x++) {\n    array[x] = new Array(15);\n    for (var y = 0; y &lt; 15; y++) {\n        array[x][y] = 0;\n    }\n}\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84JavaScript%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/\">一些常见的JavaScript兼容性写法</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些常用的javaScript兼容性写法<br>","more":"</p>\n<p><strong>1. 获得事件</strong></p>\n<pre><code>var event = event || window.event;\n</code></pre><p><strong>2. 阻止事件冒泡</strong></p>\n<pre><code>var event = event || window.event;\n\n//阻止事件冒泡\nif (event &amp;&amp; event.stopPropagation) {\n    event.stopPropagation();\n} else {\n    event.cancelBubble = true;\n}\n</code></pre><p><strong>3. 获得点击的某个对象的id</strong></p>\n<pre><code>var targetId = event.target ? event.target.id : event.srcElement.id;\n</code></pre><p><strong>4. 阻止事件的默认行为</strong></p>\n<pre><code>//除IE浏览器以外的其他浏览器\nif(event.preventDefault) {\n\n   event.preventDefault();\n\n//如果当前的浏览器是IE浏览器\n} else {\n\n   event.returnValue = false;\n}\n</code></pre><p><strong>5. 获得浏览器的宽度</strong></p>\n<pre><code>document.documentElement.clientWidth || document.body.clientWidth;\n</code></pre><p><strong>6. 获得浏览器的高度</strong></p>\n<pre><code>document.documentElement.clientHeight || document.body.clientHeight；\n</code></pre><p><strong>7. 获得水平方向上滚动条到浏览器最左端的距离</strong>  </p>\n<pre><code>document.documentElement.scrollLeft || document.body.scrollLeft\n</code></pre><p><strong>8. 获得竖直方向上的滚动条到浏览器顶部的距离</strong></p>\n<pre><code>document.documentElement.scrollTop || document.body.scrollTop;\n</code></pre><p><strong>9. 禁止单击鼠标左键并移动鼠标时拖拽图片方法</strong></p>\n<pre><code>function imgdragstart() {\n    return false;\n}\n\n//获得所有图片\nvar imgs = document.getElementsByTagName(&apos;img&apos;);\n\n//遍历图片\nfor(var i = 0; i &lt; imgs.length; i++) {\n\n    //禁止单击鼠标左键并移动鼠标时拖拽图片\n    imgs[i].ondragstart = imgdragstart;\n}\n</code></pre><p><strong>10.当浏览器窗口发生变化时，重新加载整个页面</strong>  </p>\n<pre><code> //监听浏览器窗口大小是否发生变化\nwindow.onresize = function () {\n\n    //重新加载当前页面\n    location.reload(true);\n}\n</code></pre><p><strong>11.获得浏览器到显示屏的距离</strong></p>\n<pre><code>//获得浏览器左端到显示屏左端的距离\nvar leftPos = (typeof window.screenLeft == &apos;number&apos;) ?\n    window.screenLeft : window.screenX;\n\n//获得浏览器上端到显示屏上端的距离\nvar topPos = (typeof window.screenTop == &apos;number&apos;) ?\n    window.screenTop : window.screenY;\n</code></pre><p><strong>12.获得浏览器窗口大小</strong></p>\n<pre><code>//获得浏览器窗口的宽度\nvar pageWidth = window.innerWidth;\n\n//获得浏览器窗口的高度\nvar pageHeight = window.innerHeight;\n\nif (typeof pageWidth != &apos;number&apos;) {\n    if (document.compatMode == &apos;CSS1Compat&apos;) {\n        pageWidth = document.documentElement.clientWidth;\n        pageHeight = document.documentElement.clientHeight;\n    } else {\n        pageWidth = document.body.clientWidth;\n        pageHeight = document.body.clientHeight;\n    }\n}\n</code></pre><p><strong>13.获得竖直方向上的滚动条到浏览器顶部的距离</strong></p>\n<pre><code>getScrollTop: function () {\n\n    var scrollPos;\n\n    if (window.pageYOffset) {\n\n      scrollPos = window.pageYOffset;\n\n    } else if (document.compatMode &amp;&amp; document.compatMode !== &apos;BackCompat&apos;) {\n\n      scrollPos = document.documentElement.scrollTop;\n\n    } else if (document.body) {\n\n      scrollPos = document.body.scrollTop;\n    }\n\n    return scrollPos;\n  }\n</code></pre><p><strong>14.将字符串转换成数组</strong></p>\n<pre><code>var arr = Array.prototype.slice.call(&apos;abc&apos;);\n</code></pre><p><strong>15.判断数据类型</strong></p>\n<pre><code>var type = function (o) {\n  var s = Object.prototype.toString.call(o);\n  return s.match(/\\[object (.*?)\\]/)[1].toLowerCase();\n};\n\ntype({}); // &quot;object&quot;\ntype([]); // &quot;array&quot;\ntype(5); // &quot;number&quot;\ntype(null); // &quot;null&quot;\ntype(); // &quot;undefined&quot;\ntype(/abcd/); // &quot;regex&quot;\ntype(new Date()); // &quot;date&quot;\n</code></pre><p><strong>16.获得任意范围内数字的随机数</strong></p>\n<pre><code>function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\ngetRandomInt(1, 6) // 5\n</code></pre><p><strong>17.使用 JavaScript 创建二维数组</strong>  </p>\n<pre><code>var array = new Array(15);\n\nfor (var x = 0; x &lt; 15; x++) {\n    array[x] = new Array(15);\n    for (var y = 0; y &lt; 15; y++) {\n        array[x][y] = 0;\n    }\n}\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84JavaScript%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/\">一些常见的JavaScript兼容性写法</a>】</p>\n</blockquote>"},{"title":"使用Gulp","date":"2017-04-14T16:00:00.000Z","_content":"\n# 为什么要使用Gulp\n在前端开发中通常需要做，预处理语言的编译、js文件的压缩、css文件的压缩、图片的压缩等一系列工作，而使用Gulp可以自动化的完成这些工作，从而提高网站的开发效率，在我的博客[使用Less](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/)中介绍了将Less文件编译成CSS文件的方法，仔细观察可以看到如果按照博客中介绍的方法，在编译多个Less文件或者编译不同文件夹下的Less文件时需要执行多次Less文件编译命令，而使用Gulp可以一次性完成这些操作\n<!-- more -->\n\n# Gulp是什么\nGulp是一个可以自动化完成我们开发过程中大量的重复工作的工具，使用Gulp可以自动化的完成如，预处理语言的编译、js文件的压缩、css文件的压缩、html文件的压缩、图片体积优化等工作\n\n# Gulp的特性\n- **易于使用** 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理\n- **构建快速** 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作\n- **插件高质** Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作\n- **易于学习** 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道\n\n# Gulp的常用网站\n- **Gulp官方网站：**[http://gulpjs.com/](http://gulpjs.com/)  \n- **Gulp中文网：**[http://www.gulpjs.com.cn/](http://www.gulpjs.com.cn/)\n- **Gulp插件地址：**[http://gulpjs.com/plugins/](http://gulpjs.com/plugins/)\n- **Gulp官方API：**[https://github.com/gulpjs/gulp/blob/master/docs/API.md](https://github.com/gulpjs/gulp/blob/master/docs/API.md)\n- **Gulp中文API：**[http://www.gulpjs.com.cn/docs/api/](http://www.gulpjs.com.cn/docs/api/)\n\n# Gulp的安装与使用\n\n### Gulp的简单应用\n**1. 全局安装Gulp**  \n\n\tnpm install --global gulp\n\n**2. 创建一个code文件夹，并进入到code文件夹下**  \n下面的命令是在Git bash中运行的，运行这几条命令，需要安装Git，没有安装Git的可以在电脑上自己手动创建一个code文件夹，并且进入code文件夹下  \n\n\t# 创建code文件夹\n\tmkdir code\n\n\t# 进入code文件下\n\tcd code \n\n**3.执行下面的命令创建package.json文件**  \n\n\tnpm init\n\n在命令行中运行`npm init`命令的时候会出现下图所示的要求用户输入name、version等值，当不清楚这些值的含义的时候，一直按回车键，会自动使用默认值\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170416094616628.png)\n\n**4.完成这些操作后会在code文件中会生成一个package.json文件**\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170416094708660.png)\n\n**5.打开package.json文件可以看到package.json中记录了一些当前项目的信息**  \n**name:** 项目的名称  \n**version:** 项目的版本  \n**description:** 项目的描述信息  \n**main:** 项目的入口函数  \n**scripts:** scripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令  \n**author:** 项目的作者  \n**license:** 项目的许可证  \n**devDependencies:** 项目依赖的插件  \n**repository:** 项目资源库\n\n**6.在命令行中执行下面的命令，安装Gulp**  \n\n\tnpm install --save-dev gulp\n\n**7.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\nGulp主文件用于注册任务 \n\t\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t/**\n\t * 注册一个任务\n\t * @param 任务名称\n\t * @param 自动执行的函数\n\t */\n\tgulp.task('say', function() {\n\t\tconsole.log(\"hello world !\");\n\t});\n\n**8.使用gulp**  \n打开命令行，并且在命令行中执行`gulp say`命令，可以看到在控制台中输出了一句\"say hello\"表示Gulp安装成功\n![](http://oq3pg8pg4.bkt.clouddn.com/20170416101457184.png)\n\n### 使用Gulp实现一个文件拷贝任务\n下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的**Gulp的安装与使用**中的内容\n\n**1.创建一个src文件夹，并且在src文件夹下创建一个index.html文件**  \n在Git Bash中执行下面的命令创建一个src文件夹，并在src文件夹下创建一个index.htmll文件，没有安装Git的可以手动创建\n\n\t# 创建src文件夹\n\tmkdir src \n\n\t# 进入到src文件夹下\n\tcd src\n\n\t# 创建index.html文件\n\ttouch index.html\n\n**2.向index.html中添加HTML代码**\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Document</title>\n\t</head>\n\t<body>\n\t   <h1>这是一个简单的web页面</h1>\t\t\n\t</body>\n\t</html>\n\n**3.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t//文件拷贝任务\n\tgulp.task('copy', function() {\n\t\n\t\t//获取src目录下的index.html文件\n\t\tgulp.src('src/index.html')\n\t\n\t\t//将index.html拷贝到dist目录中\n\t\t.pipe(gulp.dest('dist/'));\n\t});\n\n**4.在命令行中执行文件拷贝任务，将src目录下的index.html文件拷贝到dist目录下**  \n\n\tgulp copy\n\n文件拷贝命令执行完成后可以看到在code目录下自动创建了一个dist文件夹，并且在dist文件夹下自动创建了一个index.html文件，表示文件拷贝任务运行成功\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170416110116584.png)\n\n**5.自动执行文件拷贝任务**\n在这个文件拷贝任务中，有一个非常大的弊端，就是每次更新index.html中的代码的时候，都要在命令行中执行一次`gulp copy`命令，这样做做了重复性操作，也不符合使用Gulp实现自动化的特点，为了改成自动化执行文件拷贝命令，可以修改gulpfile.js中的代码\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t//文件拷贝任务\n\tgulp.task('copy', function() {\n\t\n\t\t//获取src目录下的index.html文件\n\t\tgulp.src('src/index.html')\n\t\n\t\t//将index.html拷贝到dist目录中\n\t\t.pipe(gulp.dest('dist/'));\n\t});\n\t\n\t//监视copy任务\n\tgulp.task('dist', function() {\n\t\n\t\t//当src目录下的index.html文件发生变化的时候\n\t\t//执行copy任务\n\t\tgulp.watch('src/index.html', ['copy']);\n\t});\n\n**6.修改好gulpfile.js中的代码后在命令行中执行下面的命令**\n\n\tgulp dist\n\n**6.此时只要修改src文件夹的index.html文件,修改完成后只要一保存，HTML代码就能同时同步到dist文件夹下的index.html中**\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170416113431492.png)\n\n### 使用Gulp自动将Less编译成CSS\n下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的**Gulp的安装与使用**中的内容\n\n**1.安装gulp-less插件**\n\t\n\tnpm install gulp-less --save-dev\n\n**2.创建Less文件**  \n在Git Bash中执行下面的命令创建一个less文件夹，并且在less文件夹下创建一个style.less文件，在没有安装Git Bash的情况下可以手动创建\n\n\t# 创建less文件夹\n\tmkdir less \n\n\t# 进入less文件夹中\n\tcd less\n\n\t# 创建style.less文件\n\ttouch style.less\n\n**3.向style.less中添加一段简单的Less代码**\n\t\n\t@primary-color: #fff;\n\n\tbody {\n\t\tbackground-color: @primary-color;\n\t\n\t\t.container {\n\t\t\twidth: 1028px;\n\t\n\t\t\t.row {\n\t\t\t\tpadding: 0 15px;\n\t\t\t}\n\t\t}\n\t}\n\n**4.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\tvar less = require('gulp-less');\n\t\n\t//创建一个将Less编译成CSS的任务\n\tgulp.task('less', function() {\n\t\tgulp.src('less/*.less')\n\t\t.pipe(less())\n\t\t.pipe(gulp.dest('css/'));\n\t});\n\t\n\t//监视less任务\n\t//当less文件发生变化的时候，会自动将Less转换成CSS\n\tgulp.task('watchLess', function() {\n\t\tgulp.watch('./less/*.less', ['less']);\n\t});\n\n**5.在命令行中执行下面的命令，启动将Less文件编译成CSS文件的任务**\n\t\n\tgulp watchLess\n\n**5.修改less文件夹下的style.less**\n打开less文件夹下的style.less文件，并且修改style.less文件，当保存后会自动将style.less文件编译成css文件，并且会自动创建一个css目录，在css目录下自动创建一个style.css文件用于存储生成的CSS代码\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170417204103113.png)\n\n## 参考链接\n- [gulp.js 中文网](https://www.gulpjs.com.cn/)\n- [一点 | gulp教程](http://www.ydcss.com/archives/tag/gulp)\n- [Browsersync中文网](http://www.browsersync.cn/)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用Gulp](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Gulp/)】","source":"_posts/使用Gulp.md","raw":"---\ntitle:  使用Gulp\ndate: 2017-04-15\ncategories:\n\t- Gulp\n\t- 前端自动化\ntags:\n\t- Gulp\n\t- 前端自动化\n---\n\n# 为什么要使用Gulp\n在前端开发中通常需要做，预处理语言的编译、js文件的压缩、css文件的压缩、图片的压缩等一系列工作，而使用Gulp可以自动化的完成这些工作，从而提高网站的开发效率，在我的博客[使用Less](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/)中介绍了将Less文件编译成CSS文件的方法，仔细观察可以看到如果按照博客中介绍的方法，在编译多个Less文件或者编译不同文件夹下的Less文件时需要执行多次Less文件编译命令，而使用Gulp可以一次性完成这些操作\n<!-- more -->\n\n# Gulp是什么\nGulp是一个可以自动化完成我们开发过程中大量的重复工作的工具，使用Gulp可以自动化的完成如，预处理语言的编译、js文件的压缩、css文件的压缩、html文件的压缩、图片体积优化等工作\n\n# Gulp的特性\n- **易于使用** 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理\n- **构建快速** 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作\n- **插件高质** Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作\n- **易于学习** 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道\n\n# Gulp的常用网站\n- **Gulp官方网站：**[http://gulpjs.com/](http://gulpjs.com/)  \n- **Gulp中文网：**[http://www.gulpjs.com.cn/](http://www.gulpjs.com.cn/)\n- **Gulp插件地址：**[http://gulpjs.com/plugins/](http://gulpjs.com/plugins/)\n- **Gulp官方API：**[https://github.com/gulpjs/gulp/blob/master/docs/API.md](https://github.com/gulpjs/gulp/blob/master/docs/API.md)\n- **Gulp中文API：**[http://www.gulpjs.com.cn/docs/api/](http://www.gulpjs.com.cn/docs/api/)\n\n# Gulp的安装与使用\n\n### Gulp的简单应用\n**1. 全局安装Gulp**  \n\n\tnpm install --global gulp\n\n**2. 创建一个code文件夹，并进入到code文件夹下**  \n下面的命令是在Git bash中运行的，运行这几条命令，需要安装Git，没有安装Git的可以在电脑上自己手动创建一个code文件夹，并且进入code文件夹下  \n\n\t# 创建code文件夹\n\tmkdir code\n\n\t# 进入code文件下\n\tcd code \n\n**3.执行下面的命令创建package.json文件**  \n\n\tnpm init\n\n在命令行中运行`npm init`命令的时候会出现下图所示的要求用户输入name、version等值，当不清楚这些值的含义的时候，一直按回车键，会自动使用默认值\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170416094616628.png)\n\n**4.完成这些操作后会在code文件中会生成一个package.json文件**\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170416094708660.png)\n\n**5.打开package.json文件可以看到package.json中记录了一些当前项目的信息**  \n**name:** 项目的名称  \n**version:** 项目的版本  \n**description:** 项目的描述信息  \n**main:** 项目的入口函数  \n**scripts:** scripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令  \n**author:** 项目的作者  \n**license:** 项目的许可证  \n**devDependencies:** 项目依赖的插件  \n**repository:** 项目资源库\n\n**6.在命令行中执行下面的命令，安装Gulp**  \n\n\tnpm install --save-dev gulp\n\n**7.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\nGulp主文件用于注册任务 \n\t\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t/**\n\t * 注册一个任务\n\t * @param 任务名称\n\t * @param 自动执行的函数\n\t */\n\tgulp.task('say', function() {\n\t\tconsole.log(\"hello world !\");\n\t});\n\n**8.使用gulp**  \n打开命令行，并且在命令行中执行`gulp say`命令，可以看到在控制台中输出了一句\"say hello\"表示Gulp安装成功\n![](http://oq3pg8pg4.bkt.clouddn.com/20170416101457184.png)\n\n### 使用Gulp实现一个文件拷贝任务\n下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的**Gulp的安装与使用**中的内容\n\n**1.创建一个src文件夹，并且在src文件夹下创建一个index.html文件**  \n在Git Bash中执行下面的命令创建一个src文件夹，并在src文件夹下创建一个index.htmll文件，没有安装Git的可以手动创建\n\n\t# 创建src文件夹\n\tmkdir src \n\n\t# 进入到src文件夹下\n\tcd src\n\n\t# 创建index.html文件\n\ttouch index.html\n\n**2.向index.html中添加HTML代码**\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Document</title>\n\t</head>\n\t<body>\n\t   <h1>这是一个简单的web页面</h1>\t\t\n\t</body>\n\t</html>\n\n**3.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t//文件拷贝任务\n\tgulp.task('copy', function() {\n\t\n\t\t//获取src目录下的index.html文件\n\t\tgulp.src('src/index.html')\n\t\n\t\t//将index.html拷贝到dist目录中\n\t\t.pipe(gulp.dest('dist/'));\n\t});\n\n**4.在命令行中执行文件拷贝任务，将src目录下的index.html文件拷贝到dist目录下**  \n\n\tgulp copy\n\n文件拷贝命令执行完成后可以看到在code目录下自动创建了一个dist文件夹，并且在dist文件夹下自动创建了一个index.html文件，表示文件拷贝任务运行成功\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170416110116584.png)\n\n**5.自动执行文件拷贝任务**\n在这个文件拷贝任务中，有一个非常大的弊端，就是每次更新index.html中的代码的时候，都要在命令行中执行一次`gulp copy`命令，这样做做了重复性操作，也不符合使用Gulp实现自动化的特点，为了改成自动化执行文件拷贝命令，可以修改gulpfile.js中的代码\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t//文件拷贝任务\n\tgulp.task('copy', function() {\n\t\n\t\t//获取src目录下的index.html文件\n\t\tgulp.src('src/index.html')\n\t\n\t\t//将index.html拷贝到dist目录中\n\t\t.pipe(gulp.dest('dist/'));\n\t});\n\t\n\t//监视copy任务\n\tgulp.task('dist', function() {\n\t\n\t\t//当src目录下的index.html文件发生变化的时候\n\t\t//执行copy任务\n\t\tgulp.watch('src/index.html', ['copy']);\n\t});\n\n**6.修改好gulpfile.js中的代码后在命令行中执行下面的命令**\n\n\tgulp dist\n\n**6.此时只要修改src文件夹的index.html文件,修改完成后只要一保存，HTML代码就能同时同步到dist文件夹下的index.html中**\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170416113431492.png)\n\n### 使用Gulp自动将Less编译成CSS\n下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的**Gulp的安装与使用**中的内容\n\n**1.安装gulp-less插件**\n\t\n\tnpm install gulp-less --save-dev\n\n**2.创建Less文件**  \n在Git Bash中执行下面的命令创建一个less文件夹，并且在less文件夹下创建一个style.less文件，在没有安装Git Bash的情况下可以手动创建\n\n\t# 创建less文件夹\n\tmkdir less \n\n\t# 进入less文件夹中\n\tcd less\n\n\t# 创建style.less文件\n\ttouch style.less\n\n**3.向style.less中添加一段简单的Less代码**\n\t\n\t@primary-color: #fff;\n\n\tbody {\n\t\tbackground-color: @primary-color;\n\t\n\t\t.container {\n\t\t\twidth: 1028px;\n\t\n\t\t\t.row {\n\t\t\t\tpadding: 0 15px;\n\t\t\t}\n\t\t}\n\t}\n\n**4.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\tvar less = require('gulp-less');\n\t\n\t//创建一个将Less编译成CSS的任务\n\tgulp.task('less', function() {\n\t\tgulp.src('less/*.less')\n\t\t.pipe(less())\n\t\t.pipe(gulp.dest('css/'));\n\t});\n\t\n\t//监视less任务\n\t//当less文件发生变化的时候，会自动将Less转换成CSS\n\tgulp.task('watchLess', function() {\n\t\tgulp.watch('./less/*.less', ['less']);\n\t});\n\n**5.在命令行中执行下面的命令，启动将Less文件编译成CSS文件的任务**\n\t\n\tgulp watchLess\n\n**5.修改less文件夹下的style.less**\n打开less文件夹下的style.less文件，并且修改style.less文件，当保存后会自动将style.less文件编译成css文件，并且会自动创建一个css目录，在css目录下自动创建一个style.css文件用于存储生成的CSS代码\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170417204103113.png)\n\n## 参考链接\n- [gulp.js 中文网](https://www.gulpjs.com.cn/)\n- [一点 | gulp教程](http://www.ydcss.com/archives/tag/gulp)\n- [Browsersync中文网](http://www.browsersync.cn/)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用Gulp](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Gulp/)】","slug":"使用Gulp","published":1,"updated":"2018-07-07T02:23:40.270Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000cjc7umqofvrnc","content":"<h1 id=\"为什么要使用Gulp\"><a href=\"#为什么要使用Gulp\" class=\"headerlink\" title=\"为什么要使用Gulp\"></a>为什么要使用Gulp</h1><p>在前端开发中通常需要做，预处理语言的编译、js文件的压缩、css文件的压缩、图片的压缩等一系列工作，而使用Gulp可以自动化的完成这些工作，从而提高网站的开发效率，在我的博客<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/\">使用Less</a>中介绍了将Less文件编译成CSS文件的方法，仔细观察可以看到如果按照博客中介绍的方法，在编译多个Less文件或者编译不同文件夹下的Less文件时需要执行多次Less文件编译命令，而使用Gulp可以一次性完成这些操作<br><a id=\"more\"></a></p>\n<h1 id=\"Gulp是什么\"><a href=\"#Gulp是什么\" class=\"headerlink\" title=\"Gulp是什么\"></a>Gulp是什么</h1><p>Gulp是一个可以自动化完成我们开发过程中大量的重复工作的工具，使用Gulp可以自动化的完成如，预处理语言的编译、js文件的压缩、css文件的压缩、html文件的压缩、图片体积优化等工作</p>\n<h1 id=\"Gulp的特性\"><a href=\"#Gulp的特性\" class=\"headerlink\" title=\"Gulp的特性\"></a>Gulp的特性</h1><ul>\n<li><strong>易于使用</strong> 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理</li>\n<li><strong>构建快速</strong> 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作</li>\n<li><strong>插件高质</strong> Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作</li>\n<li><strong>易于学习</strong> 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道</li>\n</ul>\n<h1 id=\"Gulp的常用网站\"><a href=\"#Gulp的常用网站\" class=\"headerlink\" title=\"Gulp的常用网站\"></a>Gulp的常用网站</h1><ul>\n<li><strong>Gulp官方网站：</strong><a href=\"http://gulpjs.com/\" target=\"_blank\" rel=\"noopener\">http://gulpjs.com/</a>  </li>\n<li><strong>Gulp中文网：</strong><a href=\"http://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"noopener\">http://www.gulpjs.com.cn/</a></li>\n<li><strong>Gulp插件地址：</strong><a href=\"http://gulpjs.com/plugins/\" target=\"_blank\" rel=\"noopener\">http://gulpjs.com/plugins/</a></li>\n<li><strong>Gulp官方API：</strong><a href=\"https://github.com/gulpjs/gulp/blob/master/docs/API.md\" target=\"_blank\" rel=\"noopener\">https://github.com/gulpjs/gulp/blob/master/docs/API.md</a></li>\n<li><strong>Gulp中文API：</strong><a href=\"http://www.gulpjs.com.cn/docs/api/\" target=\"_blank\" rel=\"noopener\">http://www.gulpjs.com.cn/docs/api/</a></li>\n</ul>\n<h1 id=\"Gulp的安装与使用\"><a href=\"#Gulp的安装与使用\" class=\"headerlink\" title=\"Gulp的安装与使用\"></a>Gulp的安装与使用</h1><h3 id=\"Gulp的简单应用\"><a href=\"#Gulp的简单应用\" class=\"headerlink\" title=\"Gulp的简单应用\"></a>Gulp的简单应用</h3><p><strong>1. 全局安装Gulp</strong>  </p>\n<pre><code>npm install --global gulp\n</code></pre><p><strong>2. 创建一个code文件夹，并进入到code文件夹下</strong><br>下面的命令是在Git bash中运行的，运行这几条命令，需要安装Git，没有安装Git的可以在电脑上自己手动创建一个code文件夹，并且进入code文件夹下  </p>\n<pre><code># 创建code文件夹\nmkdir code\n\n# 进入code文件下\ncd code \n</code></pre><p><strong>3.执行下面的命令创建package.json文件</strong>  </p>\n<pre><code>npm init\n</code></pre><p>在命令行中运行<code>npm init</code>命令的时候会出现下图所示的要求用户输入name、version等值，当不清楚这些值的含义的时候，一直按回车键，会自动使用默认值<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416094616628.png\" alt=\"这里写图片描述\"></p>\n<p><strong>4.完成这些操作后会在code文件中会生成一个package.json文件</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416094708660.png\" alt=\"这里写图片描述\"></p>\n<p><strong>5.打开package.json文件可以看到package.json中记录了一些当前项目的信息</strong><br><strong>name:</strong> 项目的名称<br><strong>version:</strong> 项目的版本<br><strong>description:</strong> 项目的描述信息<br><strong>main:</strong> 项目的入口函数<br><strong>scripts:</strong> scripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令<br><strong>author:</strong> 项目的作者<br><strong>license:</strong> 项目的许可证<br><strong>devDependencies:</strong> 项目依赖的插件<br><strong>repository:</strong> 项目资源库</p>\n<p><strong>6.在命令行中执行下面的命令，安装Gulp</strong>  </p>\n<pre><code>npm install --save-dev gulp\n</code></pre><p><strong>7.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong><br>Gulp主文件用于注册任务 </p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n/**\n * 注册一个任务\n * @param 任务名称\n * @param 自动执行的函数\n */\ngulp.task(&apos;say&apos;, function() {\n    console.log(&quot;hello world !&quot;);\n});\n</code></pre><p><strong>8.使用gulp</strong><br>打开命令行，并且在命令行中执行<code>gulp say</code>命令，可以看到在控制台中输出了一句”say hello”表示Gulp安装成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416101457184.png\" alt=\"\"></p>\n<h3 id=\"使用Gulp实现一个文件拷贝任务\"><a href=\"#使用Gulp实现一个文件拷贝任务\" class=\"headerlink\" title=\"使用Gulp实现一个文件拷贝任务\"></a>使用Gulp实现一个文件拷贝任务</h3><p>下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的<strong>Gulp的安装与使用</strong>中的内容</p>\n<p><strong>1.创建一个src文件夹，并且在src文件夹下创建一个index.html文件</strong><br>在Git Bash中执行下面的命令创建一个src文件夹，并在src文件夹下创建一个index.htmll文件，没有安装Git的可以手动创建</p>\n<pre><code># 创建src文件夹\nmkdir src \n\n# 进入到src文件夹下\ncd src\n\n# 创建index.html文件\ntouch index.html\n</code></pre><p><strong>2.向index.html中添加HTML代码</strong></p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;h1&gt;这是一个简单的web页面&lt;/h1&gt;        \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p><strong>3.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong></p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n//文件拷贝任务\ngulp.task(&apos;copy&apos;, function() {\n\n    //获取src目录下的index.html文件\n    gulp.src(&apos;src/index.html&apos;)\n\n    //将index.html拷贝到dist目录中\n    .pipe(gulp.dest(&apos;dist/&apos;));\n});\n</code></pre><p><strong>4.在命令行中执行文件拷贝任务，将src目录下的index.html文件拷贝到dist目录下</strong>  </p>\n<pre><code>gulp copy\n</code></pre><p>文件拷贝命令执行完成后可以看到在code目录下自动创建了一个dist文件夹，并且在dist文件夹下自动创建了一个index.html文件，表示文件拷贝任务运行成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416110116584.png\" alt=\"这里写图片描述\"></p>\n<p><strong>5.自动执行文件拷贝任务</strong><br>在这个文件拷贝任务中，有一个非常大的弊端，就是每次更新index.html中的代码的时候，都要在命令行中执行一次<code>gulp copy</code>命令，这样做做了重复性操作，也不符合使用Gulp实现自动化的特点，为了改成自动化执行文件拷贝命令，可以修改gulpfile.js中的代码</p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n//文件拷贝任务\ngulp.task(&apos;copy&apos;, function() {\n\n    //获取src目录下的index.html文件\n    gulp.src(&apos;src/index.html&apos;)\n\n    //将index.html拷贝到dist目录中\n    .pipe(gulp.dest(&apos;dist/&apos;));\n});\n\n//监视copy任务\ngulp.task(&apos;dist&apos;, function() {\n\n    //当src目录下的index.html文件发生变化的时候\n    //执行copy任务\n    gulp.watch(&apos;src/index.html&apos;, [&apos;copy&apos;]);\n});\n</code></pre><p><strong>6.修改好gulpfile.js中的代码后在命令行中执行下面的命令</strong></p>\n<pre><code>gulp dist\n</code></pre><p><strong>6.此时只要修改src文件夹的index.html文件,修改完成后只要一保存，HTML代码就能同时同步到dist文件夹下的index.html中</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416113431492.png\" alt=\"这里写图片描述\"></p>\n<h3 id=\"使用Gulp自动将Less编译成CSS\"><a href=\"#使用Gulp自动将Less编译成CSS\" class=\"headerlink\" title=\"使用Gulp自动将Less编译成CSS\"></a>使用Gulp自动将Less编译成CSS</h3><p>下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的<strong>Gulp的安装与使用</strong>中的内容</p>\n<p><strong>1.安装gulp-less插件</strong></p>\n<pre><code>npm install gulp-less --save-dev\n</code></pre><p><strong>2.创建Less文件</strong><br>在Git Bash中执行下面的命令创建一个less文件夹，并且在less文件夹下创建一个style.less文件，在没有安装Git Bash的情况下可以手动创建</p>\n<pre><code># 创建less文件夹\nmkdir less \n\n# 进入less文件夹中\ncd less\n\n# 创建style.less文件\ntouch style.less\n</code></pre><p><strong>3.向style.less中添加一段简单的Less代码</strong></p>\n<pre><code>@primary-color: #fff;\n\nbody {\n    background-color: @primary-color;\n\n    .container {\n        width: 1028px;\n\n        .row {\n            padding: 0 15px;\n        }\n    }\n}\n</code></pre><p><strong>4.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong></p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\nvar less = require(&apos;gulp-less&apos;);\n\n//创建一个将Less编译成CSS的任务\ngulp.task(&apos;less&apos;, function() {\n    gulp.src(&apos;less/*.less&apos;)\n    .pipe(less())\n    .pipe(gulp.dest(&apos;css/&apos;));\n});\n\n//监视less任务\n//当less文件发生变化的时候，会自动将Less转换成CSS\ngulp.task(&apos;watchLess&apos;, function() {\n    gulp.watch(&apos;./less/*.less&apos;, [&apos;less&apos;]);\n});\n</code></pre><p><strong>5.在命令行中执行下面的命令，启动将Less文件编译成CSS文件的任务</strong></p>\n<pre><code>gulp watchLess\n</code></pre><p><strong>5.修改less文件夹下的style.less</strong><br>打开less文件夹下的style.less文件，并且修改style.less文件，当保存后会自动将style.less文件编译成css文件，并且会自动创建一个css目录，在css目录下自动创建一个style.css文件用于存储生成的CSS代码<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170417204103113.png\" alt=\"这里写图片描述\"></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"noopener\">gulp.js 中文网</a></li>\n<li><a href=\"http://www.ydcss.com/archives/tag/gulp\" target=\"_blank\" rel=\"noopener\">一点 | gulp教程</a></li>\n<li><a href=\"http://www.browsersync.cn/\" target=\"_blank\" rel=\"noopener\">Browsersync中文网</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Gulp/\">使用Gulp</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<h1 id=\"为什么要使用Gulp\"><a href=\"#为什么要使用Gulp\" class=\"headerlink\" title=\"为什么要使用Gulp\"></a>为什么要使用Gulp</h1><p>在前端开发中通常需要做，预处理语言的编译、js文件的压缩、css文件的压缩、图片的压缩等一系列工作，而使用Gulp可以自动化的完成这些工作，从而提高网站的开发效率，在我的博客<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/\">使用Less</a>中介绍了将Less文件编译成CSS文件的方法，仔细观察可以看到如果按照博客中介绍的方法，在编译多个Less文件或者编译不同文件夹下的Less文件时需要执行多次Less文件编译命令，而使用Gulp可以一次性完成这些操作<br>","more":"</p>\n<h1 id=\"Gulp是什么\"><a href=\"#Gulp是什么\" class=\"headerlink\" title=\"Gulp是什么\"></a>Gulp是什么</h1><p>Gulp是一个可以自动化完成我们开发过程中大量的重复工作的工具，使用Gulp可以自动化的完成如，预处理语言的编译、js文件的压缩、css文件的压缩、html文件的压缩、图片体积优化等工作</p>\n<h1 id=\"Gulp的特性\"><a href=\"#Gulp的特性\" class=\"headerlink\" title=\"Gulp的特性\"></a>Gulp的特性</h1><ul>\n<li><strong>易于使用</strong> 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理</li>\n<li><strong>构建快速</strong> 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作</li>\n<li><strong>插件高质</strong> Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作</li>\n<li><strong>易于学习</strong> 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道</li>\n</ul>\n<h1 id=\"Gulp的常用网站\"><a href=\"#Gulp的常用网站\" class=\"headerlink\" title=\"Gulp的常用网站\"></a>Gulp的常用网站</h1><ul>\n<li><strong>Gulp官方网站：</strong><a href=\"http://gulpjs.com/\" target=\"_blank\" rel=\"noopener\">http://gulpjs.com/</a>  </li>\n<li><strong>Gulp中文网：</strong><a href=\"http://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"noopener\">http://www.gulpjs.com.cn/</a></li>\n<li><strong>Gulp插件地址：</strong><a href=\"http://gulpjs.com/plugins/\" target=\"_blank\" rel=\"noopener\">http://gulpjs.com/plugins/</a></li>\n<li><strong>Gulp官方API：</strong><a href=\"https://github.com/gulpjs/gulp/blob/master/docs/API.md\" target=\"_blank\" rel=\"noopener\">https://github.com/gulpjs/gulp/blob/master/docs/API.md</a></li>\n<li><strong>Gulp中文API：</strong><a href=\"http://www.gulpjs.com.cn/docs/api/\" target=\"_blank\" rel=\"noopener\">http://www.gulpjs.com.cn/docs/api/</a></li>\n</ul>\n<h1 id=\"Gulp的安装与使用\"><a href=\"#Gulp的安装与使用\" class=\"headerlink\" title=\"Gulp的安装与使用\"></a>Gulp的安装与使用</h1><h3 id=\"Gulp的简单应用\"><a href=\"#Gulp的简单应用\" class=\"headerlink\" title=\"Gulp的简单应用\"></a>Gulp的简单应用</h3><p><strong>1. 全局安装Gulp</strong>  </p>\n<pre><code>npm install --global gulp\n</code></pre><p><strong>2. 创建一个code文件夹，并进入到code文件夹下</strong><br>下面的命令是在Git bash中运行的，运行这几条命令，需要安装Git，没有安装Git的可以在电脑上自己手动创建一个code文件夹，并且进入code文件夹下  </p>\n<pre><code># 创建code文件夹\nmkdir code\n\n# 进入code文件下\ncd code \n</code></pre><p><strong>3.执行下面的命令创建package.json文件</strong>  </p>\n<pre><code>npm init\n</code></pre><p>在命令行中运行<code>npm init</code>命令的时候会出现下图所示的要求用户输入name、version等值，当不清楚这些值的含义的时候，一直按回车键，会自动使用默认值<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416094616628.png\" alt=\"这里写图片描述\"></p>\n<p><strong>4.完成这些操作后会在code文件中会生成一个package.json文件</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416094708660.png\" alt=\"这里写图片描述\"></p>\n<p><strong>5.打开package.json文件可以看到package.json中记录了一些当前项目的信息</strong><br><strong>name:</strong> 项目的名称<br><strong>version:</strong> 项目的版本<br><strong>description:</strong> 项目的描述信息<br><strong>main:</strong> 项目的入口函数<br><strong>scripts:</strong> scripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令<br><strong>author:</strong> 项目的作者<br><strong>license:</strong> 项目的许可证<br><strong>devDependencies:</strong> 项目依赖的插件<br><strong>repository:</strong> 项目资源库</p>\n<p><strong>6.在命令行中执行下面的命令，安装Gulp</strong>  </p>\n<pre><code>npm install --save-dev gulp\n</code></pre><p><strong>7.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong><br>Gulp主文件用于注册任务 </p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n/**\n * 注册一个任务\n * @param 任务名称\n * @param 自动执行的函数\n */\ngulp.task(&apos;say&apos;, function() {\n    console.log(&quot;hello world !&quot;);\n});\n</code></pre><p><strong>8.使用gulp</strong><br>打开命令行，并且在命令行中执行<code>gulp say</code>命令，可以看到在控制台中输出了一句”say hello”表示Gulp安装成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416101457184.png\" alt=\"\"></p>\n<h3 id=\"使用Gulp实现一个文件拷贝任务\"><a href=\"#使用Gulp实现一个文件拷贝任务\" class=\"headerlink\" title=\"使用Gulp实现一个文件拷贝任务\"></a>使用Gulp实现一个文件拷贝任务</h3><p>下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的<strong>Gulp的安装与使用</strong>中的内容</p>\n<p><strong>1.创建一个src文件夹，并且在src文件夹下创建一个index.html文件</strong><br>在Git Bash中执行下面的命令创建一个src文件夹，并在src文件夹下创建一个index.htmll文件，没有安装Git的可以手动创建</p>\n<pre><code># 创建src文件夹\nmkdir src \n\n# 进入到src文件夹下\ncd src\n\n# 创建index.html文件\ntouch index.html\n</code></pre><p><strong>2.向index.html中添加HTML代码</strong></p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;h1&gt;这是一个简单的web页面&lt;/h1&gt;        \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p><strong>3.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong></p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n//文件拷贝任务\ngulp.task(&apos;copy&apos;, function() {\n\n    //获取src目录下的index.html文件\n    gulp.src(&apos;src/index.html&apos;)\n\n    //将index.html拷贝到dist目录中\n    .pipe(gulp.dest(&apos;dist/&apos;));\n});\n</code></pre><p><strong>4.在命令行中执行文件拷贝任务，将src目录下的index.html文件拷贝到dist目录下</strong>  </p>\n<pre><code>gulp copy\n</code></pre><p>文件拷贝命令执行完成后可以看到在code目录下自动创建了一个dist文件夹，并且在dist文件夹下自动创建了一个index.html文件，表示文件拷贝任务运行成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416110116584.png\" alt=\"这里写图片描述\"></p>\n<p><strong>5.自动执行文件拷贝任务</strong><br>在这个文件拷贝任务中，有一个非常大的弊端，就是每次更新index.html中的代码的时候，都要在命令行中执行一次<code>gulp copy</code>命令，这样做做了重复性操作，也不符合使用Gulp实现自动化的特点，为了改成自动化执行文件拷贝命令，可以修改gulpfile.js中的代码</p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n//文件拷贝任务\ngulp.task(&apos;copy&apos;, function() {\n\n    //获取src目录下的index.html文件\n    gulp.src(&apos;src/index.html&apos;)\n\n    //将index.html拷贝到dist目录中\n    .pipe(gulp.dest(&apos;dist/&apos;));\n});\n\n//监视copy任务\ngulp.task(&apos;dist&apos;, function() {\n\n    //当src目录下的index.html文件发生变化的时候\n    //执行copy任务\n    gulp.watch(&apos;src/index.html&apos;, [&apos;copy&apos;]);\n});\n</code></pre><p><strong>6.修改好gulpfile.js中的代码后在命令行中执行下面的命令</strong></p>\n<pre><code>gulp dist\n</code></pre><p><strong>6.此时只要修改src文件夹的index.html文件,修改完成后只要一保存，HTML代码就能同时同步到dist文件夹下的index.html中</strong><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170416113431492.png\" alt=\"这里写图片描述\"></p>\n<h3 id=\"使用Gulp自动将Less编译成CSS\"><a href=\"#使用Gulp自动将Less编译成CSS\" class=\"headerlink\" title=\"使用Gulp自动将Less编译成CSS\"></a>使用Gulp自动将Less编译成CSS</h3><p>下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的<strong>Gulp的安装与使用</strong>中的内容</p>\n<p><strong>1.安装gulp-less插件</strong></p>\n<pre><code>npm install gulp-less --save-dev\n</code></pre><p><strong>2.创建Less文件</strong><br>在Git Bash中执行下面的命令创建一个less文件夹，并且在less文件夹下创建一个style.less文件，在没有安装Git Bash的情况下可以手动创建</p>\n<pre><code># 创建less文件夹\nmkdir less \n\n# 进入less文件夹中\ncd less\n\n# 创建style.less文件\ntouch style.less\n</code></pre><p><strong>3.向style.less中添加一段简单的Less代码</strong></p>\n<pre><code>@primary-color: #fff;\n\nbody {\n    background-color: @primary-color;\n\n    .container {\n        width: 1028px;\n\n        .row {\n            padding: 0 15px;\n        }\n    }\n}\n</code></pre><p><strong>4.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong></p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\nvar less = require(&apos;gulp-less&apos;);\n\n//创建一个将Less编译成CSS的任务\ngulp.task(&apos;less&apos;, function() {\n    gulp.src(&apos;less/*.less&apos;)\n    .pipe(less())\n    .pipe(gulp.dest(&apos;css/&apos;));\n});\n\n//监视less任务\n//当less文件发生变化的时候，会自动将Less转换成CSS\ngulp.task(&apos;watchLess&apos;, function() {\n    gulp.watch(&apos;./less/*.less&apos;, [&apos;less&apos;]);\n});\n</code></pre><p><strong>5.在命令行中执行下面的命令，启动将Less文件编译成CSS文件的任务</strong></p>\n<pre><code>gulp watchLess\n</code></pre><p><strong>5.修改less文件夹下的style.less</strong><br>打开less文件夹下的style.less文件，并且修改style.less文件，当保存后会自动将style.less文件编译成css文件，并且会自动创建一个css目录，在css目录下自动创建一个style.css文件用于存储生成的CSS代码<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170417204103113.png\" alt=\"这里写图片描述\"></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"noopener\">gulp.js 中文网</a></li>\n<li><a href=\"http://www.ydcss.com/archives/tag/gulp\" target=\"_blank\" rel=\"noopener\">一点 | gulp教程</a></li>\n<li><a href=\"http://www.browsersync.cn/\" target=\"_blank\" rel=\"noopener\">Browsersync中文网</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Gulp/\">使用Gulp</a>】</p>\n</blockquote>"},{"title":"使用Less","date":"2017-03-30T16:00:00.000Z","_content":"\n# 为什么要使用预处理CSS\n在使用CSS过程中会遇到一个非常头疼的问题，因为CSS中没有像java/C++或者PHP等程序语言一样有有自己的变量、常量、条件语句以及一些编程语法，只是一行行单纯的属性描述，写起来相当的费事，而且代码难以组织和维护，为了解决这个问题，引入了预处理CSS，预处理CSS可以像Java/C++或者PHP一样用变量，函数等语法描述CSS。\n<!--more-->\n\n# 什么是预处理CSS\nCSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处，预处理CSS编程语言有Les，Sass，styuls。\n\n# 为什么使用Less\nLess是一款比较流行的预处理CSS，支持变量、混合、函数、嵌套、循环等特点。\n\n# 学习Less的常用网站\n**Less官网 [http://lesscss.org/](http://lesscss.org/)**  \n**Less中文网 [http://lesscss.cn/](http://lesscss.cn/)**  \n**w3cplus [http://www.w3cplus.com/css/less](http://www.w3cplus.com/css/less)**  \n\n# 搭建Less开发环境\n### **需要用到的软件**  \n**[Node.js](http://nodejs.cn/)**\n\n### 安装Less\n\n\tnpm install -g less\n\n### 使用Less\n\n**创建Less文件**  \n在一个文件夹下新建一个style.less文件，例如我在E:\\game\\HtmlProject\\less下创建了一个style.less文件\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326102025941.png)\n\n**向文件中添加Less代码**\n向style.less文件中添加下面的Less代码\n\n\t//定义一个变量，用于存放一个颜色\n\t@mainColor: #e92322;\n\t\n\t/* 创建一个body标签的样式 */\n\tbody {\n\t\n\t  /*设置body的背景颜色*/\n\t  background-color: @mainColor;\n\t}\n\n**将Less文件编译成CSS文件**\n打开命令行，并且进入到style.less所在的目录下执行`lessc style.less`命令将Less文件编译成CSS文件，生成的CSS文件会显示在命令行中\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326103159306.png)\n\n**将编译生成的CSS文件保存在本地**\n在命令行中执行`lessc style.less > style.css`命令后，会先在style.less文件的同级目录下创建一个style.css文件，并且将编译生成的CSS代码保存在style.css文件中\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326103704105.png)\n\n**查看style.css中的代码**\n打开style.css文件后，可以看到style.css中的CSS代码和在命令行中的代码一样\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326104523338.png)\n\n**压缩CSS**\n在开发中，为了减少网络请求资源的大小，通常需要压缩CSS文件，Less中提供了一个压缩CSS的插件，先执行`npm install -g less-plugin-clean-css`命令安装插件，然后执行`lessc style.less --clean-css=\"--s1 --advanced --compatibility=ie8\" > style.min.css`命令，执行该命令后首先会将Less代码编译成CSS代码，然后会压缩CSS代码，最后会创建一个style.min.css文件，并且将压缩后的CSS代码保存到style.min.css文件中\n\n**压缩后的CSS代码**\n压缩后的CSS代码中删掉了注释和空格，换行等无意义的数据 \n`body{background-color:#e92322}`\n\n\n# Less中的一些其他用法\n\n**Less中实现标签嵌套**\n下面的Less代码中container下面存在多重嵌套的标签\n\n\t//定义变量，记录container的宽度\n\t@width: 1000px;\n\t\n\t//定义变量，记录container的高度\n\t@height: 2000px;\n\t\n\t//创建变量，记录div的颜色\n\t@mainColor: #f0f9f0;\n\t\n\t/* 嵌套的用法 */ \n\t.container {\n\t  width: @width;\n\t  height: @height;\n\t  background-color: #ff0;\n\t\n\t  .row {\n\t    height: 200px;\n\t\n\t    div {\n\t      border-left: 1px solid @mainColor;\n\t\n\t       > a {\n\t        color: red;\n\t\n\t        &:hover {\n\t          color: green;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n编译生成的CSS代码如下\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326111954541.png)\n\n**Less中使用函数**\n在下面的代码中body，header，footer标签都要设置border-radius属性，为了减少代码量可以创建一个setRadius函数，让这三个标签都通过调用setRadius函数设置border-radius属性大大的减少了代码量，提高了开发效率\n\n\t/**\n\t * 为标签设置border-radius属性\n\t * @radius 标签的半径\n\t * @return 没有返回值\n\t */\n\t.setRadius(@radius: 5px) {\n\t  -moz-border-radius: @radius;\n\t  -webkit-border-radius: @radius;\n\t  border-radius: @radius;\n\t}\n\t\n\theader {\n\t\n\t\t//给header标签设置border-radius属性\n\t\t.setRadius;\n\t}\n\t\n\tfooter {\n\t\t//给footer标签设置border-radius属性\n\t\t.setRadius(10px);\n\t}\n\t\n\tbody {\n\t\t//给body标签设置border-radius属性\n\t\t.setRadius(15px);\n\t}\n\n执行结果\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326114125041.png)\n\n**合并less文件**\n在开发中使用less文件的合并功能是一个非常高效且很适合团队开发的方式，比如在一个团队中有三个成员，A成员负责开发页面的header部分，A成员可以建立一个header.less文件，B成员负责开发页面中的banner部分，B成员可以创建一个banner.less文件，C成员负责开发页面中的footer部分，C成员可以建议一个footer.less文件，开发完成后可以将header.less、banner.less、footer.less合并在一个CSS文件中\n假定header.less中代码如下\n\n\t#header {\n\t\tbackground-color: red;\n\t}\n\nbanner.less中的代码\n\n\t#banner {\n\t\tbackground-color: green;\n\t}\n\nfooter.less中的代码\n\n\t#footer {\n\t\tbackground-color: blue;\n\t}\n\n将这三个less文件中的代码合并到style.less中\n\n\t//引入header.less文件\n\t@import url('header.less');\n\t\n\t//引入banner.less文件\n\t@import url('banner.less');\n\t\n\t//引入footer.less文件\n\t@import url('footer.less');\n\n编译index.less文件，编译结果如下，可以看到三个less文件中的代码都编译成了CSS文件，并且放在一起\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326120411756.png)\n\n# 在网页中直接使用Less\n\n## 为什么要在网页中直接使用Less\n如果按照上面介绍的方法使用Less，需要每次使用Less写完一点样式后就将Less编译成CSS文件，再在html中引入CSS，总是重复这个操作大大降低了开发效率，为了解决这个问题，可以通过一点简单的配置，可以实现在网页中直接运行\n## 配置在网页中直接运行Less的环境\n**下载less.js-2.5.1文件**\n通过[https://pan.baidu.com/s/1pLM3j6r](https://pan.baidu.com/s/1pLM3j6r)下载less.js-2.5.1.zip文件\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170327105805389.png)\n\n**创建项目**\n创建一个项目。并且将less.js-2.5.1.zip解压到项目目录下\n\n**创建Less文件**\n在项目目录下创建一个main.less文件，并在向main.less中添加如下代码\n\n\t//创建变量，用于设置body的宽度\n\t@width: 1024px;\n\t\n\t//创建变量，用于设置body的高度\n\t@height: 1000px;\n\t\n\t//创建变量，用于设置body的背景颜色\n\t@backgroundColor: #f5f5f5;\n\t\n\tbody {\n\t  width: @width;\n\t  height: @height;\n\t  margin: 0;\n\t  padding: 50px;\n\t  background-color: @backgroundColor;\n\t}\n\n**创建HTML文件**\n在项目目录下创建一个index.html文件，并且向index.html中添加如下代码\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t\n\t<head>\n\t  <meta charset=\"UTF-8\">\n\t  <title>测试网页中直接使用less文件的效果</title>\n\t  <link rel=\"stylesheet/less\" href=\"main.less\">\n\t</head>\n\t\n\t<body>\n\t\n\t  <script src=\"less.js-2.5.1\\dist\\less.min.js\"></script>\n\t</body>\n\t\n\t</html>\n\n**运行项目**\n使用HTTP请求的方式在浏览器中运行index.html文件，WebStrom中点击运行按钮后会自动以HTTP请求的方式在浏览器中运行index.html文件，此时查看console控制台，当console控制台中展示下面的信息，表示项目运行成功\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170327110802691.png)\n\n**查看元素信息**\n在Elements模块下可以看到为body元素设置了CSS样式，表示Less文件在网页中运行成功\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170327111130924.png)\n\n## 特别说明\n这种方法只能用于开发测试中，开发完成后需要将Less编译成CSS\n\n## 使用Less做的一个小项目\n使用Less实现博雅互动首页 [https://github.com/meishadevs/boyaa](https://github.com/meishadevs/boyaa)\n\n## 参考链接\n- [Less快速入门](http://less.bootcss.com/)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用Less](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/)】","source":"_posts/使用Less.md","raw":"---\ntitle: 使用Less\ndate: 2017-03-31\ncategories:\n\t- 预处理CSS\n\t- Less\ntags:\n\t- 预处理CSS\n\t- Less\n---\n\n# 为什么要使用预处理CSS\n在使用CSS过程中会遇到一个非常头疼的问题，因为CSS中没有像java/C++或者PHP等程序语言一样有有自己的变量、常量、条件语句以及一些编程语法，只是一行行单纯的属性描述，写起来相当的费事，而且代码难以组织和维护，为了解决这个问题，引入了预处理CSS，预处理CSS可以像Java/C++或者PHP一样用变量，函数等语法描述CSS。\n<!--more-->\n\n# 什么是预处理CSS\nCSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处，预处理CSS编程语言有Les，Sass，styuls。\n\n# 为什么使用Less\nLess是一款比较流行的预处理CSS，支持变量、混合、函数、嵌套、循环等特点。\n\n# 学习Less的常用网站\n**Less官网 [http://lesscss.org/](http://lesscss.org/)**  \n**Less中文网 [http://lesscss.cn/](http://lesscss.cn/)**  \n**w3cplus [http://www.w3cplus.com/css/less](http://www.w3cplus.com/css/less)**  \n\n# 搭建Less开发环境\n### **需要用到的软件**  \n**[Node.js](http://nodejs.cn/)**\n\n### 安装Less\n\n\tnpm install -g less\n\n### 使用Less\n\n**创建Less文件**  \n在一个文件夹下新建一个style.less文件，例如我在E:\\game\\HtmlProject\\less下创建了一个style.less文件\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326102025941.png)\n\n**向文件中添加Less代码**\n向style.less文件中添加下面的Less代码\n\n\t//定义一个变量，用于存放一个颜色\n\t@mainColor: #e92322;\n\t\n\t/* 创建一个body标签的样式 */\n\tbody {\n\t\n\t  /*设置body的背景颜色*/\n\t  background-color: @mainColor;\n\t}\n\n**将Less文件编译成CSS文件**\n打开命令行，并且进入到style.less所在的目录下执行`lessc style.less`命令将Less文件编译成CSS文件，生成的CSS文件会显示在命令行中\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326103159306.png)\n\n**将编译生成的CSS文件保存在本地**\n在命令行中执行`lessc style.less > style.css`命令后，会先在style.less文件的同级目录下创建一个style.css文件，并且将编译生成的CSS代码保存在style.css文件中\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326103704105.png)\n\n**查看style.css中的代码**\n打开style.css文件后，可以看到style.css中的CSS代码和在命令行中的代码一样\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326104523338.png)\n\n**压缩CSS**\n在开发中，为了减少网络请求资源的大小，通常需要压缩CSS文件，Less中提供了一个压缩CSS的插件，先执行`npm install -g less-plugin-clean-css`命令安装插件，然后执行`lessc style.less --clean-css=\"--s1 --advanced --compatibility=ie8\" > style.min.css`命令，执行该命令后首先会将Less代码编译成CSS代码，然后会压缩CSS代码，最后会创建一个style.min.css文件，并且将压缩后的CSS代码保存到style.min.css文件中\n\n**压缩后的CSS代码**\n压缩后的CSS代码中删掉了注释和空格，换行等无意义的数据 \n`body{background-color:#e92322}`\n\n\n# Less中的一些其他用法\n\n**Less中实现标签嵌套**\n下面的Less代码中container下面存在多重嵌套的标签\n\n\t//定义变量，记录container的宽度\n\t@width: 1000px;\n\t\n\t//定义变量，记录container的高度\n\t@height: 2000px;\n\t\n\t//创建变量，记录div的颜色\n\t@mainColor: #f0f9f0;\n\t\n\t/* 嵌套的用法 */ \n\t.container {\n\t  width: @width;\n\t  height: @height;\n\t  background-color: #ff0;\n\t\n\t  .row {\n\t    height: 200px;\n\t\n\t    div {\n\t      border-left: 1px solid @mainColor;\n\t\n\t       > a {\n\t        color: red;\n\t\n\t        &:hover {\n\t          color: green;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n编译生成的CSS代码如下\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326111954541.png)\n\n**Less中使用函数**\n在下面的代码中body，header，footer标签都要设置border-radius属性，为了减少代码量可以创建一个setRadius函数，让这三个标签都通过调用setRadius函数设置border-radius属性大大的减少了代码量，提高了开发效率\n\n\t/**\n\t * 为标签设置border-radius属性\n\t * @radius 标签的半径\n\t * @return 没有返回值\n\t */\n\t.setRadius(@radius: 5px) {\n\t  -moz-border-radius: @radius;\n\t  -webkit-border-radius: @radius;\n\t  border-radius: @radius;\n\t}\n\t\n\theader {\n\t\n\t\t//给header标签设置border-radius属性\n\t\t.setRadius;\n\t}\n\t\n\tfooter {\n\t\t//给footer标签设置border-radius属性\n\t\t.setRadius(10px);\n\t}\n\t\n\tbody {\n\t\t//给body标签设置border-radius属性\n\t\t.setRadius(15px);\n\t}\n\n执行结果\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326114125041.png)\n\n**合并less文件**\n在开发中使用less文件的合并功能是一个非常高效且很适合团队开发的方式，比如在一个团队中有三个成员，A成员负责开发页面的header部分，A成员可以建立一个header.less文件，B成员负责开发页面中的banner部分，B成员可以创建一个banner.less文件，C成员负责开发页面中的footer部分，C成员可以建议一个footer.less文件，开发完成后可以将header.less、banner.less、footer.less合并在一个CSS文件中\n假定header.less中代码如下\n\n\t#header {\n\t\tbackground-color: red;\n\t}\n\nbanner.less中的代码\n\n\t#banner {\n\t\tbackground-color: green;\n\t}\n\nfooter.less中的代码\n\n\t#footer {\n\t\tbackground-color: blue;\n\t}\n\n将这三个less文件中的代码合并到style.less中\n\n\t//引入header.less文件\n\t@import url('header.less');\n\t\n\t//引入banner.less文件\n\t@import url('banner.less');\n\t\n\t//引入footer.less文件\n\t@import url('footer.less');\n\n编译index.less文件，编译结果如下，可以看到三个less文件中的代码都编译成了CSS文件，并且放在一起\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170326120411756.png)\n\n# 在网页中直接使用Less\n\n## 为什么要在网页中直接使用Less\n如果按照上面介绍的方法使用Less，需要每次使用Less写完一点样式后就将Less编译成CSS文件，再在html中引入CSS，总是重复这个操作大大降低了开发效率，为了解决这个问题，可以通过一点简单的配置，可以实现在网页中直接运行\n## 配置在网页中直接运行Less的环境\n**下载less.js-2.5.1文件**\n通过[https://pan.baidu.com/s/1pLM3j6r](https://pan.baidu.com/s/1pLM3j6r)下载less.js-2.5.1.zip文件\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170327105805389.png)\n\n**创建项目**\n创建一个项目。并且将less.js-2.5.1.zip解压到项目目录下\n\n**创建Less文件**\n在项目目录下创建一个main.less文件，并在向main.less中添加如下代码\n\n\t//创建变量，用于设置body的宽度\n\t@width: 1024px;\n\t\n\t//创建变量，用于设置body的高度\n\t@height: 1000px;\n\t\n\t//创建变量，用于设置body的背景颜色\n\t@backgroundColor: #f5f5f5;\n\t\n\tbody {\n\t  width: @width;\n\t  height: @height;\n\t  margin: 0;\n\t  padding: 50px;\n\t  background-color: @backgroundColor;\n\t}\n\n**创建HTML文件**\n在项目目录下创建一个index.html文件，并且向index.html中添加如下代码\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t\n\t<head>\n\t  <meta charset=\"UTF-8\">\n\t  <title>测试网页中直接使用less文件的效果</title>\n\t  <link rel=\"stylesheet/less\" href=\"main.less\">\n\t</head>\n\t\n\t<body>\n\t\n\t  <script src=\"less.js-2.5.1\\dist\\less.min.js\"></script>\n\t</body>\n\t\n\t</html>\n\n**运行项目**\n使用HTTP请求的方式在浏览器中运行index.html文件，WebStrom中点击运行按钮后会自动以HTTP请求的方式在浏览器中运行index.html文件，此时查看console控制台，当console控制台中展示下面的信息，表示项目运行成功\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170327110802691.png)\n\n**查看元素信息**\n在Elements模块下可以看到为body元素设置了CSS样式，表示Less文件在网页中运行成功\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170327111130924.png)\n\n## 特别说明\n这种方法只能用于开发测试中，开发完成后需要将Less编译成CSS\n\n## 使用Less做的一个小项目\n使用Less实现博雅互动首页 [https://github.com/meishadevs/boyaa](https://github.com/meishadevs/boyaa)\n\n## 参考链接\n- [Less快速入门](http://less.bootcss.com/)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用Less](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/)】","slug":"使用Less","published":1,"updated":"2018-07-07T02:23:40.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000djc7u4ysqmkmv","content":"<h1 id=\"为什么要使用预处理CSS\"><a href=\"#为什么要使用预处理CSS\" class=\"headerlink\" title=\"为什么要使用预处理CSS\"></a>为什么要使用预处理CSS</h1><p>在使用CSS过程中会遇到一个非常头疼的问题，因为CSS中没有像java/C++或者PHP等程序语言一样有有自己的变量、常量、条件语句以及一些编程语法，只是一行行单纯的属性描述，写起来相当的费事，而且代码难以组织和维护，为了解决这个问题，引入了预处理CSS，预处理CSS可以像Java/C++或者PHP一样用变量，函数等语法描述CSS。<br><a id=\"more\"></a></p>\n<h1 id=\"什么是预处理CSS\"><a href=\"#什么是预处理CSS\" class=\"headerlink\" title=\"什么是预处理CSS\"></a>什么是预处理CSS</h1><p>CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处，预处理CSS编程语言有Les，Sass，styuls。</p>\n<h1 id=\"为什么使用Less\"><a href=\"#为什么使用Less\" class=\"headerlink\" title=\"为什么使用Less\"></a>为什么使用Less</h1><p>Less是一款比较流行的预处理CSS，支持变量、混合、函数、嵌套、循环等特点。</p>\n<h1 id=\"学习Less的常用网站\"><a href=\"#学习Less的常用网站\" class=\"headerlink\" title=\"学习Less的常用网站\"></a>学习Less的常用网站</h1><p><strong>Less官网 <a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">http://lesscss.org/</a></strong><br><strong>Less中文网 <a href=\"http://lesscss.cn/\" target=\"_blank\" rel=\"noopener\">http://lesscss.cn/</a></strong><br><strong>w3cplus <a href=\"http://www.w3cplus.com/css/less\" target=\"_blank\" rel=\"noopener\">http://www.w3cplus.com/css/less</a></strong>  </p>\n<h1 id=\"搭建Less开发环境\"><a href=\"#搭建Less开发环境\" class=\"headerlink\" title=\"搭建Less开发环境\"></a>搭建Less开发环境</h1><h3 id=\"需要用到的软件\"><a href=\"#需要用到的软件\" class=\"headerlink\" title=\"需要用到的软件\"></a><strong>需要用到的软件</strong></h3><p><strong><a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">Node.js</a></strong></p>\n<h3 id=\"安装Less\"><a href=\"#安装Less\" class=\"headerlink\" title=\"安装Less\"></a>安装Less</h3><pre><code>npm install -g less\n</code></pre><h3 id=\"使用Less\"><a href=\"#使用Less\" class=\"headerlink\" title=\"使用Less\"></a>使用Less</h3><p><strong>创建Less文件</strong><br>在一个文件夹下新建一个style.less文件，例如我在E:\\game\\HtmlProject\\less下创建了一个style.less文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326102025941.png\" alt=\"这里写图片描述\"></p>\n<p><strong>向文件中添加Less代码</strong><br>向style.less文件中添加下面的Less代码</p>\n<pre><code>//定义一个变量，用于存放一个颜色\n@mainColor: #e92322;\n\n/* 创建一个body标签的样式 */\nbody {\n\n  /*设置body的背景颜色*/\n  background-color: @mainColor;\n}\n</code></pre><p><strong>将Less文件编译成CSS文件</strong><br>打开命令行，并且进入到style.less所在的目录下执行<code>lessc style.less</code>命令将Less文件编译成CSS文件，生成的CSS文件会显示在命令行中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326103159306.png\" alt=\"这里写图片描述\"></p>\n<p><strong>将编译生成的CSS文件保存在本地</strong><br>在命令行中执行<code>lessc style.less &gt; style.css</code>命令后，会先在style.less文件的同级目录下创建一个style.css文件，并且将编译生成的CSS代码保存在style.css文件中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326103704105.png\" alt=\"这里写图片描述\"></p>\n<p><strong>查看style.css中的代码</strong><br>打开style.css文件后，可以看到style.css中的CSS代码和在命令行中的代码一样<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326104523338.png\" alt=\"这里写图片描述\"></p>\n<p><strong>压缩CSS</strong><br>在开发中，为了减少网络请求资源的大小，通常需要压缩CSS文件，Less中提供了一个压缩CSS的插件，先执行<code>npm install -g less-plugin-clean-css</code>命令安装插件，然后执行<code>lessc style.less --clean-css=&quot;--s1 --advanced --compatibility=ie8&quot; &gt; style.min.css</code>命令，执行该命令后首先会将Less代码编译成CSS代码，然后会压缩CSS代码，最后会创建一个style.min.css文件，并且将压缩后的CSS代码保存到style.min.css文件中</p>\n<p><strong>压缩后的CSS代码</strong><br>压缩后的CSS代码中删掉了注释和空格，换行等无意义的数据<br><code>body{background-color:#e92322}</code></p>\n<h1 id=\"Less中的一些其他用法\"><a href=\"#Less中的一些其他用法\" class=\"headerlink\" title=\"Less中的一些其他用法\"></a>Less中的一些其他用法</h1><p><strong>Less中实现标签嵌套</strong><br>下面的Less代码中container下面存在多重嵌套的标签</p>\n<pre><code>//定义变量，记录container的宽度\n@width: 1000px;\n\n//定义变量，记录container的高度\n@height: 2000px;\n\n//创建变量，记录div的颜色\n@mainColor: #f0f9f0;\n\n/* 嵌套的用法 */ \n.container {\n  width: @width;\n  height: @height;\n  background-color: #ff0;\n\n  .row {\n    height: 200px;\n\n    div {\n      border-left: 1px solid @mainColor;\n\n       &gt; a {\n        color: red;\n\n        &amp;:hover {\n          color: green;\n        }\n      }\n    }\n  }\n}\n</code></pre><p>编译生成的CSS代码如下<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326111954541.png\" alt=\"这里写图片描述\"></p>\n<p><strong>Less中使用函数</strong><br>在下面的代码中body，header，footer标签都要设置border-radius属性，为了减少代码量可以创建一个setRadius函数，让这三个标签都通过调用setRadius函数设置border-radius属性大大的减少了代码量，提高了开发效率</p>\n<pre><code>/**\n * 为标签设置border-radius属性\n * @radius 标签的半径\n * @return 没有返回值\n */\n.setRadius(@radius: 5px) {\n  -moz-border-radius: @radius;\n  -webkit-border-radius: @radius;\n  border-radius: @radius;\n}\n\nheader {\n\n    //给header标签设置border-radius属性\n    .setRadius;\n}\n\nfooter {\n    //给footer标签设置border-radius属性\n    .setRadius(10px);\n}\n\nbody {\n    //给body标签设置border-radius属性\n    .setRadius(15px);\n}\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326114125041.png\" alt=\"这里写图片描述\"></p>\n<p><strong>合并less文件</strong><br>在开发中使用less文件的合并功能是一个非常高效且很适合团队开发的方式，比如在一个团队中有三个成员，A成员负责开发页面的header部分，A成员可以建立一个header.less文件，B成员负责开发页面中的banner部分，B成员可以创建一个banner.less文件，C成员负责开发页面中的footer部分，C成员可以建议一个footer.less文件，开发完成后可以将header.less、banner.less、footer.less合并在一个CSS文件中<br>假定header.less中代码如下</p>\n<pre><code>#header {\n    background-color: red;\n}\n</code></pre><p>banner.less中的代码</p>\n<pre><code>#banner {\n    background-color: green;\n}\n</code></pre><p>footer.less中的代码</p>\n<pre><code>#footer {\n    background-color: blue;\n}\n</code></pre><p>将这三个less文件中的代码合并到style.less中</p>\n<pre><code>//引入header.less文件\n@import url(&apos;header.less&apos;);\n\n//引入banner.less文件\n@import url(&apos;banner.less&apos;);\n\n//引入footer.less文件\n@import url(&apos;footer.less&apos;);\n</code></pre><p>编译index.less文件，编译结果如下，可以看到三个less文件中的代码都编译成了CSS文件，并且放在一起<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326120411756.png\" alt=\"这里写图片描述\"></p>\n<h1 id=\"在网页中直接使用Less\"><a href=\"#在网页中直接使用Less\" class=\"headerlink\" title=\"在网页中直接使用Less\"></a>在网页中直接使用Less</h1><h2 id=\"为什么要在网页中直接使用Less\"><a href=\"#为什么要在网页中直接使用Less\" class=\"headerlink\" title=\"为什么要在网页中直接使用Less\"></a>为什么要在网页中直接使用Less</h2><p>如果按照上面介绍的方法使用Less，需要每次使用Less写完一点样式后就将Less编译成CSS文件，再在html中引入CSS，总是重复这个操作大大降低了开发效率，为了解决这个问题，可以通过一点简单的配置，可以实现在网页中直接运行</p>\n<h2 id=\"配置在网页中直接运行Less的环境\"><a href=\"#配置在网页中直接运行Less的环境\" class=\"headerlink\" title=\"配置在网页中直接运行Less的环境\"></a>配置在网页中直接运行Less的环境</h2><p><strong>下载less.js-2.5.1文件</strong><br>通过<a href=\"https://pan.baidu.com/s/1pLM3j6r\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1pLM3j6r</a>下载less.js-2.5.1.zip文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170327105805389.png\" alt=\"这里写图片描述\"></p>\n<p><strong>创建项目</strong><br>创建一个项目。并且将less.js-2.5.1.zip解压到项目目录下</p>\n<p><strong>创建Less文件</strong><br>在项目目录下创建一个main.less文件，并在向main.less中添加如下代码</p>\n<pre><code>//创建变量，用于设置body的宽度\n@width: 1024px;\n\n//创建变量，用于设置body的高度\n@height: 1000px;\n\n//创建变量，用于设置body的背景颜色\n@backgroundColor: #f5f5f5;\n\nbody {\n  width: @width;\n  height: @height;\n  margin: 0;\n  padding: 50px;\n  background-color: @backgroundColor;\n}\n</code></pre><p><strong>创建HTML文件</strong><br>在项目目录下创建一个index.html文件，并且向index.html中添加如下代码</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;title&gt;测试网页中直接使用less文件的效果&lt;/title&gt;\n  &lt;link rel=&quot;stylesheet/less&quot; href=&quot;main.less&quot;&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;script src=&quot;less.js-2.5.1\\dist\\less.min.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre><p><strong>运行项目</strong><br>使用HTTP请求的方式在浏览器中运行index.html文件，WebStrom中点击运行按钮后会自动以HTTP请求的方式在浏览器中运行index.html文件，此时查看console控制台，当console控制台中展示下面的信息，表示项目运行成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170327110802691.png\" alt=\"这里写图片描述\"></p>\n<p><strong>查看元素信息</strong><br>在Elements模块下可以看到为body元素设置了CSS样式，表示Less文件在网页中运行成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170327111130924.png\" alt=\"这里写图片描述\"></p>\n<h2 id=\"特别说明\"><a href=\"#特别说明\" class=\"headerlink\" title=\"特别说明\"></a>特别说明</h2><p>这种方法只能用于开发测试中，开发完成后需要将Less编译成CSS</p>\n<h2 id=\"使用Less做的一个小项目\"><a href=\"#使用Less做的一个小项目\" class=\"headerlink\" title=\"使用Less做的一个小项目\"></a>使用Less做的一个小项目</h2><p>使用Less实现博雅互动首页 <a href=\"https://github.com/meishadevs/boyaa\" target=\"_blank\" rel=\"noopener\">https://github.com/meishadevs/boyaa</a></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://less.bootcss.com/\" target=\"_blank\" rel=\"noopener\">Less快速入门</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/\">使用Less</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<h1 id=\"为什么要使用预处理CSS\"><a href=\"#为什么要使用预处理CSS\" class=\"headerlink\" title=\"为什么要使用预处理CSS\"></a>为什么要使用预处理CSS</h1><p>在使用CSS过程中会遇到一个非常头疼的问题，因为CSS中没有像java/C++或者PHP等程序语言一样有有自己的变量、常量、条件语句以及一些编程语法，只是一行行单纯的属性描述，写起来相当的费事，而且代码难以组织和维护，为了解决这个问题，引入了预处理CSS，预处理CSS可以像Java/C++或者PHP一样用变量，函数等语法描述CSS。<br>","more":"</p>\n<h1 id=\"什么是预处理CSS\"><a href=\"#什么是预处理CSS\" class=\"headerlink\" title=\"什么是预处理CSS\"></a>什么是预处理CSS</h1><p>CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处，预处理CSS编程语言有Les，Sass，styuls。</p>\n<h1 id=\"为什么使用Less\"><a href=\"#为什么使用Less\" class=\"headerlink\" title=\"为什么使用Less\"></a>为什么使用Less</h1><p>Less是一款比较流行的预处理CSS，支持变量、混合、函数、嵌套、循环等特点。</p>\n<h1 id=\"学习Less的常用网站\"><a href=\"#学习Less的常用网站\" class=\"headerlink\" title=\"学习Less的常用网站\"></a>学习Less的常用网站</h1><p><strong>Less官网 <a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">http://lesscss.org/</a></strong><br><strong>Less中文网 <a href=\"http://lesscss.cn/\" target=\"_blank\" rel=\"noopener\">http://lesscss.cn/</a></strong><br><strong>w3cplus <a href=\"http://www.w3cplus.com/css/less\" target=\"_blank\" rel=\"noopener\">http://www.w3cplus.com/css/less</a></strong>  </p>\n<h1 id=\"搭建Less开发环境\"><a href=\"#搭建Less开发环境\" class=\"headerlink\" title=\"搭建Less开发环境\"></a>搭建Less开发环境</h1><h3 id=\"需要用到的软件\"><a href=\"#需要用到的软件\" class=\"headerlink\" title=\"需要用到的软件\"></a><strong>需要用到的软件</strong></h3><p><strong><a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">Node.js</a></strong></p>\n<h3 id=\"安装Less\"><a href=\"#安装Less\" class=\"headerlink\" title=\"安装Less\"></a>安装Less</h3><pre><code>npm install -g less\n</code></pre><h3 id=\"使用Less\"><a href=\"#使用Less\" class=\"headerlink\" title=\"使用Less\"></a>使用Less</h3><p><strong>创建Less文件</strong><br>在一个文件夹下新建一个style.less文件，例如我在E:\\game\\HtmlProject\\less下创建了一个style.less文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326102025941.png\" alt=\"这里写图片描述\"></p>\n<p><strong>向文件中添加Less代码</strong><br>向style.less文件中添加下面的Less代码</p>\n<pre><code>//定义一个变量，用于存放一个颜色\n@mainColor: #e92322;\n\n/* 创建一个body标签的样式 */\nbody {\n\n  /*设置body的背景颜色*/\n  background-color: @mainColor;\n}\n</code></pre><p><strong>将Less文件编译成CSS文件</strong><br>打开命令行，并且进入到style.less所在的目录下执行<code>lessc style.less</code>命令将Less文件编译成CSS文件，生成的CSS文件会显示在命令行中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326103159306.png\" alt=\"这里写图片描述\"></p>\n<p><strong>将编译生成的CSS文件保存在本地</strong><br>在命令行中执行<code>lessc style.less &gt; style.css</code>命令后，会先在style.less文件的同级目录下创建一个style.css文件，并且将编译生成的CSS代码保存在style.css文件中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326103704105.png\" alt=\"这里写图片描述\"></p>\n<p><strong>查看style.css中的代码</strong><br>打开style.css文件后，可以看到style.css中的CSS代码和在命令行中的代码一样<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326104523338.png\" alt=\"这里写图片描述\"></p>\n<p><strong>压缩CSS</strong><br>在开发中，为了减少网络请求资源的大小，通常需要压缩CSS文件，Less中提供了一个压缩CSS的插件，先执行<code>npm install -g less-plugin-clean-css</code>命令安装插件，然后执行<code>lessc style.less --clean-css=&quot;--s1 --advanced --compatibility=ie8&quot; &gt; style.min.css</code>命令，执行该命令后首先会将Less代码编译成CSS代码，然后会压缩CSS代码，最后会创建一个style.min.css文件，并且将压缩后的CSS代码保存到style.min.css文件中</p>\n<p><strong>压缩后的CSS代码</strong><br>压缩后的CSS代码中删掉了注释和空格，换行等无意义的数据<br><code>body{background-color:#e92322}</code></p>\n<h1 id=\"Less中的一些其他用法\"><a href=\"#Less中的一些其他用法\" class=\"headerlink\" title=\"Less中的一些其他用法\"></a>Less中的一些其他用法</h1><p><strong>Less中实现标签嵌套</strong><br>下面的Less代码中container下面存在多重嵌套的标签</p>\n<pre><code>//定义变量，记录container的宽度\n@width: 1000px;\n\n//定义变量，记录container的高度\n@height: 2000px;\n\n//创建变量，记录div的颜色\n@mainColor: #f0f9f0;\n\n/* 嵌套的用法 */ \n.container {\n  width: @width;\n  height: @height;\n  background-color: #ff0;\n\n  .row {\n    height: 200px;\n\n    div {\n      border-left: 1px solid @mainColor;\n\n       &gt; a {\n        color: red;\n\n        &amp;:hover {\n          color: green;\n        }\n      }\n    }\n  }\n}\n</code></pre><p>编译生成的CSS代码如下<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326111954541.png\" alt=\"这里写图片描述\"></p>\n<p><strong>Less中使用函数</strong><br>在下面的代码中body，header，footer标签都要设置border-radius属性，为了减少代码量可以创建一个setRadius函数，让这三个标签都通过调用setRadius函数设置border-radius属性大大的减少了代码量，提高了开发效率</p>\n<pre><code>/**\n * 为标签设置border-radius属性\n * @radius 标签的半径\n * @return 没有返回值\n */\n.setRadius(@radius: 5px) {\n  -moz-border-radius: @radius;\n  -webkit-border-radius: @radius;\n  border-radius: @radius;\n}\n\nheader {\n\n    //给header标签设置border-radius属性\n    .setRadius;\n}\n\nfooter {\n    //给footer标签设置border-radius属性\n    .setRadius(10px);\n}\n\nbody {\n    //给body标签设置border-radius属性\n    .setRadius(15px);\n}\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326114125041.png\" alt=\"这里写图片描述\"></p>\n<p><strong>合并less文件</strong><br>在开发中使用less文件的合并功能是一个非常高效且很适合团队开发的方式，比如在一个团队中有三个成员，A成员负责开发页面的header部分，A成员可以建立一个header.less文件，B成员负责开发页面中的banner部分，B成员可以创建一个banner.less文件，C成员负责开发页面中的footer部分，C成员可以建议一个footer.less文件，开发完成后可以将header.less、banner.less、footer.less合并在一个CSS文件中<br>假定header.less中代码如下</p>\n<pre><code>#header {\n    background-color: red;\n}\n</code></pre><p>banner.less中的代码</p>\n<pre><code>#banner {\n    background-color: green;\n}\n</code></pre><p>footer.less中的代码</p>\n<pre><code>#footer {\n    background-color: blue;\n}\n</code></pre><p>将这三个less文件中的代码合并到style.less中</p>\n<pre><code>//引入header.less文件\n@import url(&apos;header.less&apos;);\n\n//引入banner.less文件\n@import url(&apos;banner.less&apos;);\n\n//引入footer.less文件\n@import url(&apos;footer.less&apos;);\n</code></pre><p>编译index.less文件，编译结果如下，可以看到三个less文件中的代码都编译成了CSS文件，并且放在一起<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170326120411756.png\" alt=\"这里写图片描述\"></p>\n<h1 id=\"在网页中直接使用Less\"><a href=\"#在网页中直接使用Less\" class=\"headerlink\" title=\"在网页中直接使用Less\"></a>在网页中直接使用Less</h1><h2 id=\"为什么要在网页中直接使用Less\"><a href=\"#为什么要在网页中直接使用Less\" class=\"headerlink\" title=\"为什么要在网页中直接使用Less\"></a>为什么要在网页中直接使用Less</h2><p>如果按照上面介绍的方法使用Less，需要每次使用Less写完一点样式后就将Less编译成CSS文件，再在html中引入CSS，总是重复这个操作大大降低了开发效率，为了解决这个问题，可以通过一点简单的配置，可以实现在网页中直接运行</p>\n<h2 id=\"配置在网页中直接运行Less的环境\"><a href=\"#配置在网页中直接运行Less的环境\" class=\"headerlink\" title=\"配置在网页中直接运行Less的环境\"></a>配置在网页中直接运行Less的环境</h2><p><strong>下载less.js-2.5.1文件</strong><br>通过<a href=\"https://pan.baidu.com/s/1pLM3j6r\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1pLM3j6r</a>下载less.js-2.5.1.zip文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170327105805389.png\" alt=\"这里写图片描述\"></p>\n<p><strong>创建项目</strong><br>创建一个项目。并且将less.js-2.5.1.zip解压到项目目录下</p>\n<p><strong>创建Less文件</strong><br>在项目目录下创建一个main.less文件，并在向main.less中添加如下代码</p>\n<pre><code>//创建变量，用于设置body的宽度\n@width: 1024px;\n\n//创建变量，用于设置body的高度\n@height: 1000px;\n\n//创建变量，用于设置body的背景颜色\n@backgroundColor: #f5f5f5;\n\nbody {\n  width: @width;\n  height: @height;\n  margin: 0;\n  padding: 50px;\n  background-color: @backgroundColor;\n}\n</code></pre><p><strong>创建HTML文件</strong><br>在项目目录下创建一个index.html文件，并且向index.html中添加如下代码</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;title&gt;测试网页中直接使用less文件的效果&lt;/title&gt;\n  &lt;link rel=&quot;stylesheet/less&quot; href=&quot;main.less&quot;&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;script src=&quot;less.js-2.5.1\\dist\\less.min.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre><p><strong>运行项目</strong><br>使用HTTP请求的方式在浏览器中运行index.html文件，WebStrom中点击运行按钮后会自动以HTTP请求的方式在浏览器中运行index.html文件，此时查看console控制台，当console控制台中展示下面的信息，表示项目运行成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170327110802691.png\" alt=\"这里写图片描述\"></p>\n<p><strong>查看元素信息</strong><br>在Elements模块下可以看到为body元素设置了CSS样式，表示Less文件在网页中运行成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170327111130924.png\" alt=\"这里写图片描述\"></p>\n<h2 id=\"特别说明\"><a href=\"#特别说明\" class=\"headerlink\" title=\"特别说明\"></a>特别说明</h2><p>这种方法只能用于开发测试中，开发完成后需要将Less编译成CSS</p>\n<h2 id=\"使用Less做的一个小项目\"><a href=\"#使用Less做的一个小项目\" class=\"headerlink\" title=\"使用Less做的一个小项目\"></a>使用Less做的一个小项目</h2><p>使用Less实现博雅互动首页 <a href=\"https://github.com/meishadevs/boyaa\" target=\"_blank\" rel=\"noopener\">https://github.com/meishadevs/boyaa</a></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://less.bootcss.com/\" target=\"_blank\" rel=\"noopener\">Less快速入门</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/\">使用Less</a>】</p>\n</blockquote>"},{"title":"使用NVM安装Node.js","date":"2017-03-10T16:00:00.000Z","_content":"## 为什么使用NVM安装Node.js\n方便管理Node.js的版本，使用NVM可以很轻松的实现不同Node.js版本之间的切换。\n<!--more-->\n\n## 需要准备的工具\n在[https://pan.baidu.com/s/1gfxajPT](https://pan.baidu.com/s/1gfxajPT)中下载NVM安装包，通过我提供的地址下载的NVM安装包中包含了Node.js，不需要再下载Node.js\n\n##  安装步骤\n**1.下载NVM安装包**\n将NVM安装包下载下来后放在一个没有空格的全英文路径下，我将NVM放在F:\\develop下面\n![](http://oq3pg8pg4.bkt.clouddn.com/20170311184329294.png)  \n\n**2.解压NVM.zip文件 **\n将nvm.zip文件解压到当前目录下\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170311222822917.png)\n\n**3.打开nvm文件夹**\n打开nvm文件夹后，可以看到nvm文件夹中有如下图所示的文件\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170311224908864.png)\n\n**4.建立settings.txt文件**\n在nvm文件夹下新建一个settings.txt文件，并且在settings.txt文件中添加下图所示的内容\n**内容介绍:**\n **root: F:\\develop\\nvm** nvm所在的目录\n **path: F:\\develop\\nodejs** node.js所在的目录\n **arch: 64 ** 当前的操作系统是64位**(诺操作系统是32位此处arch的值应该设为32)**\n **proxy: none** 设置代理服务器，此处不需要设置代理服务器，所以设为none\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313214811350.png)\n\n**5.配置环境变量**\n在环境变量中创建下面的环境变量\n\n\tnvm所在的目录\n\tNVM_HOME = F:\\develop\\nvm \n\t\n\tNode.js所在的目录\n\tNVM_SYMLINK = F:\\develop\\nodejs\n\n将这两个环境变量添加到path中\n\n\t%NVM_HOME%;%NVM_SYMLINK%;\n\n**6.判断nvm环境变量是否配置成功**\n打开命令行窗口，在命令行窗口中输入`nvm`命令，当命令行窗口中显示下图中的提示信息，表示nvm环境变量配置成功\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313221236424.png)\n\n**7.在命令行窗口中显示NVM中的Node.js**\n打开命令行窗口，并且输入`nvm ls`命令，命令的执行结果如下图所示，其中图中的5.6.0和4.3.0表示nvm中存在的Node.js的版本\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313223355075.png)\n\n**8.使用Node.js**\n在命令行中输入`nvm use 5.6.0`表示使用版本为5.6.0的Node.js\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313223835156.png)\n\n**9.查看当前正在使用的Node.js的版本**\n输入`nvm ls`命令可以查看当前正在使用的Node.js的版本，星号在那个版本号上就表示当前正在使用的是那个版本的Node.js\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313224246892.png)\n\n**10.查看Node.js是否安装**\n打开文件管理器，转到F:\\develop目录下，可以看到目录中多了一个node.js的快捷方式，表示node.js已经安装成功，其中这个目录是由第4步中的path值设置而来的\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313224921253.png)\n\n**11.检测Node.js的版本**\n在命令行中执行`node -v`命令可以查看当前Node.js的版本\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313225245161.png)\n\n**12.在命令行中运行javaScript代码**\n打开命令行，输入`node`命令会进入一个命令行版的代码编辑界面，在命令行中输入一段简单的代码，当输入`console.log(\"Hello World !\");`并且按下回车后，就可以通过Node.js在命令行中执行这段简单的js代码\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313230627715.png)\n\n**13.在命令行中运行本地文件中的js代码**\n在F:\\develop下创建一个hello.js文件并且在文件中添加一段简单的代码`console.log(\"hello worl !\");`,打开命令行，并且进入F:\\develop目录下，执行`node hello.js`命令便可以运行hello.js中的代码\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313231516719.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用NVM安装Node.js](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/)】","source":"_posts/使用NVM安装Node.js.md","raw":"---\ntitle: 使用NVM安装Node.js\ndate: 2017-03-11\ncategories:\n\t- NVM\n\t- Node.js\ntags:\n\t- NVM\n\t- Node.js\n---\n## 为什么使用NVM安装Node.js\n方便管理Node.js的版本，使用NVM可以很轻松的实现不同Node.js版本之间的切换。\n<!--more-->\n\n## 需要准备的工具\n在[https://pan.baidu.com/s/1gfxajPT](https://pan.baidu.com/s/1gfxajPT)中下载NVM安装包，通过我提供的地址下载的NVM安装包中包含了Node.js，不需要再下载Node.js\n\n##  安装步骤\n**1.下载NVM安装包**\n将NVM安装包下载下来后放在一个没有空格的全英文路径下，我将NVM放在F:\\develop下面\n![](http://oq3pg8pg4.bkt.clouddn.com/20170311184329294.png)  \n\n**2.解压NVM.zip文件 **\n将nvm.zip文件解压到当前目录下\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170311222822917.png)\n\n**3.打开nvm文件夹**\n打开nvm文件夹后，可以看到nvm文件夹中有如下图所示的文件\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170311224908864.png)\n\n**4.建立settings.txt文件**\n在nvm文件夹下新建一个settings.txt文件，并且在settings.txt文件中添加下图所示的内容\n**内容介绍:**\n **root: F:\\develop\\nvm** nvm所在的目录\n **path: F:\\develop\\nodejs** node.js所在的目录\n **arch: 64 ** 当前的操作系统是64位**(诺操作系统是32位此处arch的值应该设为32)**\n **proxy: none** 设置代理服务器，此处不需要设置代理服务器，所以设为none\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313214811350.png)\n\n**5.配置环境变量**\n在环境变量中创建下面的环境变量\n\n\tnvm所在的目录\n\tNVM_HOME = F:\\develop\\nvm \n\t\n\tNode.js所在的目录\n\tNVM_SYMLINK = F:\\develop\\nodejs\n\n将这两个环境变量添加到path中\n\n\t%NVM_HOME%;%NVM_SYMLINK%;\n\n**6.判断nvm环境变量是否配置成功**\n打开命令行窗口，在命令行窗口中输入`nvm`命令，当命令行窗口中显示下图中的提示信息，表示nvm环境变量配置成功\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313221236424.png)\n\n**7.在命令行窗口中显示NVM中的Node.js**\n打开命令行窗口，并且输入`nvm ls`命令，命令的执行结果如下图所示，其中图中的5.6.0和4.3.0表示nvm中存在的Node.js的版本\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313223355075.png)\n\n**8.使用Node.js**\n在命令行中输入`nvm use 5.6.0`表示使用版本为5.6.0的Node.js\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313223835156.png)\n\n**9.查看当前正在使用的Node.js的版本**\n输入`nvm ls`命令可以查看当前正在使用的Node.js的版本，星号在那个版本号上就表示当前正在使用的是那个版本的Node.js\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313224246892.png)\n\n**10.查看Node.js是否安装**\n打开文件管理器，转到F:\\develop目录下，可以看到目录中多了一个node.js的快捷方式，表示node.js已经安装成功，其中这个目录是由第4步中的path值设置而来的\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313224921253.png)\n\n**11.检测Node.js的版本**\n在命令行中执行`node -v`命令可以查看当前Node.js的版本\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313225245161.png)\n\n**12.在命令行中运行javaScript代码**\n打开命令行，输入`node`命令会进入一个命令行版的代码编辑界面，在命令行中输入一段简单的代码，当输入`console.log(\"Hello World !\");`并且按下回车后，就可以通过Node.js在命令行中执行这段简单的js代码\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313230627715.png)\n\n**13.在命令行中运行本地文件中的js代码**\n在F:\\develop下创建一个hello.js文件并且在文件中添加一段简单的代码`console.log(\"hello worl !\");`,打开命令行，并且进入F:\\develop目录下，执行`node hello.js`命令便可以运行hello.js中的代码\n![这里写图片描述](http://oq3pg8pg4.bkt.clouddn.com/20170313231516719.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用NVM安装Node.js](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/)】","slug":"使用NVM安装Node.js","published":1,"updated":"2018-07-07T02:23:40.292Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000ejc7unwlnzgng","content":"<h2 id=\"为什么使用NVM安装Node-js\"><a href=\"#为什么使用NVM安装Node-js\" class=\"headerlink\" title=\"为什么使用NVM安装Node.js\"></a>为什么使用NVM安装Node.js</h2><p>方便管理Node.js的版本，使用NVM可以很轻松的实现不同Node.js版本之间的切换。<br><a id=\"more\"></a></p>\n<h2 id=\"需要准备的工具\"><a href=\"#需要准备的工具\" class=\"headerlink\" title=\"需要准备的工具\"></a>需要准备的工具</h2><p>在<a href=\"https://pan.baidu.com/s/1gfxajPT\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1gfxajPT</a>中下载NVM安装包，通过我提供的地址下载的NVM安装包中包含了Node.js，不需要再下载Node.js</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><p><strong>1.下载NVM安装包</strong><br>将NVM安装包下载下来后放在一个没有空格的全英文路径下，我将NVM放在F:\\develop下面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170311184329294.png\" alt=\"\">  </p>\n<p><strong>2.解压NVM.zip文件 </strong><br>将nvm.zip文件解压到当前目录下<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170311222822917.png\" alt=\"这里写图片描述\"></p>\n<p><strong>3.打开nvm文件夹</strong><br>打开nvm文件夹后，可以看到nvm文件夹中有如下图所示的文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170311224908864.png\" alt=\"这里写图片描述\"></p>\n<p><strong>4.建立settings.txt文件</strong><br>在nvm文件夹下新建一个settings.txt文件，并且在settings.txt文件中添加下图所示的内容<br><strong>内容介绍:</strong><br> <strong>root: F:\\develop\\nvm</strong> nvm所在的目录<br> <strong>path: F:\\develop\\nodejs</strong> node.js所在的目录<br> <strong>arch: 64 </strong> 当前的操作系统是64位<strong>(诺操作系统是32位此处arch的值应该设为32)</strong><br> <strong>proxy: none</strong> 设置代理服务器，此处不需要设置代理服务器，所以设为none<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313214811350.png\" alt=\"这里写图片描述\"></p>\n<p><strong>5.配置环境变量</strong><br>在环境变量中创建下面的环境变量</p>\n<pre><code>nvm所在的目录\nNVM_HOME = F:\\develop\\nvm \n\nNode.js所在的目录\nNVM_SYMLINK = F:\\develop\\nodejs\n</code></pre><p>将这两个环境变量添加到path中</p>\n<pre><code>%NVM_HOME%;%NVM_SYMLINK%;\n</code></pre><p><strong>6.判断nvm环境变量是否配置成功</strong><br>打开命令行窗口，在命令行窗口中输入<code>nvm</code>命令，当命令行窗口中显示下图中的提示信息，表示nvm环境变量配置成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313221236424.png\" alt=\"这里写图片描述\"></p>\n<p><strong>7.在命令行窗口中显示NVM中的Node.js</strong><br>打开命令行窗口，并且输入<code>nvm ls</code>命令，命令的执行结果如下图所示，其中图中的5.6.0和4.3.0表示nvm中存在的Node.js的版本<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313223355075.png\" alt=\"这里写图片描述\"></p>\n<p><strong>8.使用Node.js</strong><br>在命令行中输入<code>nvm use 5.6.0</code>表示使用版本为5.6.0的Node.js<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313223835156.png\" alt=\"这里写图片描述\"></p>\n<p><strong>9.查看当前正在使用的Node.js的版本</strong><br>输入<code>nvm ls</code>命令可以查看当前正在使用的Node.js的版本，星号在那个版本号上就表示当前正在使用的是那个版本的Node.js<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313224246892.png\" alt=\"这里写图片描述\"></p>\n<p><strong>10.查看Node.js是否安装</strong><br>打开文件管理器，转到F:\\develop目录下，可以看到目录中多了一个node.js的快捷方式，表示node.js已经安装成功，其中这个目录是由第4步中的path值设置而来的<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313224921253.png\" alt=\"这里写图片描述\"></p>\n<p><strong>11.检测Node.js的版本</strong><br>在命令行中执行<code>node -v</code>命令可以查看当前Node.js的版本<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313225245161.png\" alt=\"这里写图片描述\"></p>\n<p><strong>12.在命令行中运行javaScript代码</strong><br>打开命令行，输入<code>node</code>命令会进入一个命令行版的代码编辑界面，在命令行中输入一段简单的代码，当输入<code>console.log(&quot;Hello World !&quot;);</code>并且按下回车后，就可以通过Node.js在命令行中执行这段简单的js代码<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313230627715.png\" alt=\"这里写图片描述\"></p>\n<p><strong>13.在命令行中运行本地文件中的js代码</strong><br>在F:\\develop下创建一个hello.js文件并且在文件中添加一段简单的代码<code>console.log(&quot;hello worl !&quot;);</code>,打开命令行，并且进入F:\\develop目录下，执行<code>node hello.js</code>命令便可以运行hello.js中的代码<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313231516719.png\" alt=\"这里写图片描述\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/\">使用NVM安装Node.js</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<h2 id=\"为什么使用NVM安装Node-js\"><a href=\"#为什么使用NVM安装Node-js\" class=\"headerlink\" title=\"为什么使用NVM安装Node.js\"></a>为什么使用NVM安装Node.js</h2><p>方便管理Node.js的版本，使用NVM可以很轻松的实现不同Node.js版本之间的切换。<br>","more":"</p>\n<h2 id=\"需要准备的工具\"><a href=\"#需要准备的工具\" class=\"headerlink\" title=\"需要准备的工具\"></a>需要准备的工具</h2><p>在<a href=\"https://pan.baidu.com/s/1gfxajPT\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1gfxajPT</a>中下载NVM安装包，通过我提供的地址下载的NVM安装包中包含了Node.js，不需要再下载Node.js</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><p><strong>1.下载NVM安装包</strong><br>将NVM安装包下载下来后放在一个没有空格的全英文路径下，我将NVM放在F:\\develop下面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170311184329294.png\" alt=\"\">  </p>\n<p><strong>2.解压NVM.zip文件 </strong><br>将nvm.zip文件解压到当前目录下<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170311222822917.png\" alt=\"这里写图片描述\"></p>\n<p><strong>3.打开nvm文件夹</strong><br>打开nvm文件夹后，可以看到nvm文件夹中有如下图所示的文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170311224908864.png\" alt=\"这里写图片描述\"></p>\n<p><strong>4.建立settings.txt文件</strong><br>在nvm文件夹下新建一个settings.txt文件，并且在settings.txt文件中添加下图所示的内容<br><strong>内容介绍:</strong><br> <strong>root: F:\\develop\\nvm</strong> nvm所在的目录<br> <strong>path: F:\\develop\\nodejs</strong> node.js所在的目录<br> <strong>arch: 64 </strong> 当前的操作系统是64位<strong>(诺操作系统是32位此处arch的值应该设为32)</strong><br> <strong>proxy: none</strong> 设置代理服务器，此处不需要设置代理服务器，所以设为none<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313214811350.png\" alt=\"这里写图片描述\"></p>\n<p><strong>5.配置环境变量</strong><br>在环境变量中创建下面的环境变量</p>\n<pre><code>nvm所在的目录\nNVM_HOME = F:\\develop\\nvm \n\nNode.js所在的目录\nNVM_SYMLINK = F:\\develop\\nodejs\n</code></pre><p>将这两个环境变量添加到path中</p>\n<pre><code>%NVM_HOME%;%NVM_SYMLINK%;\n</code></pre><p><strong>6.判断nvm环境变量是否配置成功</strong><br>打开命令行窗口，在命令行窗口中输入<code>nvm</code>命令，当命令行窗口中显示下图中的提示信息，表示nvm环境变量配置成功<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313221236424.png\" alt=\"这里写图片描述\"></p>\n<p><strong>7.在命令行窗口中显示NVM中的Node.js</strong><br>打开命令行窗口，并且输入<code>nvm ls</code>命令，命令的执行结果如下图所示，其中图中的5.6.0和4.3.0表示nvm中存在的Node.js的版本<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313223355075.png\" alt=\"这里写图片描述\"></p>\n<p><strong>8.使用Node.js</strong><br>在命令行中输入<code>nvm use 5.6.0</code>表示使用版本为5.6.0的Node.js<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313223835156.png\" alt=\"这里写图片描述\"></p>\n<p><strong>9.查看当前正在使用的Node.js的版本</strong><br>输入<code>nvm ls</code>命令可以查看当前正在使用的Node.js的版本，星号在那个版本号上就表示当前正在使用的是那个版本的Node.js<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313224246892.png\" alt=\"这里写图片描述\"></p>\n<p><strong>10.查看Node.js是否安装</strong><br>打开文件管理器，转到F:\\develop目录下，可以看到目录中多了一个node.js的快捷方式，表示node.js已经安装成功，其中这个目录是由第4步中的path值设置而来的<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313224921253.png\" alt=\"这里写图片描述\"></p>\n<p><strong>11.检测Node.js的版本</strong><br>在命令行中执行<code>node -v</code>命令可以查看当前Node.js的版本<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313225245161.png\" alt=\"这里写图片描述\"></p>\n<p><strong>12.在命令行中运行javaScript代码</strong><br>打开命令行，输入<code>node</code>命令会进入一个命令行版的代码编辑界面，在命令行中输入一段简单的代码，当输入<code>console.log(&quot;Hello World !&quot;);</code>并且按下回车后，就可以通过Node.js在命令行中执行这段简单的js代码<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313230627715.png\" alt=\"这里写图片描述\"></p>\n<p><strong>13.在命令行中运行本地文件中的js代码</strong><br>在F:\\develop下创建一个hello.js文件并且在文件中添加一段简单的代码<code>console.log(&quot;hello worl !&quot;);</code>,打开命令行，并且进入F:\\develop目录下，执行<code>node hello.js</code>命令便可以运行hello.js中的代码<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170313231516719.png\" alt=\"这里写图片描述\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/\">使用NVM安装Node.js</a>】</p>\n</blockquote>"},{"title":"使用Vue.js时遇到的问题及解决方法","date":"2017-12-01T08:14:29.000Z","_content":"\n#### 在执行 npm run dev 命令的时候出现8080端口被占用\n在任务管理器中手动结束所有Node.exe进程\n<!-- more -->\n\n#### 使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性\n当使用v-for指令遍历组件时，需要在组件上添加一个key属性\n\n\t<router-link to=\"/select\" v-for=\"content in item.classContent\" :key=\"content.id\">{{ content }}</router-link>\n\n#### 使用Head标签命名组件报错\n不能使用标签名作为组件名\n\n#### 执行npm run build命令构建Vue.js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误\n进入项目目录下的`config/index.js`文件中的`build`对象下的`assetsPublicPath`属性，将`assetsPublicPath`属性的值由 `assetsPublicPath: '/'`，改成 `assetsPublicPath: './'`\n\n#### 执行npm run build命令构建Vue项目后，生成的CSS文件中background url()图片路径错误\n\n需要单独为 css 配置 publicPath   \nExtractTextWebpackPlugin 提供了一个 options.publicPath 的 api，可以为css单独配置 publicPath \n\n对于用 vue-cli 生成的项目，dist 目录结构如下：\n\n\tdist\n\t├── index.html\n\t└── static\n    ├── css\n    ├── img\n    └── js\n\n经常遇见的问题是 css 中 background-image 的相对路径不能正确的引用到 img 文件夹中。但是用 ExtractTextWebpackPlugin 的 publicPath 配置就可以。\n\n更改 `build/utils.js` 文件中 ExtractTextPlugin 插件的options 配置：\n\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        publicPath: '../../', //注意配置这一部分,根据目录结构自由调整\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n\n最后附上 [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin/blob/master/README.md) 的文档。\n\n#### 修改props属性中的值报错\n\n不能在组件中直接修改props属性中的值，可以通过引入一个中间变量修改prps中的值\n\n\t export default {\n\t\n\t    //获取从父组件中传递过来的数据\n\t    props: [\"curPage\"],\n\t\n\t    data() {\n\t      return {\n\t\n\t        //引入一个中间变量\n\t        temp: 0\n\t      };\n\t    },\n\t\n\t    //初始化\n\t    mounted() {\n\t      this.$nextTick(() => {\n\t\n\t        //将从父组件中传递过来的数据赋值给中间变量\n\t        this.temp = this.curPage;\n\t\n\t        //修改中间变量的值\n\t        this.temp = 123;\n\t      });\n\t    }\n\t  };\n\n#### 关于Vue中的 render: h => h(App) 具体是什么含义？\n大概的翻译下：\n`render: h => h(App)` 是下面内容的缩写：\n\n\trender: function (createElement) {\n\t    return createElement(App);\n\t}\n\n进一步缩写为(ES6 语法)：\n\n\trender (createElement) {\n\t    return createElement(App);\n\t}\n\n再进一步缩写为：\n\n\trender (h){\n\t    return h(App);\n\t}\n\n按照 ES6 箭头函数的写法，就得到了：\n\n\trender: h => h(App);\n\n#### 使用ES6中的属性简写\n\n\tnew Vue({\n\t  router\n\t});\n\n是下面代码的简写形式\n\n\tnew Vue({\n\t  router: router\n\t});\n\n#### Do not use built-in or reserved HTML elements as component id: select\n使用标签名select作为组件的name属性值(name: \"select\")时在console中产生的警告，不能将标签名设为组件的name属性\n\n#### 参考链接\n- [生成的css文件中background url()图片路径问题](https://github.com/vuejs/vue-loader/issues/481#)  \n- [关于Vue中的 render: h => h(App) 具体是什么含义？](https://segmentfault.com/q/1010000007130348)\n- [ECMAScript 6入门](http://es6.ruanyifeng.com/)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用Vue.js时遇到的问题及解决方法](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Vue-js%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/)】","source":"_posts/使用Vue-js时遇到的问题及解决方法.md","raw":"---\ntitle: 使用Vue.js时遇到的问题及解决方法\ncategories:\n  - Vue.js\ntags:\n  - Vue.js\n\ndate: 2017-12-01 16:14:29\n---\n\n#### 在执行 npm run dev 命令的时候出现8080端口被占用\n在任务管理器中手动结束所有Node.exe进程\n<!-- more -->\n\n#### 使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性\n当使用v-for指令遍历组件时，需要在组件上添加一个key属性\n\n\t<router-link to=\"/select\" v-for=\"content in item.classContent\" :key=\"content.id\">{{ content }}</router-link>\n\n#### 使用Head标签命名组件报错\n不能使用标签名作为组件名\n\n#### 执行npm run build命令构建Vue.js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误\n进入项目目录下的`config/index.js`文件中的`build`对象下的`assetsPublicPath`属性，将`assetsPublicPath`属性的值由 `assetsPublicPath: '/'`，改成 `assetsPublicPath: './'`\n\n#### 执行npm run build命令构建Vue项目后，生成的CSS文件中background url()图片路径错误\n\n需要单独为 css 配置 publicPath   \nExtractTextWebpackPlugin 提供了一个 options.publicPath 的 api，可以为css单独配置 publicPath \n\n对于用 vue-cli 生成的项目，dist 目录结构如下：\n\n\tdist\n\t├── index.html\n\t└── static\n    ├── css\n    ├── img\n    └── js\n\n经常遇见的问题是 css 中 background-image 的相对路径不能正确的引用到 img 文件夹中。但是用 ExtractTextWebpackPlugin 的 publicPath 配置就可以。\n\n更改 `build/utils.js` 文件中 ExtractTextPlugin 插件的options 配置：\n\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        publicPath: '../../', //注意配置这一部分,根据目录结构自由调整\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n\n最后附上 [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin/blob/master/README.md) 的文档。\n\n#### 修改props属性中的值报错\n\n不能在组件中直接修改props属性中的值，可以通过引入一个中间变量修改prps中的值\n\n\t export default {\n\t\n\t    //获取从父组件中传递过来的数据\n\t    props: [\"curPage\"],\n\t\n\t    data() {\n\t      return {\n\t\n\t        //引入一个中间变量\n\t        temp: 0\n\t      };\n\t    },\n\t\n\t    //初始化\n\t    mounted() {\n\t      this.$nextTick(() => {\n\t\n\t        //将从父组件中传递过来的数据赋值给中间变量\n\t        this.temp = this.curPage;\n\t\n\t        //修改中间变量的值\n\t        this.temp = 123;\n\t      });\n\t    }\n\t  };\n\n#### 关于Vue中的 render: h => h(App) 具体是什么含义？\n大概的翻译下：\n`render: h => h(App)` 是下面内容的缩写：\n\n\trender: function (createElement) {\n\t    return createElement(App);\n\t}\n\n进一步缩写为(ES6 语法)：\n\n\trender (createElement) {\n\t    return createElement(App);\n\t}\n\n再进一步缩写为：\n\n\trender (h){\n\t    return h(App);\n\t}\n\n按照 ES6 箭头函数的写法，就得到了：\n\n\trender: h => h(App);\n\n#### 使用ES6中的属性简写\n\n\tnew Vue({\n\t  router\n\t});\n\n是下面代码的简写形式\n\n\tnew Vue({\n\t  router: router\n\t});\n\n#### Do not use built-in or reserved HTML elements as component id: select\n使用标签名select作为组件的name属性值(name: \"select\")时在console中产生的警告，不能将标签名设为组件的name属性\n\n#### 参考链接\n- [生成的css文件中background url()图片路径问题](https://github.com/vuejs/vue-loader/issues/481#)  \n- [关于Vue中的 render: h => h(App) 具体是什么含义？](https://segmentfault.com/q/1010000007130348)\n- [ECMAScript 6入门](http://es6.ruanyifeng.com/)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用Vue.js时遇到的问题及解决方法](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Vue-js%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/)】","slug":"使用Vue-js时遇到的问题及解决方法","published":1,"updated":"2018-07-07T02:23:40.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000fjc7u5w3p46va","content":"<h4 id=\"在执行-npm-run-dev-命令的时候出现8080端口被占用\"><a href=\"#在执行-npm-run-dev-命令的时候出现8080端口被占用\" class=\"headerlink\" title=\"在执行 npm run dev 命令的时候出现8080端口被占用\"></a>在执行 npm run dev 命令的时候出现8080端口被占用</h4><p>在任务管理器中手动结束所有Node.exe进程<br><a id=\"more\"></a></p>\n<h4 id=\"使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性\"><a href=\"#使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性\" class=\"headerlink\" title=\"使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性\"></a>使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性</h4><p>当使用v-for指令遍历组件时，需要在组件上添加一个key属性</p>\n<pre><code>&lt;router-link to=&quot;/select&quot; v-for=&quot;content in item.classContent&quot; :key=&quot;content.id&quot;&gt;{{ content }}&lt;/router-link&gt;\n</code></pre><h4 id=\"使用Head标签命名组件报错\"><a href=\"#使用Head标签命名组件报错\" class=\"headerlink\" title=\"使用Head标签命名组件报错\"></a>使用Head标签命名组件报错</h4><p>不能使用标签名作为组件名</p>\n<h4 id=\"执行npm-run-build命令构建Vue-js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误\"><a href=\"#执行npm-run-build命令构建Vue-js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误\" class=\"headerlink\" title=\"执行npm run build命令构建Vue.js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误\"></a>执行npm run build命令构建Vue.js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误</h4><p>进入项目目录下的<code>config/index.js</code>文件中的<code>build</code>对象下的<code>assetsPublicPath</code>属性，将<code>assetsPublicPath</code>属性的值由 <code>assetsPublicPath: &#39;/&#39;</code>，改成 <code>assetsPublicPath: &#39;./&#39;</code></p>\n<h4 id=\"执行npm-run-build命令构建Vue项目后，生成的CSS文件中background-url-图片路径错误\"><a href=\"#执行npm-run-build命令构建Vue项目后，生成的CSS文件中background-url-图片路径错误\" class=\"headerlink\" title=\"执行npm run build命令构建Vue项目后，生成的CSS文件中background url()图片路径错误\"></a>执行npm run build命令构建Vue项目后，生成的CSS文件中background url()图片路径错误</h4><p>需要单独为 css 配置 publicPath<br>ExtractTextWebpackPlugin 提供了一个 options.publicPath 的 api，可以为css单独配置 publicPath </p>\n<p>对于用 vue-cli 生成的项目，dist 目录结构如下：</p>\n<pre><code>dist\n├── index.html\n└── static\n├── css\n├── img\n└── js\n</code></pre><p>经常遇见的问题是 css 中 background-image 的相对路径不能正确的引用到 img 文件夹中。但是用 ExtractTextWebpackPlugin 的 publicPath 配置就可以。</p>\n<p>更改 <code>build/utils.js</code> 文件中 ExtractTextPlugin 插件的options 配置：</p>\n<pre><code>if (options.extract) {\n  return ExtractTextPlugin.extract({\n    use: loaders,\n    publicPath: &apos;../../&apos;, //注意配置这一部分,根据目录结构自由调整\n    fallback: &apos;vue-style-loader&apos;\n  })\n} else {\n  return [&apos;vue-style-loader&apos;].concat(loaders)\n}\n</code></pre><p>最后附上 <a href=\"https://github.com/webpack-contrib/extract-text-webpack-plugin/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">extract-text-webpack-plugin</a> 的文档。</p>\n<h4 id=\"修改props属性中的值报错\"><a href=\"#修改props属性中的值报错\" class=\"headerlink\" title=\"修改props属性中的值报错\"></a>修改props属性中的值报错</h4><p>不能在组件中直接修改props属性中的值，可以通过引入一个中间变量修改prps中的值</p>\n<pre><code>export default {\n\n   //获取从父组件中传递过来的数据\n   props: [&quot;curPage&quot;],\n\n   data() {\n     return {\n\n       //引入一个中间变量\n       temp: 0\n     };\n   },\n\n   //初始化\n   mounted() {\n     this.$nextTick(() =&gt; {\n\n       //将从父组件中传递过来的数据赋值给中间变量\n       this.temp = this.curPage;\n\n       //修改中间变量的值\n       this.temp = 123;\n     });\n   }\n };\n</code></pre><h4 id=\"关于Vue中的-render-h-gt-h-App-具体是什么含义？\"><a href=\"#关于Vue中的-render-h-gt-h-App-具体是什么含义？\" class=\"headerlink\" title=\"关于Vue中的 render: h =&gt; h(App) 具体是什么含义？\"></a>关于Vue中的 render: h =&gt; h(App) 具体是什么含义？</h4><p>大概的翻译下：<br><code>render: h =&gt; h(App)</code> 是下面内容的缩写：</p>\n<pre><code>render: function (createElement) {\n    return createElement(App);\n}\n</code></pre><p>进一步缩写为(ES6 语法)：</p>\n<pre><code>render (createElement) {\n    return createElement(App);\n}\n</code></pre><p>再进一步缩写为：</p>\n<pre><code>render (h){\n    return h(App);\n}\n</code></pre><p>按照 ES6 箭头函数的写法，就得到了：</p>\n<pre><code>render: h =&gt; h(App);\n</code></pre><h4 id=\"使用ES6中的属性简写\"><a href=\"#使用ES6中的属性简写\" class=\"headerlink\" title=\"使用ES6中的属性简写\"></a>使用ES6中的属性简写</h4><pre><code>new Vue({\n  router\n});\n</code></pre><p>是下面代码的简写形式</p>\n<pre><code>new Vue({\n  router: router\n});\n</code></pre><h4 id=\"Do-not-use-built-in-or-reserved-HTML-elements-as-component-id-select\"><a href=\"#Do-not-use-built-in-or-reserved-HTML-elements-as-component-id-select\" class=\"headerlink\" title=\"Do not use built-in or reserved HTML elements as component id: select\"></a>Do not use built-in or reserved HTML elements as component id: select</h4><p>使用标签名select作为组件的name属性值(name: “select”)时在console中产生的警告，不能将标签名设为组件的name属性</p>\n<h4 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><ul>\n<li><a href=\"https://github.com/vuejs/vue-loader/issues/481#\" target=\"_blank\" rel=\"noopener\">生成的css文件中background url()图片路径问题</a>  </li>\n<li><a href=\"https://segmentfault.com/q/1010000007130348\" target=\"_blank\" rel=\"noopener\">关于Vue中的 render: h =&gt; h(App) 具体是什么含义？</a></li>\n<li><a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">ECMAScript 6入门</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Vue-js%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/\">使用Vue.js时遇到的问题及解决方法</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<h4 id=\"在执行-npm-run-dev-命令的时候出现8080端口被占用\"><a href=\"#在执行-npm-run-dev-命令的时候出现8080端口被占用\" class=\"headerlink\" title=\"在执行 npm run dev 命令的时候出现8080端口被占用\"></a>在执行 npm run dev 命令的时候出现8080端口被占用</h4><p>在任务管理器中手动结束所有Node.exe进程<br>","more":"</p>\n<h4 id=\"使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性\"><a href=\"#使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性\" class=\"headerlink\" title=\"使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性\"></a>使用v-for指令遍历组件时产生警告，提示需要在组件上增加一个key属性</h4><p>当使用v-for指令遍历组件时，需要在组件上添加一个key属性</p>\n<pre><code>&lt;router-link to=&quot;/select&quot; v-for=&quot;content in item.classContent&quot; :key=&quot;content.id&quot;&gt;{{ content }}&lt;/router-link&gt;\n</code></pre><h4 id=\"使用Head标签命名组件报错\"><a href=\"#使用Head标签命名组件报错\" class=\"headerlink\" title=\"使用Head标签命名组件报错\"></a>使用Head标签命名组件报错</h4><p>不能使用标签名作为组件名</p>\n<h4 id=\"执行npm-run-build命令构建Vue-js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误\"><a href=\"#执行npm-run-build命令构建Vue-js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误\" class=\"headerlink\" title=\"执行npm run build命令构建Vue.js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误\"></a>执行npm run build命令构建Vue.js项目后，在浏览器中打开生成的HTML文件，网站资源文件的路径错误</h4><p>进入项目目录下的<code>config/index.js</code>文件中的<code>build</code>对象下的<code>assetsPublicPath</code>属性，将<code>assetsPublicPath</code>属性的值由 <code>assetsPublicPath: &#39;/&#39;</code>，改成 <code>assetsPublicPath: &#39;./&#39;</code></p>\n<h4 id=\"执行npm-run-build命令构建Vue项目后，生成的CSS文件中background-url-图片路径错误\"><a href=\"#执行npm-run-build命令构建Vue项目后，生成的CSS文件中background-url-图片路径错误\" class=\"headerlink\" title=\"执行npm run build命令构建Vue项目后，生成的CSS文件中background url()图片路径错误\"></a>执行npm run build命令构建Vue项目后，生成的CSS文件中background url()图片路径错误</h4><p>需要单独为 css 配置 publicPath<br>ExtractTextWebpackPlugin 提供了一个 options.publicPath 的 api，可以为css单独配置 publicPath </p>\n<p>对于用 vue-cli 生成的项目，dist 目录结构如下：</p>\n<pre><code>dist\n├── index.html\n└── static\n├── css\n├── img\n└── js\n</code></pre><p>经常遇见的问题是 css 中 background-image 的相对路径不能正确的引用到 img 文件夹中。但是用 ExtractTextWebpackPlugin 的 publicPath 配置就可以。</p>\n<p>更改 <code>build/utils.js</code> 文件中 ExtractTextPlugin 插件的options 配置：</p>\n<pre><code>if (options.extract) {\n  return ExtractTextPlugin.extract({\n    use: loaders,\n    publicPath: &apos;../../&apos;, //注意配置这一部分,根据目录结构自由调整\n    fallback: &apos;vue-style-loader&apos;\n  })\n} else {\n  return [&apos;vue-style-loader&apos;].concat(loaders)\n}\n</code></pre><p>最后附上 <a href=\"https://github.com/webpack-contrib/extract-text-webpack-plugin/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">extract-text-webpack-plugin</a> 的文档。</p>\n<h4 id=\"修改props属性中的值报错\"><a href=\"#修改props属性中的值报错\" class=\"headerlink\" title=\"修改props属性中的值报错\"></a>修改props属性中的值报错</h4><p>不能在组件中直接修改props属性中的值，可以通过引入一个中间变量修改prps中的值</p>\n<pre><code>export default {\n\n   //获取从父组件中传递过来的数据\n   props: [&quot;curPage&quot;],\n\n   data() {\n     return {\n\n       //引入一个中间变量\n       temp: 0\n     };\n   },\n\n   //初始化\n   mounted() {\n     this.$nextTick(() =&gt; {\n\n       //将从父组件中传递过来的数据赋值给中间变量\n       this.temp = this.curPage;\n\n       //修改中间变量的值\n       this.temp = 123;\n     });\n   }\n };\n</code></pre><h4 id=\"关于Vue中的-render-h-gt-h-App-具体是什么含义？\"><a href=\"#关于Vue中的-render-h-gt-h-App-具体是什么含义？\" class=\"headerlink\" title=\"关于Vue中的 render: h =&gt; h(App) 具体是什么含义？\"></a>关于Vue中的 render: h =&gt; h(App) 具体是什么含义？</h4><p>大概的翻译下：<br><code>render: h =&gt; h(App)</code> 是下面内容的缩写：</p>\n<pre><code>render: function (createElement) {\n    return createElement(App);\n}\n</code></pre><p>进一步缩写为(ES6 语法)：</p>\n<pre><code>render (createElement) {\n    return createElement(App);\n}\n</code></pre><p>再进一步缩写为：</p>\n<pre><code>render (h){\n    return h(App);\n}\n</code></pre><p>按照 ES6 箭头函数的写法，就得到了：</p>\n<pre><code>render: h =&gt; h(App);\n</code></pre><h4 id=\"使用ES6中的属性简写\"><a href=\"#使用ES6中的属性简写\" class=\"headerlink\" title=\"使用ES6中的属性简写\"></a>使用ES6中的属性简写</h4><pre><code>new Vue({\n  router\n});\n</code></pre><p>是下面代码的简写形式</p>\n<pre><code>new Vue({\n  router: router\n});\n</code></pre><h4 id=\"Do-not-use-built-in-or-reserved-HTML-elements-as-component-id-select\"><a href=\"#Do-not-use-built-in-or-reserved-HTML-elements-as-component-id-select\" class=\"headerlink\" title=\"Do not use built-in or reserved HTML elements as component id: select\"></a>Do not use built-in or reserved HTML elements as component id: select</h4><p>使用标签名select作为组件的name属性值(name: “select”)时在console中产生的警告，不能将标签名设为组件的name属性</p>\n<h4 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><ul>\n<li><a href=\"https://github.com/vuejs/vue-loader/issues/481#\" target=\"_blank\" rel=\"noopener\">生成的css文件中background url()图片路径问题</a>  </li>\n<li><a href=\"https://segmentfault.com/q/1010000007130348\" target=\"_blank\" rel=\"noopener\">关于Vue中的 render: h =&gt; h(App) 具体是什么含义？</a></li>\n<li><a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">ECMAScript 6入门</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Vue-js%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/\">使用Vue.js时遇到的问题及解决方法</a>】</p>\n</blockquote>"},{"title":"使用background-size引发的思考","date":"2017-10-24T02:39:05.000Z","_content":"\n昨天在一个前端交流群里一个成员提出了一个非常有趣的问题`background-size: 50%`是什么意思与`background-size: 50% 50%`到底有什么区别呢，这个问题在群里引起了一番激烈的讨论，我也尝试分析一下\n<!--more-->\n\n### background-size: 50%是什么意思\n查阅[W3C](http://www.w3school.com.cn/index.html)上对[background-size](http://www.w3school.com.cn/cssref/pr_background-size.asp)的介绍后可知**background-size用于设置背景图片的宽度和高度，当给background-size属性的值设为百分比时，表示以父元素的百分比来设置背景图像的宽度和高度，如果只设置一个值，则第二个值会被设置为 \"auto\"**，通过这段[W3C](http://www.w3school.com.cn/index.html)上的介绍可知`background-size: 50%`是`background-size: 50% auto`的简写形式\n\n### 猜想background-size: 50% 与 background-size: 50% 50% 的区别\n通过前面的介绍可知`background-size: 50%`是`background-size: 50% auto`的简写形式，我曾天真的以为`background-size: 50% auto`与`background-size: 50% 50%`表示的是一个意思都是表示背景图片的宽度为父元素宽度的50%，背景图片的高度为父元素高度的50%，通过测试发现我被打脸了，最后得出的结论是`background-size: 50% 50%`表示的是背景图片的宽度为父元素宽度的50%，背景图片的高度为父元素高度的50%没错，`background-size: 50% auto`表示背景图片的宽度为父元素宽度的50%，背景图片的高度是根据背景图片的宽度与高度的比值计算得来的\n\n### 计算设置了background-size: 50% 50%属性后背景图片的宽度和高度\n下图是为背景图片设置了`background-size: 50% 50%`后运行在浏览器上的效果，为了比较直观，我在图片上标记了一些数值，[点击此处查看代码](http://jsbin.com/lejekuj/edit?html,output)\n![](http://oq3pg8pg4.bkt.clouddn.com/pic2.png)\n通过上图可知  \n父元素的宽度 = 500px  \n父元素的高度 = 400px  \n背景图片的宽度 = 父元素的宽度 X 50% = 500px X 50% = 250px  \n背景图片的高度 = 父元素的高度 X 50% = 400px X 50% = 200px\n\n### 计算设置了background-size: 50% 属性后背景图片的宽度和高度\n下图是为背景图片设置了`background-size: 50%`后运行在浏览器上的效果，为了比较直观，我在图片上标记了一些数值，[点击此处查看代码](http://jsbin.com/nifodib/edit?html,output)\n![](http://oq3pg8pg4.bkt.clouddn.com/pic3.png)  \n通过上图可知  \n父元素的宽度 = 500px  \n父元素的高度 = 400px  \n图片文件的宽度与高度的比值 = 图片文件的宽度 / 图片文件的高度 = 128px / 96px = 1.33  \n背景图片的宽度 = 父元素的宽度 X 50% = 500px X 50% = 250px  \n背景图片的高度 = 背景图片的宽度 / 图片文件的宽度与高度的比值 = 250px / 1.33 =  187.97px\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用background-size引发的思考](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8background-size%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/)】","source":"_posts/使用background-size引发的思考.md","raw":"---\ntitle: 使用background-size引发的思考\ncategories:\n  - CSS\ntags:\n  - CSS\ndate: 2017-10-24 10:39:05\n---\n\n昨天在一个前端交流群里一个成员提出了一个非常有趣的问题`background-size: 50%`是什么意思与`background-size: 50% 50%`到底有什么区别呢，这个问题在群里引起了一番激烈的讨论，我也尝试分析一下\n<!--more-->\n\n### background-size: 50%是什么意思\n查阅[W3C](http://www.w3school.com.cn/index.html)上对[background-size](http://www.w3school.com.cn/cssref/pr_background-size.asp)的介绍后可知**background-size用于设置背景图片的宽度和高度，当给background-size属性的值设为百分比时，表示以父元素的百分比来设置背景图像的宽度和高度，如果只设置一个值，则第二个值会被设置为 \"auto\"**，通过这段[W3C](http://www.w3school.com.cn/index.html)上的介绍可知`background-size: 50%`是`background-size: 50% auto`的简写形式\n\n### 猜想background-size: 50% 与 background-size: 50% 50% 的区别\n通过前面的介绍可知`background-size: 50%`是`background-size: 50% auto`的简写形式，我曾天真的以为`background-size: 50% auto`与`background-size: 50% 50%`表示的是一个意思都是表示背景图片的宽度为父元素宽度的50%，背景图片的高度为父元素高度的50%，通过测试发现我被打脸了，最后得出的结论是`background-size: 50% 50%`表示的是背景图片的宽度为父元素宽度的50%，背景图片的高度为父元素高度的50%没错，`background-size: 50% auto`表示背景图片的宽度为父元素宽度的50%，背景图片的高度是根据背景图片的宽度与高度的比值计算得来的\n\n### 计算设置了background-size: 50% 50%属性后背景图片的宽度和高度\n下图是为背景图片设置了`background-size: 50% 50%`后运行在浏览器上的效果，为了比较直观，我在图片上标记了一些数值，[点击此处查看代码](http://jsbin.com/lejekuj/edit?html,output)\n![](http://oq3pg8pg4.bkt.clouddn.com/pic2.png)\n通过上图可知  \n父元素的宽度 = 500px  \n父元素的高度 = 400px  \n背景图片的宽度 = 父元素的宽度 X 50% = 500px X 50% = 250px  \n背景图片的高度 = 父元素的高度 X 50% = 400px X 50% = 200px\n\n### 计算设置了background-size: 50% 属性后背景图片的宽度和高度\n下图是为背景图片设置了`background-size: 50%`后运行在浏览器上的效果，为了比较直观，我在图片上标记了一些数值，[点击此处查看代码](http://jsbin.com/nifodib/edit?html,output)\n![](http://oq3pg8pg4.bkt.clouddn.com/pic3.png)  \n通过上图可知  \n父元素的宽度 = 500px  \n父元素的高度 = 400px  \n图片文件的宽度与高度的比值 = 图片文件的宽度 / 图片文件的高度 = 128px / 96px = 1.33  \n背景图片的宽度 = 父元素的宽度 X 50% = 500px X 50% = 250px  \n背景图片的高度 = 背景图片的宽度 / 图片文件的宽度与高度的比值 = 250px / 1.33 =  187.97px\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用background-size引发的思考](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8background-size%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/)】","slug":"使用background-size引发的思考","published":1,"updated":"2018-07-07T02:23:40.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000gjc7ua3uh43eg","content":"<p>昨天在一个前端交流群里一个成员提出了一个非常有趣的问题<code>background-size: 50%</code>是什么意思与<code>background-size: 50% 50%</code>到底有什么区别呢，这个问题在群里引起了一番激烈的讨论，我也尝试分析一下<br><a id=\"more\"></a></p>\n<h3 id=\"background-size-50-是什么意思\"><a href=\"#background-size-50-是什么意思\" class=\"headerlink\" title=\"background-size: 50%是什么意思\"></a>background-size: 50%是什么意思</h3><p>查阅<a href=\"http://www.w3school.com.cn/index.html\" target=\"_blank\" rel=\"noopener\">W3C</a>上对<a href=\"http://www.w3school.com.cn/cssref/pr_background-size.asp\" target=\"_blank\" rel=\"noopener\">background-size</a>的介绍后可知<strong>background-size用于设置背景图片的宽度和高度，当给background-size属性的值设为百分比时，表示以父元素的百分比来设置背景图像的宽度和高度，如果只设置一个值，则第二个值会被设置为 “auto”</strong>，通过这段<a href=\"http://www.w3school.com.cn/index.html\" target=\"_blank\" rel=\"noopener\">W3C</a>上的介绍可知<code>background-size: 50%</code>是<code>background-size: 50% auto</code>的简写形式</p>\n<h3 id=\"猜想background-size-50-与-background-size-50-50-的区别\"><a href=\"#猜想background-size-50-与-background-size-50-50-的区别\" class=\"headerlink\" title=\"猜想background-size: 50% 与 background-size: 50% 50% 的区别\"></a>猜想background-size: 50% 与 background-size: 50% 50% 的区别</h3><p>通过前面的介绍可知<code>background-size: 50%</code>是<code>background-size: 50% auto</code>的简写形式，我曾天真的以为<code>background-size: 50% auto</code>与<code>background-size: 50% 50%</code>表示的是一个意思都是表示背景图片的宽度为父元素宽度的50%，背景图片的高度为父元素高度的50%，通过测试发现我被打脸了，最后得出的结论是<code>background-size: 50% 50%</code>表示的是背景图片的宽度为父元素宽度的50%，背景图片的高度为父元素高度的50%没错，<code>background-size: 50% auto</code>表示背景图片的宽度为父元素宽度的50%，背景图片的高度是根据背景图片的宽度与高度的比值计算得来的</p>\n<h3 id=\"计算设置了background-size-50-50-属性后背景图片的宽度和高度\"><a href=\"#计算设置了background-size-50-50-属性后背景图片的宽度和高度\" class=\"headerlink\" title=\"计算设置了background-size: 50% 50%属性后背景图片的宽度和高度\"></a>计算设置了background-size: 50% 50%属性后背景图片的宽度和高度</h3><p>下图是为背景图片设置了<code>background-size: 50% 50%</code>后运行在浏览器上的效果，为了比较直观，我在图片上标记了一些数值，<a href=\"http://jsbin.com/lejekuj/edit?html,output\" target=\"_blank\" rel=\"noopener\">点击此处查看代码</a><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/pic2.png\" alt=\"\"><br>通过上图可知<br>父元素的宽度 = 500px<br>父元素的高度 = 400px<br>背景图片的宽度 = 父元素的宽度 X 50% = 500px X 50% = 250px<br>背景图片的高度 = 父元素的高度 X 50% = 400px X 50% = 200px</p>\n<h3 id=\"计算设置了background-size-50-属性后背景图片的宽度和高度\"><a href=\"#计算设置了background-size-50-属性后背景图片的宽度和高度\" class=\"headerlink\" title=\"计算设置了background-size: 50% 属性后背景图片的宽度和高度\"></a>计算设置了background-size: 50% 属性后背景图片的宽度和高度</h3><p>下图是为背景图片设置了<code>background-size: 50%</code>后运行在浏览器上的效果，为了比较直观，我在图片上标记了一些数值，<a href=\"http://jsbin.com/nifodib/edit?html,output\" target=\"_blank\" rel=\"noopener\">点击此处查看代码</a><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/pic3.png\" alt=\"\"><br>通过上图可知<br>父元素的宽度 = 500px<br>父元素的高度 = 400px<br>图片文件的宽度与高度的比值 = 图片文件的宽度 / 图片文件的高度 = 128px / 96px = 1.33<br>背景图片的宽度 = 父元素的宽度 X 50% = 500px X 50% = 250px<br>背景图片的高度 = 背景图片的宽度 / 图片文件的宽度与高度的比值 = 250px / 1.33 =  187.97px</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8background-size%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/\">使用background-size引发的思考</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>昨天在一个前端交流群里一个成员提出了一个非常有趣的问题<code>background-size: 50%</code>是什么意思与<code>background-size: 50% 50%</code>到底有什么区别呢，这个问题在群里引起了一番激烈的讨论，我也尝试分析一下<br>","more":"</p>\n<h3 id=\"background-size-50-是什么意思\"><a href=\"#background-size-50-是什么意思\" class=\"headerlink\" title=\"background-size: 50%是什么意思\"></a>background-size: 50%是什么意思</h3><p>查阅<a href=\"http://www.w3school.com.cn/index.html\" target=\"_blank\" rel=\"noopener\">W3C</a>上对<a href=\"http://www.w3school.com.cn/cssref/pr_background-size.asp\" target=\"_blank\" rel=\"noopener\">background-size</a>的介绍后可知<strong>background-size用于设置背景图片的宽度和高度，当给background-size属性的值设为百分比时，表示以父元素的百分比来设置背景图像的宽度和高度，如果只设置一个值，则第二个值会被设置为 “auto”</strong>，通过这段<a href=\"http://www.w3school.com.cn/index.html\" target=\"_blank\" rel=\"noopener\">W3C</a>上的介绍可知<code>background-size: 50%</code>是<code>background-size: 50% auto</code>的简写形式</p>\n<h3 id=\"猜想background-size-50-与-background-size-50-50-的区别\"><a href=\"#猜想background-size-50-与-background-size-50-50-的区别\" class=\"headerlink\" title=\"猜想background-size: 50% 与 background-size: 50% 50% 的区别\"></a>猜想background-size: 50% 与 background-size: 50% 50% 的区别</h3><p>通过前面的介绍可知<code>background-size: 50%</code>是<code>background-size: 50% auto</code>的简写形式，我曾天真的以为<code>background-size: 50% auto</code>与<code>background-size: 50% 50%</code>表示的是一个意思都是表示背景图片的宽度为父元素宽度的50%，背景图片的高度为父元素高度的50%，通过测试发现我被打脸了，最后得出的结论是<code>background-size: 50% 50%</code>表示的是背景图片的宽度为父元素宽度的50%，背景图片的高度为父元素高度的50%没错，<code>background-size: 50% auto</code>表示背景图片的宽度为父元素宽度的50%，背景图片的高度是根据背景图片的宽度与高度的比值计算得来的</p>\n<h3 id=\"计算设置了background-size-50-50-属性后背景图片的宽度和高度\"><a href=\"#计算设置了background-size-50-50-属性后背景图片的宽度和高度\" class=\"headerlink\" title=\"计算设置了background-size: 50% 50%属性后背景图片的宽度和高度\"></a>计算设置了background-size: 50% 50%属性后背景图片的宽度和高度</h3><p>下图是为背景图片设置了<code>background-size: 50% 50%</code>后运行在浏览器上的效果，为了比较直观，我在图片上标记了一些数值，<a href=\"http://jsbin.com/lejekuj/edit?html,output\" target=\"_blank\" rel=\"noopener\">点击此处查看代码</a><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/pic2.png\" alt=\"\"><br>通过上图可知<br>父元素的宽度 = 500px<br>父元素的高度 = 400px<br>背景图片的宽度 = 父元素的宽度 X 50% = 500px X 50% = 250px<br>背景图片的高度 = 父元素的高度 X 50% = 400px X 50% = 200px</p>\n<h3 id=\"计算设置了background-size-50-属性后背景图片的宽度和高度\"><a href=\"#计算设置了background-size-50-属性后背景图片的宽度和高度\" class=\"headerlink\" title=\"计算设置了background-size: 50% 属性后背景图片的宽度和高度\"></a>计算设置了background-size: 50% 属性后背景图片的宽度和高度</h3><p>下图是为背景图片设置了<code>background-size: 50%</code>后运行在浏览器上的效果，为了比较直观，我在图片上标记了一些数值，<a href=\"http://jsbin.com/nifodib/edit?html,output\" target=\"_blank\" rel=\"noopener\">点击此处查看代码</a><br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/pic3.png\" alt=\"\"><br>通过上图可知<br>父元素的宽度 = 500px<br>父元素的高度 = 400px<br>图片文件的宽度与高度的比值 = 图片文件的宽度 / 图片文件的高度 = 128px / 96px = 1.33<br>背景图片的宽度 = 父元素的宽度 X 50% = 500px X 50% = 250px<br>背景图片的高度 = 背景图片的宽度 / 图片文件的宽度与高度的比值 = 250px / 1.33 =  187.97px</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8background-size%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/\">使用background-size引发的思考</a>】</p>\n</blockquote>"},{"title":"使用新浪云部署网站","date":"2017-03-06T16:00:00.000Z","_content":"\n当我们做好一个网站后，肯定是第一时间想让周围的朋友和同学看看，顺便可以炫耀一下自己的技术 ，要部署网站肯定要用到服务器，而为了部署一个几M的网站去买一个服务器，有点不划算，幸运的是新浪云提供了一个比较好的解决方案。\n<!--more-->\n\n## 下面将详细的介绍使用新浪云部署网站的过程\n\n**第一步：**输入[http://www.sinacloud.com/](http://www.sinacloud.com/)进入新浪云官网  \n\n**第二步：**进入新浪云官网后，首先需要一个新浪云账号，如果你有新浪微博可以直接使用新浪微登录新浪云，没有新浪微博的可以在新浪云官网注册一个新浪云账号\n![](http://oq3pg8pg4.bkt.clouddn.com/20161224104219130.png)\n\n注册好新浪云账号 后会进入下图所示的用户中心界面\n![](http://oq3pg8pg4.bkt.clouddn.com/20161224133828862.png)\n\n**第三步：**单击云应用SEA下的立即创建\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225194615092.png)\n\n点击立即创建后会跳转到下图所示的云应用SEA创建界面\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225195629095.png)\n\n**第四步：**单击创建新应用按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225195913268.png)\n\n单击创建应用后会自动进入下图所示的应用创建界面\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225201200923.png)\n\n**第五步：**补全应用界面的信息，并且单击创建应用\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225201916652.png)\n\n**第六步：**单击创建应用按钮会进入下图所示的应用管理界面\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225202141435.png)\n\n**第七步：**选择存储与CDN服务下的Storage\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225202539077.png)\n\n**第八步：**选择创建Bucket\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225202725641.png)\n\n**第九步：**设置Bucket的名称，设置完成后单击创建\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225203020434.png)\n\n此时可以看到在Bucket界面上创建好了一个名称为boyaa的Bucket，这正是我们刚才创建的Bucket\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225203302676.png)\n\n**第十步：**选单击boyaa可以看到里面什么也没有，因为我们刚刚创建好，并没有向boyaa中添加任何文件\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225204144304.png)\n\n可以看到界面上也出现了一个上传文件的按钮，虽然可以通过单击这个按钮将网站的文件上传到boyaa中，但是直接通过单击这个上传文件按钮上传网站会出现一些莫名其妙的bug，新浪云也不推荐这样做，而是提供了一个第三方工具Cyberduck，并且提供了Cyberduck的下载地址和详细的说明文档  \n**Cyberduck的下载地址：**[https://cyberduck.io/](https://cyberduck.io/)  \n**说明文档的地址：**[http://www.sinacloud.com/doc/sae/php/storage.html#ftp](http://www.sinacloud.com/doc/sae/php/storage.html#ftp)\n\n安装好Cyberduck就可以使用Cyberduck上传网站到刚刚创建好的Bucket中\n\n## 使用Cyberduck上传网站\n**第一步：**打开Cyberduck\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225205223713.png)\n\n**第二步：**选择新建链接\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225205439090.png)\n\n**第三步：**选在弹出的链接服务器对话框中输入以下信息：\n**服务器类型:**Swift(OpenStack Storage)  \n**服务器URL：**auth.sinas3.com  \n**服务器的端口号：**443  \n**Access Key：**输入框中输入正确的Access Key  \n**Secret key：**输入框中输入正确的Secret Key\n\n**注：**选其中的Access Key和Secret key可以通过进入刚刚创建的应用的总览页面中获得\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225211050849.png)\n\n**第四步：**选输入完链接服务器的信息后，单击链接按钮，链接到服务器，单击完链接按钮后会弹出下图所示的Tenant Nam输入界面，不用输入Tenant Nam直接单击Login按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225211524006.png)\n\n**第五步：**等到使用Cyberduck链接上服务器后，Cyberduck会跳转到下图所示的界面，在界面中可以看到我们刚刚创建好的一个Bucket项目boyaa\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225211943197.png)\n\n**第六步：**单击上传按钮，并且选择需要上传的网站  \n![](http://oq3pg8pg4.bkt.clouddn.com/20161225212604606.png)\n\n当上传窗口按照下图所示在不断刷新上传进度，表示正在上传网站文件\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225213226624.png)\n\n当上传窗口提示文件已上传完成，表示网站成功的上传到了Bucket项目boyaa上\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225213432474.png)\n\n此时在Cyberduck上可以看到网站文件已经成功的上传到了boyaa文件夹中\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225213717604.png)\n\n**第七步：**单转到网页上的boyaa页面，可以看到，网站文件已经成功的上传到了boyaa上\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225214004049.png)\n\n现在可以成功访问网站了，表示网站成功的部署到了新浪云上\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225214552631.png)\n\n我的这个网站的域名为[http://mywebapp1-boyaa.stor.sinaapp.com/index.html](http://mywebapp1-boyaa.stor.sinaapp.com/index.html)\n网通过观察网站的域名可知部署在新浪云上的网站的域名格式为:\nhttp:// + 应用名称 + “-“ + Bucket名称 + “sinaapp.com” + 网站的html文件名称\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用新浪云部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)】","source":"_posts/使用新浪云部署网站.md","raw":"---\ntitle: 使用新浪云部署网站\ndate: 2017-03-07\ncategories:\n\t- 部署\ntags:\n\t- 部署\n---\n\n当我们做好一个网站后，肯定是第一时间想让周围的朋友和同学看看，顺便可以炫耀一下自己的技术 ，要部署网站肯定要用到服务器，而为了部署一个几M的网站去买一个服务器，有点不划算，幸运的是新浪云提供了一个比较好的解决方案。\n<!--more-->\n\n## 下面将详细的介绍使用新浪云部署网站的过程\n\n**第一步：**输入[http://www.sinacloud.com/](http://www.sinacloud.com/)进入新浪云官网  \n\n**第二步：**进入新浪云官网后，首先需要一个新浪云账号，如果你有新浪微博可以直接使用新浪微登录新浪云，没有新浪微博的可以在新浪云官网注册一个新浪云账号\n![](http://oq3pg8pg4.bkt.clouddn.com/20161224104219130.png)\n\n注册好新浪云账号 后会进入下图所示的用户中心界面\n![](http://oq3pg8pg4.bkt.clouddn.com/20161224133828862.png)\n\n**第三步：**单击云应用SEA下的立即创建\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225194615092.png)\n\n点击立即创建后会跳转到下图所示的云应用SEA创建界面\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225195629095.png)\n\n**第四步：**单击创建新应用按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225195913268.png)\n\n单击创建应用后会自动进入下图所示的应用创建界面\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225201200923.png)\n\n**第五步：**补全应用界面的信息，并且单击创建应用\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225201916652.png)\n\n**第六步：**单击创建应用按钮会进入下图所示的应用管理界面\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225202141435.png)\n\n**第七步：**选择存储与CDN服务下的Storage\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225202539077.png)\n\n**第八步：**选择创建Bucket\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225202725641.png)\n\n**第九步：**设置Bucket的名称，设置完成后单击创建\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225203020434.png)\n\n此时可以看到在Bucket界面上创建好了一个名称为boyaa的Bucket，这正是我们刚才创建的Bucket\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225203302676.png)\n\n**第十步：**选单击boyaa可以看到里面什么也没有，因为我们刚刚创建好，并没有向boyaa中添加任何文件\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225204144304.png)\n\n可以看到界面上也出现了一个上传文件的按钮，虽然可以通过单击这个按钮将网站的文件上传到boyaa中，但是直接通过单击这个上传文件按钮上传网站会出现一些莫名其妙的bug，新浪云也不推荐这样做，而是提供了一个第三方工具Cyberduck，并且提供了Cyberduck的下载地址和详细的说明文档  \n**Cyberduck的下载地址：**[https://cyberduck.io/](https://cyberduck.io/)  \n**说明文档的地址：**[http://www.sinacloud.com/doc/sae/php/storage.html#ftp](http://www.sinacloud.com/doc/sae/php/storage.html#ftp)\n\n安装好Cyberduck就可以使用Cyberduck上传网站到刚刚创建好的Bucket中\n\n## 使用Cyberduck上传网站\n**第一步：**打开Cyberduck\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225205223713.png)\n\n**第二步：**选择新建链接\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225205439090.png)\n\n**第三步：**选在弹出的链接服务器对话框中输入以下信息：\n**服务器类型:**Swift(OpenStack Storage)  \n**服务器URL：**auth.sinas3.com  \n**服务器的端口号：**443  \n**Access Key：**输入框中输入正确的Access Key  \n**Secret key：**输入框中输入正确的Secret Key\n\n**注：**选其中的Access Key和Secret key可以通过进入刚刚创建的应用的总览页面中获得\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225211050849.png)\n\n**第四步：**选输入完链接服务器的信息后，单击链接按钮，链接到服务器，单击完链接按钮后会弹出下图所示的Tenant Nam输入界面，不用输入Tenant Nam直接单击Login按钮\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225211524006.png)\n\n**第五步：**等到使用Cyberduck链接上服务器后，Cyberduck会跳转到下图所示的界面，在界面中可以看到我们刚刚创建好的一个Bucket项目boyaa\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225211943197.png)\n\n**第六步：**单击上传按钮，并且选择需要上传的网站  \n![](http://oq3pg8pg4.bkt.clouddn.com/20161225212604606.png)\n\n当上传窗口按照下图所示在不断刷新上传进度，表示正在上传网站文件\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225213226624.png)\n\n当上传窗口提示文件已上传完成，表示网站成功的上传到了Bucket项目boyaa上\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225213432474.png)\n\n此时在Cyberduck上可以看到网站文件已经成功的上传到了boyaa文件夹中\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225213717604.png)\n\n**第七步：**单转到网页上的boyaa页面，可以看到，网站文件已经成功的上传到了boyaa上\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225214004049.png)\n\n现在可以成功访问网站了，表示网站成功的部署到了新浪云上\n![](http://oq3pg8pg4.bkt.clouddn.com/20161225214552631.png)\n\n我的这个网站的域名为[http://mywebapp1-boyaa.stor.sinaapp.com/index.html](http://mywebapp1-boyaa.stor.sinaapp.com/index.html)\n网通过观察网站的域名可知部署在新浪云上的网站的域名格式为:\nhttp:// + 应用名称 + “-“ + Bucket名称 + “sinaapp.com” + 网站的html文件名称\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[使用新浪云部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)】","slug":"使用新浪云部署网站","published":1,"updated":"2018-07-07T02:23:40.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000hjc7uibxjdt11","content":"<p>当我们做好一个网站后，肯定是第一时间想让周围的朋友和同学看看，顺便可以炫耀一下自己的技术 ，要部署网站肯定要用到服务器，而为了部署一个几M的网站去买一个服务器，有点不划算，幸运的是新浪云提供了一个比较好的解决方案。<br><a id=\"more\"></a></p>\n<h2 id=\"下面将详细的介绍使用新浪云部署网站的过程\"><a href=\"#下面将详细的介绍使用新浪云部署网站的过程\" class=\"headerlink\" title=\"下面将详细的介绍使用新浪云部署网站的过程\"></a>下面将详细的介绍使用新浪云部署网站的过程</h2><p><strong>第一步：</strong>输入<a href=\"http://www.sinacloud.com/\" target=\"_blank\" rel=\"noopener\">http://www.sinacloud.com/</a>进入新浪云官网  </p>\n<p><strong>第二步：</strong>进入新浪云官网后，首先需要一个新浪云账号，如果你有新浪微博可以直接使用新浪微登录新浪云，没有新浪微博的可以在新浪云官网注册一个新浪云账号<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161224104219130.png\" alt=\"\"></p>\n<p>注册好新浪云账号 后会进入下图所示的用户中心界面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161224133828862.png\" alt=\"\"></p>\n<p><strong>第三步：</strong>单击云应用SEA下的立即创建<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225194615092.png\" alt=\"\"></p>\n<p>点击立即创建后会跳转到下图所示的云应用SEA创建界面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225195629095.png\" alt=\"\"></p>\n<p><strong>第四步：</strong>单击创建新应用按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225195913268.png\" alt=\"\"></p>\n<p>单击创建应用后会自动进入下图所示的应用创建界面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225201200923.png\" alt=\"\"></p>\n<p><strong>第五步：</strong>补全应用界面的信息，并且单击创建应用<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225201916652.png\" alt=\"\"></p>\n<p><strong>第六步：</strong>单击创建应用按钮会进入下图所示的应用管理界面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225202141435.png\" alt=\"\"></p>\n<p><strong>第七步：</strong>选择存储与CDN服务下的Storage<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225202539077.png\" alt=\"\"></p>\n<p><strong>第八步：</strong>选择创建Bucket<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225202725641.png\" alt=\"\"></p>\n<p><strong>第九步：</strong>设置Bucket的名称，设置完成后单击创建<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225203020434.png\" alt=\"\"></p>\n<p>此时可以看到在Bucket界面上创建好了一个名称为boyaa的Bucket，这正是我们刚才创建的Bucket<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225203302676.png\" alt=\"\"></p>\n<p><strong>第十步：</strong>选单击boyaa可以看到里面什么也没有，因为我们刚刚创建好，并没有向boyaa中添加任何文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225204144304.png\" alt=\"\"></p>\n<p>可以看到界面上也出现了一个上传文件的按钮，虽然可以通过单击这个按钮将网站的文件上传到boyaa中，但是直接通过单击这个上传文件按钮上传网站会出现一些莫名其妙的bug，新浪云也不推荐这样做，而是提供了一个第三方工具Cyberduck，并且提供了Cyberduck的下载地址和详细的说明文档<br><strong>Cyberduck的下载地址：</strong><a href=\"https://cyberduck.io/\" target=\"_blank\" rel=\"noopener\">https://cyberduck.io/</a><br><strong>说明文档的地址：</strong><a href=\"http://www.sinacloud.com/doc/sae/php/storage.html#ftp\" target=\"_blank\" rel=\"noopener\">http://www.sinacloud.com/doc/sae/php/storage.html#ftp</a></p>\n<p>安装好Cyberduck就可以使用Cyberduck上传网站到刚刚创建好的Bucket中</p>\n<h2 id=\"使用Cyberduck上传网站\"><a href=\"#使用Cyberduck上传网站\" class=\"headerlink\" title=\"使用Cyberduck上传网站\"></a>使用Cyberduck上传网站</h2><p><strong>第一步：</strong>打开Cyberduck<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225205223713.png\" alt=\"\"></p>\n<p><strong>第二步：</strong>选择新建链接<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225205439090.png\" alt=\"\"></p>\n<p><strong>第三步：</strong>选在弹出的链接服务器对话框中输入以下信息：<br><strong>服务器类型:</strong>Swift(OpenStack Storage)<br><strong>服务器URL：</strong>auth.sinas3.com<br><strong>服务器的端口号：</strong>443<br><strong>Access Key：</strong>输入框中输入正确的Access Key<br><strong>Secret key：</strong>输入框中输入正确的Secret Key</p>\n<p><strong>注：</strong>选其中的Access Key和Secret key可以通过进入刚刚创建的应用的总览页面中获得<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225211050849.png\" alt=\"\"></p>\n<p><strong>第四步：</strong>选输入完链接服务器的信息后，单击链接按钮，链接到服务器，单击完链接按钮后会弹出下图所示的Tenant Nam输入界面，不用输入Tenant Nam直接单击Login按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225211524006.png\" alt=\"\"></p>\n<p><strong>第五步：</strong>等到使用Cyberduck链接上服务器后，Cyberduck会跳转到下图所示的界面，在界面中可以看到我们刚刚创建好的一个Bucket项目boyaa<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225211943197.png\" alt=\"\"></p>\n<p><strong>第六步：</strong>单击上传按钮，并且选择需要上传的网站<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225212604606.png\" alt=\"\"></p>\n<p>当上传窗口按照下图所示在不断刷新上传进度，表示正在上传网站文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225213226624.png\" alt=\"\"></p>\n<p>当上传窗口提示文件已上传完成，表示网站成功的上传到了Bucket项目boyaa上<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225213432474.png\" alt=\"\"></p>\n<p>此时在Cyberduck上可以看到网站文件已经成功的上传到了boyaa文件夹中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225213717604.png\" alt=\"\"></p>\n<p><strong>第七步：</strong>单转到网页上的boyaa页面，可以看到，网站文件已经成功的上传到了boyaa上<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225214004049.png\" alt=\"\"></p>\n<p>现在可以成功访问网站了，表示网站成功的部署到了新浪云上<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225214552631.png\" alt=\"\"></p>\n<p>我的这个网站的域名为<a href=\"http://mywebapp1-boyaa.stor.sinaapp.com/index.html\" target=\"_blank\" rel=\"noopener\">http://mywebapp1-boyaa.stor.sinaapp.com/index.html</a><br>网通过观察网站的域名可知部署在新浪云上的网站的域名格式为:<br>http:// + 应用名称 + “-“ + Bucket名称 + “sinaapp.com” + 网站的html文件名称</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">使用新浪云部署网站</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>当我们做好一个网站后，肯定是第一时间想让周围的朋友和同学看看，顺便可以炫耀一下自己的技术 ，要部署网站肯定要用到服务器，而为了部署一个几M的网站去买一个服务器，有点不划算，幸运的是新浪云提供了一个比较好的解决方案。<br>","more":"</p>\n<h2 id=\"下面将详细的介绍使用新浪云部署网站的过程\"><a href=\"#下面将详细的介绍使用新浪云部署网站的过程\" class=\"headerlink\" title=\"下面将详细的介绍使用新浪云部署网站的过程\"></a>下面将详细的介绍使用新浪云部署网站的过程</h2><p><strong>第一步：</strong>输入<a href=\"http://www.sinacloud.com/\" target=\"_blank\" rel=\"noopener\">http://www.sinacloud.com/</a>进入新浪云官网  </p>\n<p><strong>第二步：</strong>进入新浪云官网后，首先需要一个新浪云账号，如果你有新浪微博可以直接使用新浪微登录新浪云，没有新浪微博的可以在新浪云官网注册一个新浪云账号<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161224104219130.png\" alt=\"\"></p>\n<p>注册好新浪云账号 后会进入下图所示的用户中心界面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161224133828862.png\" alt=\"\"></p>\n<p><strong>第三步：</strong>单击云应用SEA下的立即创建<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225194615092.png\" alt=\"\"></p>\n<p>点击立即创建后会跳转到下图所示的云应用SEA创建界面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225195629095.png\" alt=\"\"></p>\n<p><strong>第四步：</strong>单击创建新应用按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225195913268.png\" alt=\"\"></p>\n<p>单击创建应用后会自动进入下图所示的应用创建界面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225201200923.png\" alt=\"\"></p>\n<p><strong>第五步：</strong>补全应用界面的信息，并且单击创建应用<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225201916652.png\" alt=\"\"></p>\n<p><strong>第六步：</strong>单击创建应用按钮会进入下图所示的应用管理界面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225202141435.png\" alt=\"\"></p>\n<p><strong>第七步：</strong>选择存储与CDN服务下的Storage<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225202539077.png\" alt=\"\"></p>\n<p><strong>第八步：</strong>选择创建Bucket<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225202725641.png\" alt=\"\"></p>\n<p><strong>第九步：</strong>设置Bucket的名称，设置完成后单击创建<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225203020434.png\" alt=\"\"></p>\n<p>此时可以看到在Bucket界面上创建好了一个名称为boyaa的Bucket，这正是我们刚才创建的Bucket<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225203302676.png\" alt=\"\"></p>\n<p><strong>第十步：</strong>选单击boyaa可以看到里面什么也没有，因为我们刚刚创建好，并没有向boyaa中添加任何文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225204144304.png\" alt=\"\"></p>\n<p>可以看到界面上也出现了一个上传文件的按钮，虽然可以通过单击这个按钮将网站的文件上传到boyaa中，但是直接通过单击这个上传文件按钮上传网站会出现一些莫名其妙的bug，新浪云也不推荐这样做，而是提供了一个第三方工具Cyberduck，并且提供了Cyberduck的下载地址和详细的说明文档<br><strong>Cyberduck的下载地址：</strong><a href=\"https://cyberduck.io/\" target=\"_blank\" rel=\"noopener\">https://cyberduck.io/</a><br><strong>说明文档的地址：</strong><a href=\"http://www.sinacloud.com/doc/sae/php/storage.html#ftp\" target=\"_blank\" rel=\"noopener\">http://www.sinacloud.com/doc/sae/php/storage.html#ftp</a></p>\n<p>安装好Cyberduck就可以使用Cyberduck上传网站到刚刚创建好的Bucket中</p>\n<h2 id=\"使用Cyberduck上传网站\"><a href=\"#使用Cyberduck上传网站\" class=\"headerlink\" title=\"使用Cyberduck上传网站\"></a>使用Cyberduck上传网站</h2><p><strong>第一步：</strong>打开Cyberduck<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225205223713.png\" alt=\"\"></p>\n<p><strong>第二步：</strong>选择新建链接<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225205439090.png\" alt=\"\"></p>\n<p><strong>第三步：</strong>选在弹出的链接服务器对话框中输入以下信息：<br><strong>服务器类型:</strong>Swift(OpenStack Storage)<br><strong>服务器URL：</strong>auth.sinas3.com<br><strong>服务器的端口号：</strong>443<br><strong>Access Key：</strong>输入框中输入正确的Access Key<br><strong>Secret key：</strong>输入框中输入正确的Secret Key</p>\n<p><strong>注：</strong>选其中的Access Key和Secret key可以通过进入刚刚创建的应用的总览页面中获得<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225211050849.png\" alt=\"\"></p>\n<p><strong>第四步：</strong>选输入完链接服务器的信息后，单击链接按钮，链接到服务器，单击完链接按钮后会弹出下图所示的Tenant Nam输入界面，不用输入Tenant Nam直接单击Login按钮<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225211524006.png\" alt=\"\"></p>\n<p><strong>第五步：</strong>等到使用Cyberduck链接上服务器后，Cyberduck会跳转到下图所示的界面，在界面中可以看到我们刚刚创建好的一个Bucket项目boyaa<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225211943197.png\" alt=\"\"></p>\n<p><strong>第六步：</strong>单击上传按钮，并且选择需要上传的网站<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225212604606.png\" alt=\"\"></p>\n<p>当上传窗口按照下图所示在不断刷新上传进度，表示正在上传网站文件<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225213226624.png\" alt=\"\"></p>\n<p>当上传窗口提示文件已上传完成，表示网站成功的上传到了Bucket项目boyaa上<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225213432474.png\" alt=\"\"></p>\n<p>此时在Cyberduck上可以看到网站文件已经成功的上传到了boyaa文件夹中<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225213717604.png\" alt=\"\"></p>\n<p><strong>第七步：</strong>单转到网页上的boyaa页面，可以看到，网站文件已经成功的上传到了boyaa上<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225214004049.png\" alt=\"\"></p>\n<p>现在可以成功访问网站了，表示网站成功的部署到了新浪云上<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20161225214552631.png\" alt=\"\"></p>\n<p>我的这个网站的域名为<a href=\"http://mywebapp1-boyaa.stor.sinaapp.com/index.html\" target=\"_blank\" rel=\"noopener\">http://mywebapp1-boyaa.stor.sinaapp.com/index.html</a><br>网通过观察网站的域名可知部署在新浪云上的网站的域名格式为:<br>http:// + 应用名称 + “-“ + Bucket名称 + “sinaapp.com” + 网站的html文件名称</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">使用新浪云部署网站</a>】</p>\n</blockquote>"},{"title":"常用的Git命令","date":"2017-04-29T02:18:01.000Z","_content":"\n自己平时总结的一些常用的Git命令\n<!--more-->\n\n#### 获得提交代码的用户名\n\t# --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该用户名，诺不加--global表示只用提交当前项目的代码用该用户名\n\tgit config --global user.name\n\n#### 获得提交代码的邮箱\n\t# --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该邮箱，诺不加--global表示只用提交当前项目的代码用该邮箱\n\tgit config --global user.email\n\n#### 将提交代码的用户名设置为username\n\t# --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该用户名，诺不加--global表示只用提交当前项目的代码用该用户名\n\tgit config --global user.name username\n\n#### 将提交代码的邮箱设置为email\n\t# --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该邮箱，诺不加--global表示只用提交当前项目的代码用该邮箱\n\tgit config --global user.email email\n\n####  下载一个项目和它的整个代码历史到本地  \n\tgit clone url\n\n#### 查看本地分支\n\tgit branch\n\n#### 查看远程分支\n\tgit branch -r\n\n#### 删除本地分支，其中branchName表示本地分支名称\n\tgit branch -d branchName \n\n#### 强制删除本地分支，其中branchName表示本地分支名称\n\tgit branch -D branchName\n\n#### 删除远程分支方法1，其中branchName表示远程分支名称\n\tgit push origin :branchName\n\n#### 删除远程分支方法2，其中branchName表示远程分支名称\n\tgit push origin --delete branchName\n\n#### 切换到master分支\n\tgit checkout master \n\n#### 初始化一个本地Git仓库\n\tgit init\n\n####  查看本地仓库的状态\n\tgit status\n\n#### 将当前目录下的所有文件添加到暂存区\n\tgit add .\n\n#### 将暂存区的文件提交到本地仓库\n\tgit commit -m \"update some data\"\n\n#### 为本地仓库添加一个远程仓库\n\tgit remote add origin https://github.com/username/reponame.git\n\n\n#### 查看所有远程仓库\n\tgit remote -v\n\n#### 将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支\n\tgit push origin master\n\n#### 拉取远程仓库中的master分支上的数据到本地仓库\n\tgit pull origin master\n\n#### 回退到某次提交，其中`bbc272`表示提交的哈希值的前六位\n\tgit reset --hard bbc272\n\n#### 查看提交记录\n\tgit log\n\n#### 合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\n\tgit merge a\n\n#### 查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动\n\tgit diff a.md\n\n#### 强行推送当前分支到远程仓库，其中branchName表示分支名称\n\tgit push origin branchName --force\n\n#### 修改远程仓库的url地址，其中url表示远程创库的地址\n\n\tgit remote set-url origin url\n\n#### 创建一个 a 分支，并且自动切换到 a 分支下\n\t\n\tgit checkout -b a\n\n#### 把远程分支迁到本地顺便切换到该分支，其中 develop 表示分支名\n\n\tgit checkout -b develop origin/develop\n\n#### 解码 base64 编码\n\n\techo base64码 | base64 -d\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[常用的Git命令](http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4/)】","source":"_posts/常用的Git命令.md","raw":"---\ntitle: 常用的Git命令\ncategories:\n  - Git\ntags:\n  - Git \ndate: 2017-04-29 10:18:01\n---\n\n自己平时总结的一些常用的Git命令\n<!--more-->\n\n#### 获得提交代码的用户名\n\t# --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该用户名，诺不加--global表示只用提交当前项目的代码用该用户名\n\tgit config --global user.name\n\n#### 获得提交代码的邮箱\n\t# --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该邮箱，诺不加--global表示只用提交当前项目的代码用该邮箱\n\tgit config --global user.email\n\n#### 将提交代码的用户名设置为username\n\t# --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该用户名，诺不加--global表示只用提交当前项目的代码用该用户名\n\tgit config --global user.name username\n\n#### 将提交代码的邮箱设置为email\n\t# --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该邮箱，诺不加--global表示只用提交当前项目的代码用该邮箱\n\tgit config --global user.email email\n\n####  下载一个项目和它的整个代码历史到本地  \n\tgit clone url\n\n#### 查看本地分支\n\tgit branch\n\n#### 查看远程分支\n\tgit branch -r\n\n#### 删除本地分支，其中branchName表示本地分支名称\n\tgit branch -d branchName \n\n#### 强制删除本地分支，其中branchName表示本地分支名称\n\tgit branch -D branchName\n\n#### 删除远程分支方法1，其中branchName表示远程分支名称\n\tgit push origin :branchName\n\n#### 删除远程分支方法2，其中branchName表示远程分支名称\n\tgit push origin --delete branchName\n\n#### 切换到master分支\n\tgit checkout master \n\n#### 初始化一个本地Git仓库\n\tgit init\n\n####  查看本地仓库的状态\n\tgit status\n\n#### 将当前目录下的所有文件添加到暂存区\n\tgit add .\n\n#### 将暂存区的文件提交到本地仓库\n\tgit commit -m \"update some data\"\n\n#### 为本地仓库添加一个远程仓库\n\tgit remote add origin https://github.com/username/reponame.git\n\n\n#### 查看所有远程仓库\n\tgit remote -v\n\n#### 将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支\n\tgit push origin master\n\n#### 拉取远程仓库中的master分支上的数据到本地仓库\n\tgit pull origin master\n\n#### 回退到某次提交，其中`bbc272`表示提交的哈希值的前六位\n\tgit reset --hard bbc272\n\n#### 查看提交记录\n\tgit log\n\n#### 合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\n\tgit merge a\n\n#### 查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动\n\tgit diff a.md\n\n#### 强行推送当前分支到远程仓库，其中branchName表示分支名称\n\tgit push origin branchName --force\n\n#### 修改远程仓库的url地址，其中url表示远程创库的地址\n\n\tgit remote set-url origin url\n\n#### 创建一个 a 分支，并且自动切换到 a 分支下\n\t\n\tgit checkout -b a\n\n#### 把远程分支迁到本地顺便切换到该分支，其中 develop 表示分支名\n\n\tgit checkout -b develop origin/develop\n\n#### 解码 base64 编码\n\n\techo base64码 | base64 -d\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[常用的Git命令](http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4/)】","slug":"常用的Git命令","published":1,"updated":"2018-07-07T02:23:40.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000ijc7ud3llrd3r","content":"<p>自己平时总结的一些常用的Git命令<br><a id=\"more\"></a></p>\n<h4 id=\"获得提交代码的用户名\"><a href=\"#获得提交代码的用户名\" class=\"headerlink\" title=\"获得提交代码的用户名\"></a>获得提交代码的用户名</h4><pre><code># --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该用户名，诺不加--global表示只用提交当前项目的代码用该用户名\ngit config --global user.name\n</code></pre><h4 id=\"获得提交代码的邮箱\"><a href=\"#获得提交代码的邮箱\" class=\"headerlink\" title=\"获得提交代码的邮箱\"></a>获得提交代码的邮箱</h4><pre><code># --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该邮箱，诺不加--global表示只用提交当前项目的代码用该邮箱\ngit config --global user.email\n</code></pre><h4 id=\"将提交代码的用户名设置为username\"><a href=\"#将提交代码的用户名设置为username\" class=\"headerlink\" title=\"将提交代码的用户名设置为username\"></a>将提交代码的用户名设置为username</h4><pre><code># --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该用户名，诺不加--global表示只用提交当前项目的代码用该用户名\ngit config --global user.name username\n</code></pre><h4 id=\"将提交代码的邮箱设置为email\"><a href=\"#将提交代码的邮箱设置为email\" class=\"headerlink\" title=\"将提交代码的邮箱设置为email\"></a>将提交代码的邮箱设置为email</h4><pre><code># --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该邮箱，诺不加--global表示只用提交当前项目的代码用该邮箱\ngit config --global user.email email\n</code></pre><h4 id=\"下载一个项目和它的整个代码历史到本地\"><a href=\"#下载一个项目和它的整个代码历史到本地\" class=\"headerlink\" title=\"下载一个项目和它的整个代码历史到本地\"></a>下载一个项目和它的整个代码历史到本地</h4><pre><code>git clone url\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h4><pre><code>git branch -r\n</code></pre><h4 id=\"删除本地分支，其中branchName表示本地分支名称\"><a href=\"#删除本地分支，其中branchName表示本地分支名称\" class=\"headerlink\" title=\"删除本地分支，其中branchName表示本地分支名称\"></a>删除本地分支，其中branchName表示本地分支名称</h4><pre><code>git branch -d branchName \n</code></pre><h4 id=\"强制删除本地分支，其中branchName表示本地分支名称\"><a href=\"#强制删除本地分支，其中branchName表示本地分支名称\" class=\"headerlink\" title=\"强制删除本地分支，其中branchName表示本地分支名称\"></a>强制删除本地分支，其中branchName表示本地分支名称</h4><pre><code>git branch -D branchName\n</code></pre><h4 id=\"删除远程分支方法1，其中branchName表示远程分支名称\"><a href=\"#删除远程分支方法1，其中branchName表示远程分支名称\" class=\"headerlink\" title=\"删除远程分支方法1，其中branchName表示远程分支名称\"></a>删除远程分支方法1，其中branchName表示远程分支名称</h4><pre><code>git push origin :branchName\n</code></pre><h4 id=\"删除远程分支方法2，其中branchName表示远程分支名称\"><a href=\"#删除远程分支方法2，其中branchName表示远程分支名称\" class=\"headerlink\" title=\"删除远程分支方法2，其中branchName表示远程分支名称\"></a>删除远程分支方法2，其中branchName表示远程分支名称</h4><pre><code>git push origin --delete branchName\n</code></pre><h4 id=\"切换到master分支\"><a href=\"#切换到master分支\" class=\"headerlink\" title=\"切换到master分支\"></a>切换到master分支</h4><pre><code>git checkout master \n</code></pre><h4 id=\"初始化一个本地Git仓库\"><a href=\"#初始化一个本地Git仓库\" class=\"headerlink\" title=\"初始化一个本地Git仓库\"></a>初始化一个本地Git仓库</h4><pre><code>git init\n</code></pre><h4 id=\"查看本地仓库的状态\"><a href=\"#查看本地仓库的状态\" class=\"headerlink\" title=\"查看本地仓库的状态\"></a>查看本地仓库的状态</h4><pre><code>git status\n</code></pre><h4 id=\"将当前目录下的所有文件添加到暂存区\"><a href=\"#将当前目录下的所有文件添加到暂存区\" class=\"headerlink\" title=\"将当前目录下的所有文件添加到暂存区\"></a>将当前目录下的所有文件添加到暂存区</h4><pre><code>git add .\n</code></pre><h4 id=\"将暂存区的文件提交到本地仓库\"><a href=\"#将暂存区的文件提交到本地仓库\" class=\"headerlink\" title=\"将暂存区的文件提交到本地仓库\"></a>将暂存区的文件提交到本地仓库</h4><pre><code>git commit -m &quot;update some data&quot;\n</code></pre><h4 id=\"为本地仓库添加一个远程仓库\"><a href=\"#为本地仓库添加一个远程仓库\" class=\"headerlink\" title=\"为本地仓库添加一个远程仓库\"></a>为本地仓库添加一个远程仓库</h4><pre><code>git remote add origin https://github.com/username/reponame.git\n</code></pre><h4 id=\"查看所有远程仓库\"><a href=\"#查看所有远程仓库\" class=\"headerlink\" title=\"查看所有远程仓库\"></a>查看所有远程仓库</h4><pre><code>git remote -v\n</code></pre><h4 id=\"将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支\"><a href=\"#将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支\" class=\"headerlink\" title=\"将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支\"></a>将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支</h4><pre><code>git push origin master\n</code></pre><h4 id=\"拉取远程仓库中的master分支上的数据到本地仓库\"><a href=\"#拉取远程仓库中的master分支上的数据到本地仓库\" class=\"headerlink\" title=\"拉取远程仓库中的master分支上的数据到本地仓库\"></a>拉取远程仓库中的master分支上的数据到本地仓库</h4><pre><code>git pull origin master\n</code></pre><h4 id=\"回退到某次提交，其中bbc272表示提交的哈希值的前六位\"><a href=\"#回退到某次提交，其中bbc272表示提交的哈希值的前六位\" class=\"headerlink\" title=\"回退到某次提交，其中bbc272表示提交的哈希值的前六位\"></a>回退到某次提交，其中<code>bbc272</code>表示提交的哈希值的前六位</h4><pre><code>git reset --hard bbc272\n</code></pre><h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><pre><code>git log\n</code></pre><h4 id=\"合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\"><a href=\"#合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\" class=\"headerlink\" title=\"合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\"></a>合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令</h4><pre><code>git merge a\n</code></pre><h4 id=\"查看代码改动，例如执行下面的Git命令可以查看a-md中代码做了哪些改动\"><a href=\"#查看代码改动，例如执行下面的Git命令可以查看a-md中代码做了哪些改动\" class=\"headerlink\" title=\"查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动\"></a>查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动</h4><pre><code>git diff a.md\n</code></pre><h4 id=\"强行推送当前分支到远程仓库，其中branchName表示分支名称\"><a href=\"#强行推送当前分支到远程仓库，其中branchName表示分支名称\" class=\"headerlink\" title=\"强行推送当前分支到远程仓库，其中branchName表示分支名称\"></a>强行推送当前分支到远程仓库，其中branchName表示分支名称</h4><pre><code>git push origin branchName --force\n</code></pre><h4 id=\"修改远程仓库的url地址，其中url表示远程创库的地址\"><a href=\"#修改远程仓库的url地址，其中url表示远程创库的地址\" class=\"headerlink\" title=\"修改远程仓库的url地址，其中url表示远程创库的地址\"></a>修改远程仓库的url地址，其中url表示远程创库的地址</h4><pre><code>git remote set-url origin url\n</code></pre><h4 id=\"创建一个-a-分支，并且自动切换到-a-分支下\"><a href=\"#创建一个-a-分支，并且自动切换到-a-分支下\" class=\"headerlink\" title=\"创建一个 a 分支，并且自动切换到 a 分支下\"></a>创建一个 a 分支，并且自动切换到 a 分支下</h4><pre><code>git checkout -b a\n</code></pre><h4 id=\"把远程分支迁到本地顺便切换到该分支，其中-develop-表示分支名\"><a href=\"#把远程分支迁到本地顺便切换到该分支，其中-develop-表示分支名\" class=\"headerlink\" title=\"把远程分支迁到本地顺便切换到该分支，其中 develop 表示分支名\"></a>把远程分支迁到本地顺便切换到该分支，其中 develop 表示分支名</h4><pre><code>git checkout -b develop origin/develop\n</code></pre><h4 id=\"解码-base64-编码\"><a href=\"#解码-base64-编码\" class=\"headerlink\" title=\"解码 base64 编码\"></a>解码 base64 编码</h4><pre><code>echo base64码 | base64 -d\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4/\">常用的Git命令</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些常用的Git命令<br>","more":"</p>\n<h4 id=\"获得提交代码的用户名\"><a href=\"#获得提交代码的用户名\" class=\"headerlink\" title=\"获得提交代码的用户名\"></a>获得提交代码的用户名</h4><pre><code># --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该用户名，诺不加--global表示只用提交当前项目的代码用该用户名\ngit config --global user.name\n</code></pre><h4 id=\"获得提交代码的邮箱\"><a href=\"#获得提交代码的邮箱\" class=\"headerlink\" title=\"获得提交代码的邮箱\"></a>获得提交代码的邮箱</h4><pre><code># --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该邮箱，诺不加--global表示只用提交当前项目的代码用该邮箱\ngit config --global user.email\n</code></pre><h4 id=\"将提交代码的用户名设置为username\"><a href=\"#将提交代码的用户名设置为username\" class=\"headerlink\" title=\"将提交代码的用户名设置为username\"></a>将提交代码的用户名设置为username</h4><pre><code># --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该用户名，诺不加--global表示只用提交当前项目的代码用该用户名\ngit config --global user.name username\n</code></pre><h4 id=\"将提交代码的邮箱设置为email\"><a href=\"#将提交代码的邮箱设置为email\" class=\"headerlink\" title=\"将提交代码的邮箱设置为email\"></a>将提交代码的邮箱设置为email</h4><pre><code># --global为可选参数，当在命令中使用--glabal表示所有项目提交代码时都用该邮箱，诺不加--global表示只用提交当前项目的代码用该邮箱\ngit config --global user.email email\n</code></pre><h4 id=\"下载一个项目和它的整个代码历史到本地\"><a href=\"#下载一个项目和它的整个代码历史到本地\" class=\"headerlink\" title=\"下载一个项目和它的整个代码历史到本地\"></a>下载一个项目和它的整个代码历史到本地</h4><pre><code>git clone url\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h4><pre><code>git branch -r\n</code></pre><h4 id=\"删除本地分支，其中branchName表示本地分支名称\"><a href=\"#删除本地分支，其中branchName表示本地分支名称\" class=\"headerlink\" title=\"删除本地分支，其中branchName表示本地分支名称\"></a>删除本地分支，其中branchName表示本地分支名称</h4><pre><code>git branch -d branchName \n</code></pre><h4 id=\"强制删除本地分支，其中branchName表示本地分支名称\"><a href=\"#强制删除本地分支，其中branchName表示本地分支名称\" class=\"headerlink\" title=\"强制删除本地分支，其中branchName表示本地分支名称\"></a>强制删除本地分支，其中branchName表示本地分支名称</h4><pre><code>git branch -D branchName\n</code></pre><h4 id=\"删除远程分支方法1，其中branchName表示远程分支名称\"><a href=\"#删除远程分支方法1，其中branchName表示远程分支名称\" class=\"headerlink\" title=\"删除远程分支方法1，其中branchName表示远程分支名称\"></a>删除远程分支方法1，其中branchName表示远程分支名称</h4><pre><code>git push origin :branchName\n</code></pre><h4 id=\"删除远程分支方法2，其中branchName表示远程分支名称\"><a href=\"#删除远程分支方法2，其中branchName表示远程分支名称\" class=\"headerlink\" title=\"删除远程分支方法2，其中branchName表示远程分支名称\"></a>删除远程分支方法2，其中branchName表示远程分支名称</h4><pre><code>git push origin --delete branchName\n</code></pre><h4 id=\"切换到master分支\"><a href=\"#切换到master分支\" class=\"headerlink\" title=\"切换到master分支\"></a>切换到master分支</h4><pre><code>git checkout master \n</code></pre><h4 id=\"初始化一个本地Git仓库\"><a href=\"#初始化一个本地Git仓库\" class=\"headerlink\" title=\"初始化一个本地Git仓库\"></a>初始化一个本地Git仓库</h4><pre><code>git init\n</code></pre><h4 id=\"查看本地仓库的状态\"><a href=\"#查看本地仓库的状态\" class=\"headerlink\" title=\"查看本地仓库的状态\"></a>查看本地仓库的状态</h4><pre><code>git status\n</code></pre><h4 id=\"将当前目录下的所有文件添加到暂存区\"><a href=\"#将当前目录下的所有文件添加到暂存区\" class=\"headerlink\" title=\"将当前目录下的所有文件添加到暂存区\"></a>将当前目录下的所有文件添加到暂存区</h4><pre><code>git add .\n</code></pre><h4 id=\"将暂存区的文件提交到本地仓库\"><a href=\"#将暂存区的文件提交到本地仓库\" class=\"headerlink\" title=\"将暂存区的文件提交到本地仓库\"></a>将暂存区的文件提交到本地仓库</h4><pre><code>git commit -m &quot;update some data&quot;\n</code></pre><h4 id=\"为本地仓库添加一个远程仓库\"><a href=\"#为本地仓库添加一个远程仓库\" class=\"headerlink\" title=\"为本地仓库添加一个远程仓库\"></a>为本地仓库添加一个远程仓库</h4><pre><code>git remote add origin https://github.com/username/reponame.git\n</code></pre><h4 id=\"查看所有远程仓库\"><a href=\"#查看所有远程仓库\" class=\"headerlink\" title=\"查看所有远程仓库\"></a>查看所有远程仓库</h4><pre><code>git remote -v\n</code></pre><h4 id=\"将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支\"><a href=\"#将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支\" class=\"headerlink\" title=\"将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支\"></a>将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程仓库上自动创建一个master分支</h4><pre><code>git push origin master\n</code></pre><h4 id=\"拉取远程仓库中的master分支上的数据到本地仓库\"><a href=\"#拉取远程仓库中的master分支上的数据到本地仓库\" class=\"headerlink\" title=\"拉取远程仓库中的master分支上的数据到本地仓库\"></a>拉取远程仓库中的master分支上的数据到本地仓库</h4><pre><code>git pull origin master\n</code></pre><h4 id=\"回退到某次提交，其中bbc272表示提交的哈希值的前六位\"><a href=\"#回退到某次提交，其中bbc272表示提交的哈希值的前六位\" class=\"headerlink\" title=\"回退到某次提交，其中bbc272表示提交的哈希值的前六位\"></a>回退到某次提交，其中<code>bbc272</code>表示提交的哈希值的前六位</h4><pre><code>git reset --hard bbc272\n</code></pre><h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><pre><code>git log\n</code></pre><h4 id=\"合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\"><a href=\"#合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\" class=\"headerlink\" title=\"合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\"></a>合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令</h4><pre><code>git merge a\n</code></pre><h4 id=\"查看代码改动，例如执行下面的Git命令可以查看a-md中代码做了哪些改动\"><a href=\"#查看代码改动，例如执行下面的Git命令可以查看a-md中代码做了哪些改动\" class=\"headerlink\" title=\"查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动\"></a>查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动</h4><pre><code>git diff a.md\n</code></pre><h4 id=\"强行推送当前分支到远程仓库，其中branchName表示分支名称\"><a href=\"#强行推送当前分支到远程仓库，其中branchName表示分支名称\" class=\"headerlink\" title=\"强行推送当前分支到远程仓库，其中branchName表示分支名称\"></a>强行推送当前分支到远程仓库，其中branchName表示分支名称</h4><pre><code>git push origin branchName --force\n</code></pre><h4 id=\"修改远程仓库的url地址，其中url表示远程创库的地址\"><a href=\"#修改远程仓库的url地址，其中url表示远程创库的地址\" class=\"headerlink\" title=\"修改远程仓库的url地址，其中url表示远程创库的地址\"></a>修改远程仓库的url地址，其中url表示远程创库的地址</h4><pre><code>git remote set-url origin url\n</code></pre><h4 id=\"创建一个-a-分支，并且自动切换到-a-分支下\"><a href=\"#创建一个-a-分支，并且自动切换到-a-分支下\" class=\"headerlink\" title=\"创建一个 a 分支，并且自动切换到 a 分支下\"></a>创建一个 a 分支，并且自动切换到 a 分支下</h4><pre><code>git checkout -b a\n</code></pre><h4 id=\"把远程分支迁到本地顺便切换到该分支，其中-develop-表示分支名\"><a href=\"#把远程分支迁到本地顺便切换到该分支，其中-develop-表示分支名\" class=\"headerlink\" title=\"把远程分支迁到本地顺便切换到该分支，其中 develop 表示分支名\"></a>把远程分支迁到本地顺便切换到该分支，其中 develop 表示分支名</h4><pre><code>git checkout -b develop origin/develop\n</code></pre><h4 id=\"解码-base64-编码\"><a href=\"#解码-base64-编码\" class=\"headerlink\" title=\"解码 base64 编码\"></a>解码 base64 编码</h4><pre><code>echo base64码 | base64 -d\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4/\">常用的Git命令</a>】</p>\n</blockquote>"},{"title":"几种清除浮动的方法","date":"2017-10-22T02:52:15.000Z","_content":"\n在网页设计中清除浮动是一种非常常见的需求，这篇博客将介绍几种常见的清除浮动的方法\n<!--more-->\n\n## 引出使用场景\n假定我们需要创建3个div标签，并且将他们的类名分别命名为box1、box2和box3，将box1和box2放在第一行，将box3放在第二行，最常见的方法是分别给box1和box2都加上一个float:left属性，让他们浮动，实现代码如下\n\n\t<!doctype html>\n\t<html lang=\"en\">\n\t<head>\n    <meta charset=\"UTF-8\">\n    <title>几种清除浮动的方法</title>\n    <style>\n        div {\n            width: 100px;\n            height: 100px;\n            margin: 10px;\n        }\n\n        .box1 {\n            background-color: red;\n\n            /* 使第一个div标签向左浮动 */\n            float: left;\n        }\n\n        .box2 {\n            background-color: green;\n\n            /* 使第二个div标签向左浮动 */\n            float: left;\n        }\n\n        .box3 {\n            background-color: blue;\n        }\n    </style>\n\t</head>\n\t<body>\n    \t<div class=\"box1\">我是box1</div>\n    \t<div class=\"box2\">我是box2</div>\n    \t<div class=\"box3\">我是box3</div>\n\t</body>\n\t</html>\n\n上述代码在浏览器中的运行效果如下：  \n![](http://oq3pg8pg4.bkt.clouddn.com/20170111210847230.png)\n\n**分析：**通过上图展示的效果我们可以看出box1和box2虽然都在第一行，但是在没有给box3设置浮动的情况下，box3也跑到了第一行上，因为当给box1和box2设置了浮动后，而浮动的元素是脱离了标准文档流，而浏览器会认为脱离了标准文档流的元素不占位置，而box3依然在标准文档流中，所以box3会跑到浏览器的最左端\n\n## 解决方法\n\n##### 方法1：使用clear : both清除浮动\n\n在box3中添加clear : both清除浮动对box3的影响\n\t\n\t.box3 {\n        background-color: blue;\n        clear: both;\n\t}\n\n在浏览器中运行的效果：  \n![](http://oq3pg8pg4.bkt.clouddn.com/20170111215825961.png)\n\n当我们需要给box3设置padding属性和设置margin属性时\n\n\t.box3 {\n    \tpadding: 100px;\n        margin: 100px;\n        background-color: blue;\n        clear: both;\n    }\n\n在浏览器中的效果  \n![](http://oq3pg8pg4.bkt.clouddn.com/20170111220546278.png)\n通过观察可知，当给box3设置一个margin值为100px后发现box3的margin-top和margin-bottom并没有发生变法，这就是使用Clear : both清除浮动的一个弊端，使用Clear : both清除浮动会使得元素的margin-top和margin-bottom属性失效\n\n##### 方法2：使用ovflow: hidden\n为box1、box2两个元素引入一个父元素，并且给父元素添加一个overflow : hiden属性\n\n\t<!DOCTYPE html>\n\t<html>\n\t<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>几种清除浮动的方法</title>\n    <style>\n        p {\n            width: 100px;\n            height: 100px;\n            margin: 10px;\n        }\n\n        .box1 {\n            background-color: red;\n\n            /* 使第一个div标签向左浮动 */\n            float: left;\n        }\n\n        .box2 {\n            background-color: green;\n\n            /* 使第二个div标签向左浮动 */\n            float: left;\n        }\n\n        .box3 {\n            padding: 100px;\n            margin: 100px;\n            background-color: blue;\n        }\n\n        .container {\n\n            /* 给三个div元素的父元素设置一个overflow: hidden属性 */\n            overflow: hidden;\n        }\n    </style>\n\t</head>\n\t<body>\n\t    <div class=\"container\">\n\t        <p class=\"box1\">我是box1</p>\n\t        <p class=\"box2\">我是box2</p>\n\t    </div>\n\t    <p class=\"box3\">我是box3</p>\n\t</body>\n\t</html>\n\n在浏览器中运行的效果如下：  \n![](http://oq3pg8pg4.bkt.clouddn.com/20171022114447071.png)\n\n通过观察可知使用overflow: hidden属性清除浮动，不会让box3的margin-top属性和margin-bottom属性失效\n\n##### 方法3：使用伪类清除浮动\n在实际开发中为了解决清除浮动在不同浏览器下的兼容问题，我们通常会定义一个clearfix类，当那个元素需要清除浮动，就给该元素的父元素设置clearfix类，clearfix类的代码如下\n\n\t.clearfix:after {\n\t    content: '';\n\t    height: 0;\n\t    clear: both;\n\t    overflow: hidden;\n\t    visibility: hidden;\n\t    display: block;\n\t}\n\n    .clearfix {\n        *zoom: 1;\n    }\n\n给浮动的元素的父元素添加clearfix类\n\n\t<body>\n\t    <div class=\"clearfix\">\n\t        <p class=\"box1\">我是box1</p>\n\t        <p class=\"box2\">我是box2</p>\n\t    </div>\n\t    <p class=\"box3\">我是box3</p>\n\t</body>\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[几种清除浮动的方法](http://meishadevs.com/blog/%E5%87%A0%E7%A7%8D%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/)】","source":"_posts/几种清除浮动的方法.md","raw":"---\ntitle: 几种清除浮动的方法\ncategories:\n  - CSS\ntags:\n  - CSS\ndate: 2017-10-22 10:52:15\n---\n\n在网页设计中清除浮动是一种非常常见的需求，这篇博客将介绍几种常见的清除浮动的方法\n<!--more-->\n\n## 引出使用场景\n假定我们需要创建3个div标签，并且将他们的类名分别命名为box1、box2和box3，将box1和box2放在第一行，将box3放在第二行，最常见的方法是分别给box1和box2都加上一个float:left属性，让他们浮动，实现代码如下\n\n\t<!doctype html>\n\t<html lang=\"en\">\n\t<head>\n    <meta charset=\"UTF-8\">\n    <title>几种清除浮动的方法</title>\n    <style>\n        div {\n            width: 100px;\n            height: 100px;\n            margin: 10px;\n        }\n\n        .box1 {\n            background-color: red;\n\n            /* 使第一个div标签向左浮动 */\n            float: left;\n        }\n\n        .box2 {\n            background-color: green;\n\n            /* 使第二个div标签向左浮动 */\n            float: left;\n        }\n\n        .box3 {\n            background-color: blue;\n        }\n    </style>\n\t</head>\n\t<body>\n    \t<div class=\"box1\">我是box1</div>\n    \t<div class=\"box2\">我是box2</div>\n    \t<div class=\"box3\">我是box3</div>\n\t</body>\n\t</html>\n\n上述代码在浏览器中的运行效果如下：  \n![](http://oq3pg8pg4.bkt.clouddn.com/20170111210847230.png)\n\n**分析：**通过上图展示的效果我们可以看出box1和box2虽然都在第一行，但是在没有给box3设置浮动的情况下，box3也跑到了第一行上，因为当给box1和box2设置了浮动后，而浮动的元素是脱离了标准文档流，而浏览器会认为脱离了标准文档流的元素不占位置，而box3依然在标准文档流中，所以box3会跑到浏览器的最左端\n\n## 解决方法\n\n##### 方法1：使用clear : both清除浮动\n\n在box3中添加clear : both清除浮动对box3的影响\n\t\n\t.box3 {\n        background-color: blue;\n        clear: both;\n\t}\n\n在浏览器中运行的效果：  \n![](http://oq3pg8pg4.bkt.clouddn.com/20170111215825961.png)\n\n当我们需要给box3设置padding属性和设置margin属性时\n\n\t.box3 {\n    \tpadding: 100px;\n        margin: 100px;\n        background-color: blue;\n        clear: both;\n    }\n\n在浏览器中的效果  \n![](http://oq3pg8pg4.bkt.clouddn.com/20170111220546278.png)\n通过观察可知，当给box3设置一个margin值为100px后发现box3的margin-top和margin-bottom并没有发生变法，这就是使用Clear : both清除浮动的一个弊端，使用Clear : both清除浮动会使得元素的margin-top和margin-bottom属性失效\n\n##### 方法2：使用ovflow: hidden\n为box1、box2两个元素引入一个父元素，并且给父元素添加一个overflow : hiden属性\n\n\t<!DOCTYPE html>\n\t<html>\n\t<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>几种清除浮动的方法</title>\n    <style>\n        p {\n            width: 100px;\n            height: 100px;\n            margin: 10px;\n        }\n\n        .box1 {\n            background-color: red;\n\n            /* 使第一个div标签向左浮动 */\n            float: left;\n        }\n\n        .box2 {\n            background-color: green;\n\n            /* 使第二个div标签向左浮动 */\n            float: left;\n        }\n\n        .box3 {\n            padding: 100px;\n            margin: 100px;\n            background-color: blue;\n        }\n\n        .container {\n\n            /* 给三个div元素的父元素设置一个overflow: hidden属性 */\n            overflow: hidden;\n        }\n    </style>\n\t</head>\n\t<body>\n\t    <div class=\"container\">\n\t        <p class=\"box1\">我是box1</p>\n\t        <p class=\"box2\">我是box2</p>\n\t    </div>\n\t    <p class=\"box3\">我是box3</p>\n\t</body>\n\t</html>\n\n在浏览器中运行的效果如下：  \n![](http://oq3pg8pg4.bkt.clouddn.com/20171022114447071.png)\n\n通过观察可知使用overflow: hidden属性清除浮动，不会让box3的margin-top属性和margin-bottom属性失效\n\n##### 方法3：使用伪类清除浮动\n在实际开发中为了解决清除浮动在不同浏览器下的兼容问题，我们通常会定义一个clearfix类，当那个元素需要清除浮动，就给该元素的父元素设置clearfix类，clearfix类的代码如下\n\n\t.clearfix:after {\n\t    content: '';\n\t    height: 0;\n\t    clear: both;\n\t    overflow: hidden;\n\t    visibility: hidden;\n\t    display: block;\n\t}\n\n    .clearfix {\n        *zoom: 1;\n    }\n\n给浮动的元素的父元素添加clearfix类\n\n\t<body>\n\t    <div class=\"clearfix\">\n\t        <p class=\"box1\">我是box1</p>\n\t        <p class=\"box2\">我是box2</p>\n\t    </div>\n\t    <p class=\"box3\">我是box3</p>\n\t</body>\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[几种清除浮动的方法](http://meishadevs.com/blog/%E5%87%A0%E7%A7%8D%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/)】","slug":"几种清除浮动的方法","published":1,"updated":"2018-07-07T02:23:40.319Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000jjc7ujwv41oic","content":"<p>在网页设计中清除浮动是一种非常常见的需求，这篇博客将介绍几种常见的清除浮动的方法<br><a id=\"more\"></a></p>\n<h2 id=\"引出使用场景\"><a href=\"#引出使用场景\" class=\"headerlink\" title=\"引出使用场景\"></a>引出使用场景</h2><p>假定我们需要创建3个div标签，并且将他们的类名分别命名为box1、box2和box3，将box1和box2放在第一行，将box3放在第二行，最常见的方法是分别给box1和box2都加上一个float:left属性，让他们浮动，实现代码如下</p>\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;title&gt;几种清除浮动的方法&lt;/title&gt;\n&lt;style&gt;\n    div {\n        width: 100px;\n        height: 100px;\n        margin: 10px;\n    }\n\n    .box1 {\n        background-color: red;\n\n        /* 使第一个div标签向左浮动 */\n        float: left;\n    }\n\n    .box2 {\n        background-color: green;\n\n        /* 使第二个div标签向左浮动 */\n        float: left;\n    }\n\n    .box3 {\n        background-color: blue;\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;box1&quot;&gt;我是box1&lt;/div&gt;\n    &lt;div class=&quot;box2&quot;&gt;我是box2&lt;/div&gt;\n    &lt;div class=&quot;box3&quot;&gt;我是box3&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>上述代码在浏览器中的运行效果如下：<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170111210847230.png\" alt=\"\"></p>\n<p><strong>分析：</strong>通过上图展示的效果我们可以看出box1和box2虽然都在第一行，但是在没有给box3设置浮动的情况下，box3也跑到了第一行上，因为当给box1和box2设置了浮动后，而浮动的元素是脱离了标准文档流，而浏览器会认为脱离了标准文档流的元素不占位置，而box3依然在标准文档流中，所以box3会跑到浏览器的最左端</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><h5 id=\"方法1：使用clear-both清除浮动\"><a href=\"#方法1：使用clear-both清除浮动\" class=\"headerlink\" title=\"方法1：使用clear : both清除浮动\"></a>方法1：使用clear : both清除浮动</h5><p>在box3中添加clear : both清除浮动对box3的影响</p>\n<pre><code>.box3 {\n    background-color: blue;\n    clear: both;\n}\n</code></pre><p>在浏览器中运行的效果：<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170111215825961.png\" alt=\"\"></p>\n<p>当我们需要给box3设置padding属性和设置margin属性时</p>\n<pre><code>.box3 {\n    padding: 100px;\n    margin: 100px;\n    background-color: blue;\n    clear: both;\n}\n</code></pre><p>在浏览器中的效果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170111220546278.png\" alt=\"\"><br>通过观察可知，当给box3设置一个margin值为100px后发现box3的margin-top和margin-bottom并没有发生变法，这就是使用Clear : both清除浮动的一个弊端，使用Clear : both清除浮动会使得元素的margin-top和margin-bottom属性失效</p>\n<h5 id=\"方法2：使用ovflow-hidden\"><a href=\"#方法2：使用ovflow-hidden\" class=\"headerlink\" title=\"方法2：使用ovflow: hidden\"></a>方法2：使用ovflow: hidden</h5><p>为box1、box2两个元素引入一个父元素，并且给父元素添加一个overflow : hiden属性</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head lang=&quot;en&quot;&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;title&gt;几种清除浮动的方法&lt;/title&gt;\n&lt;style&gt;\n    p {\n        width: 100px;\n        height: 100px;\n        margin: 10px;\n    }\n\n    .box1 {\n        background-color: red;\n\n        /* 使第一个div标签向左浮动 */\n        float: left;\n    }\n\n    .box2 {\n        background-color: green;\n\n        /* 使第二个div标签向左浮动 */\n        float: left;\n    }\n\n    .box3 {\n        padding: 100px;\n        margin: 100px;\n        background-color: blue;\n    }\n\n    .container {\n\n        /* 给三个div元素的父元素设置一个overflow: hidden属性 */\n        overflow: hidden;\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;container&quot;&gt;\n        &lt;p class=&quot;box1&quot;&gt;我是box1&lt;/p&gt;\n        &lt;p class=&quot;box2&quot;&gt;我是box2&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;p class=&quot;box3&quot;&gt;我是box3&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>在浏览器中运行的效果如下：<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20171022114447071.png\" alt=\"\"></p>\n<p>通过观察可知使用overflow: hidden属性清除浮动，不会让box3的margin-top属性和margin-bottom属性失效</p>\n<h5 id=\"方法3：使用伪类清除浮动\"><a href=\"#方法3：使用伪类清除浮动\" class=\"headerlink\" title=\"方法3：使用伪类清除浮动\"></a>方法3：使用伪类清除浮动</h5><p>在实际开发中为了解决清除浮动在不同浏览器下的兼容问题，我们通常会定义一个clearfix类，当那个元素需要清除浮动，就给该元素的父元素设置clearfix类，clearfix类的代码如下</p>\n<pre><code>.clearfix:after {\n    content: &apos;&apos;;\n    height: 0;\n    clear: both;\n    overflow: hidden;\n    visibility: hidden;\n    display: block;\n}\n\n.clearfix {\n    *zoom: 1;\n}\n</code></pre><p>给浮动的元素的父元素添加clearfix类</p>\n<pre><code>&lt;body&gt;\n    &lt;div class=&quot;clearfix&quot;&gt;\n        &lt;p class=&quot;box1&quot;&gt;我是box1&lt;/p&gt;\n        &lt;p class=&quot;box2&quot;&gt;我是box2&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;p class=&quot;box3&quot;&gt;我是box3&lt;/p&gt;\n&lt;/body&gt;\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%87%A0%E7%A7%8D%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/\">几种清除浮动的方法</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>在网页设计中清除浮动是一种非常常见的需求，这篇博客将介绍几种常见的清除浮动的方法<br>","more":"</p>\n<h2 id=\"引出使用场景\"><a href=\"#引出使用场景\" class=\"headerlink\" title=\"引出使用场景\"></a>引出使用场景</h2><p>假定我们需要创建3个div标签，并且将他们的类名分别命名为box1、box2和box3，将box1和box2放在第一行，将box3放在第二行，最常见的方法是分别给box1和box2都加上一个float:left属性，让他们浮动，实现代码如下</p>\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;title&gt;几种清除浮动的方法&lt;/title&gt;\n&lt;style&gt;\n    div {\n        width: 100px;\n        height: 100px;\n        margin: 10px;\n    }\n\n    .box1 {\n        background-color: red;\n\n        /* 使第一个div标签向左浮动 */\n        float: left;\n    }\n\n    .box2 {\n        background-color: green;\n\n        /* 使第二个div标签向左浮动 */\n        float: left;\n    }\n\n    .box3 {\n        background-color: blue;\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;box1&quot;&gt;我是box1&lt;/div&gt;\n    &lt;div class=&quot;box2&quot;&gt;我是box2&lt;/div&gt;\n    &lt;div class=&quot;box3&quot;&gt;我是box3&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>上述代码在浏览器中的运行效果如下：<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170111210847230.png\" alt=\"\"></p>\n<p><strong>分析：</strong>通过上图展示的效果我们可以看出box1和box2虽然都在第一行，但是在没有给box3设置浮动的情况下，box3也跑到了第一行上，因为当给box1和box2设置了浮动后，而浮动的元素是脱离了标准文档流，而浏览器会认为脱离了标准文档流的元素不占位置，而box3依然在标准文档流中，所以box3会跑到浏览器的最左端</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><h5 id=\"方法1：使用clear-both清除浮动\"><a href=\"#方法1：使用clear-both清除浮动\" class=\"headerlink\" title=\"方法1：使用clear : both清除浮动\"></a>方法1：使用clear : both清除浮动</h5><p>在box3中添加clear : both清除浮动对box3的影响</p>\n<pre><code>.box3 {\n    background-color: blue;\n    clear: both;\n}\n</code></pre><p>在浏览器中运行的效果：<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170111215825961.png\" alt=\"\"></p>\n<p>当我们需要给box3设置padding属性和设置margin属性时</p>\n<pre><code>.box3 {\n    padding: 100px;\n    margin: 100px;\n    background-color: blue;\n    clear: both;\n}\n</code></pre><p>在浏览器中的效果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20170111220546278.png\" alt=\"\"><br>通过观察可知，当给box3设置一个margin值为100px后发现box3的margin-top和margin-bottom并没有发生变法，这就是使用Clear : both清除浮动的一个弊端，使用Clear : both清除浮动会使得元素的margin-top和margin-bottom属性失效</p>\n<h5 id=\"方法2：使用ovflow-hidden\"><a href=\"#方法2：使用ovflow-hidden\" class=\"headerlink\" title=\"方法2：使用ovflow: hidden\"></a>方法2：使用ovflow: hidden</h5><p>为box1、box2两个元素引入一个父元素，并且给父元素添加一个overflow : hiden属性</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head lang=&quot;en&quot;&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;title&gt;几种清除浮动的方法&lt;/title&gt;\n&lt;style&gt;\n    p {\n        width: 100px;\n        height: 100px;\n        margin: 10px;\n    }\n\n    .box1 {\n        background-color: red;\n\n        /* 使第一个div标签向左浮动 */\n        float: left;\n    }\n\n    .box2 {\n        background-color: green;\n\n        /* 使第二个div标签向左浮动 */\n        float: left;\n    }\n\n    .box3 {\n        padding: 100px;\n        margin: 100px;\n        background-color: blue;\n    }\n\n    .container {\n\n        /* 给三个div元素的父元素设置一个overflow: hidden属性 */\n        overflow: hidden;\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;container&quot;&gt;\n        &lt;p class=&quot;box1&quot;&gt;我是box1&lt;/p&gt;\n        &lt;p class=&quot;box2&quot;&gt;我是box2&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;p class=&quot;box3&quot;&gt;我是box3&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>在浏览器中运行的效果如下：<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20171022114447071.png\" alt=\"\"></p>\n<p>通过观察可知使用overflow: hidden属性清除浮动，不会让box3的margin-top属性和margin-bottom属性失效</p>\n<h5 id=\"方法3：使用伪类清除浮动\"><a href=\"#方法3：使用伪类清除浮动\" class=\"headerlink\" title=\"方法3：使用伪类清除浮动\"></a>方法3：使用伪类清除浮动</h5><p>在实际开发中为了解决清除浮动在不同浏览器下的兼容问题，我们通常会定义一个clearfix类，当那个元素需要清除浮动，就给该元素的父元素设置clearfix类，clearfix类的代码如下</p>\n<pre><code>.clearfix:after {\n    content: &apos;&apos;;\n    height: 0;\n    clear: both;\n    overflow: hidden;\n    visibility: hidden;\n    display: block;\n}\n\n.clearfix {\n    *zoom: 1;\n}\n</code></pre><p>给浮动的元素的父元素添加clearfix类</p>\n<pre><code>&lt;body&gt;\n    &lt;div class=&quot;clearfix&quot;&gt;\n        &lt;p class=&quot;box1&quot;&gt;我是box1&lt;/p&gt;\n        &lt;p class=&quot;box2&quot;&gt;我是box2&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;p class=&quot;box3&quot;&gt;我是box3&lt;/p&gt;\n&lt;/body&gt;\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%87%A0%E7%A7%8D%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/\">几种清除浮动的方法</a>】</p>\n</blockquote>"},{"title":"在手机上查看移动Web页","date":"2017-10-21T09:40:54.000Z","_content":"\n我最近在学习做移动端页面，当做好一个移动端页面后想使用手机查看一下移动端页面在手机上的效果，找了很久才找到一个比较好的方法，特意写这篇文章记录下在手机上查看移动端页面的方法\n<!--more-->\n\n## 准备的硬件和软件\n- [带有android系统的手机]()\n- [数据线]()\n- [Node.js](https://nodejs.org/en/download/)\n- [Browsersync](http://www.browsersync.cn/)\n- [Chrome](http://rj.baidu.com/soft/detail/14744.html?ald)\n\n## 配置环境\n\n##### 注意事项\n需要提前在电脑中安装Chrome浏览器，在手机上安装移动版的Chrome浏览器，并且通过数据线将手机和电脑连接，手机必须和电脑连接在同一wifi下，并且电脑里需要提前安装好Node.js，因为下面的操作中有些步骤需要用到Node.js，Node.js的安装方法可以参考我前面写的博客[使用NVM安装Node.js](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/)\n\n##### 第一步：全局安装Browsersync\n\n\tnpm install -g browser-sync \n\n##### 第二步：进入移动端页面中的index.html所在的文件路径下\n![](http://oq3pg8pg4.bkt.clouddn.com/20171021182843152.png)\n\n##### 第三步：运行Browsersync\n\t\n\tbrowser-sync start --server\n\n此时会自动使用默认的浏览器打开网页，并且在命令行窗口中会显示四个Url地址，其中上面两个表示当前网页的Url地址下面两个Url地址用于打开Browsersync管理页，在Browsersync管理页中可以控制网页  \n![](http://oq3pg8pg4.bkt.clouddn.com/20171021184022959.png)\n\t\n此时在手机浏览器上运行[http://192.168.0.102:3000](http://192.168.0.102:3000)就可以在手机上看到这个网页，前提必须使手机和电脑连接在同一wifi下  \n\n##### 第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机\n打开桌面版的Chrome浏览器，在地址框中输入`chrome://inspect`，此时在Chrome浏览器页面上可以查看到与电脑连接的移动设备的信息\n![](http://oq3pg8pg4.bkt.clouddn.com/pic.png)\n\n##### 第五步：将Url地址发送到手机上\n在输入框中输入Url地址[http://192.168.0.102:3000](http://192.168.0.102:3000)，并且单击Open按钮，此时会将Url地址发送到手机上的Chrom浏览器中，如果此时手机上启动了Chrome浏览器，Chrom浏览器会显示该Url地址的内容，如果没有启动Chrome浏览器，在启动Chrome浏览器时会自动显示该Url地址的内容\n![](http://oq3pg8pg4.bkt.clouddn.com/pic1.PNG)\n\n##### 第六步：在手机上查看移动端页面\n打开手机上的Chrome浏览器，可以看到这个移动端页面  \n![](http://oq3pg8pg4.bkt.clouddn.com/phone.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[在手机上查看移动Web页](http://meishadevs.com/blog/%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%9F%A5%E7%9C%8B%E7%A7%BB%E5%8A%A8Web%E9%A1%B5/)】","source":"_posts/在手机上查看移动Web页.md","raw":"---\ntitle: 在手机上查看移动Web页\ncategories:\n  - 移动Web\ntags:\n  - 移动Web\ndate: 2017-10-21 17:40:54\n---\n\n我最近在学习做移动端页面，当做好一个移动端页面后想使用手机查看一下移动端页面在手机上的效果，找了很久才找到一个比较好的方法，特意写这篇文章记录下在手机上查看移动端页面的方法\n<!--more-->\n\n## 准备的硬件和软件\n- [带有android系统的手机]()\n- [数据线]()\n- [Node.js](https://nodejs.org/en/download/)\n- [Browsersync](http://www.browsersync.cn/)\n- [Chrome](http://rj.baidu.com/soft/detail/14744.html?ald)\n\n## 配置环境\n\n##### 注意事项\n需要提前在电脑中安装Chrome浏览器，在手机上安装移动版的Chrome浏览器，并且通过数据线将手机和电脑连接，手机必须和电脑连接在同一wifi下，并且电脑里需要提前安装好Node.js，因为下面的操作中有些步骤需要用到Node.js，Node.js的安装方法可以参考我前面写的博客[使用NVM安装Node.js](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/)\n\n##### 第一步：全局安装Browsersync\n\n\tnpm install -g browser-sync \n\n##### 第二步：进入移动端页面中的index.html所在的文件路径下\n![](http://oq3pg8pg4.bkt.clouddn.com/20171021182843152.png)\n\n##### 第三步：运行Browsersync\n\t\n\tbrowser-sync start --server\n\n此时会自动使用默认的浏览器打开网页，并且在命令行窗口中会显示四个Url地址，其中上面两个表示当前网页的Url地址下面两个Url地址用于打开Browsersync管理页，在Browsersync管理页中可以控制网页  \n![](http://oq3pg8pg4.bkt.clouddn.com/20171021184022959.png)\n\t\n此时在手机浏览器上运行[http://192.168.0.102:3000](http://192.168.0.102:3000)就可以在手机上看到这个网页，前提必须使手机和电脑连接在同一wifi下  \n\n##### 第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机\n打开桌面版的Chrome浏览器，在地址框中输入`chrome://inspect`，此时在Chrome浏览器页面上可以查看到与电脑连接的移动设备的信息\n![](http://oq3pg8pg4.bkt.clouddn.com/pic.png)\n\n##### 第五步：将Url地址发送到手机上\n在输入框中输入Url地址[http://192.168.0.102:3000](http://192.168.0.102:3000)，并且单击Open按钮，此时会将Url地址发送到手机上的Chrom浏览器中，如果此时手机上启动了Chrome浏览器，Chrom浏览器会显示该Url地址的内容，如果没有启动Chrome浏览器，在启动Chrome浏览器时会自动显示该Url地址的内容\n![](http://oq3pg8pg4.bkt.clouddn.com/pic1.PNG)\n\n##### 第六步：在手机上查看移动端页面\n打开手机上的Chrome浏览器，可以看到这个移动端页面  \n![](http://oq3pg8pg4.bkt.clouddn.com/phone.png)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[在手机上查看移动Web页](http://meishadevs.com/blog/%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%9F%A5%E7%9C%8B%E7%A7%BB%E5%8A%A8Web%E9%A1%B5/)】","slug":"在手机上查看移动Web页","published":1,"updated":"2018-07-07T02:23:40.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqnz000kjc7ut2rrm223","content":"<p>我最近在学习做移动端页面，当做好一个移动端页面后想使用手机查看一下移动端页面在手机上的效果，找了很久才找到一个比较好的方法，特意写这篇文章记录下在手机上查看移动端页面的方法<br><a id=\"more\"></a></p>\n<h2 id=\"准备的硬件和软件\"><a href=\"#准备的硬件和软件\" class=\"headerlink\" title=\"准备的硬件和软件\"></a>准备的硬件和软件</h2><ul>\n<li><a href=\"\">带有android系统的手机</a></li>\n<li><a href=\"\">数据线</a></li>\n<li><a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://www.browsersync.cn/\" target=\"_blank\" rel=\"noopener\">Browsersync</a></li>\n<li><a href=\"http://rj.baidu.com/soft/detail/14744.html?ald\" target=\"_blank\" rel=\"noopener\">Chrome</a></li>\n</ul>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><h5 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h5><p>需要提前在电脑中安装Chrome浏览器，在手机上安装移动版的Chrome浏览器，并且通过数据线将手机和电脑连接，手机必须和电脑连接在同一wifi下，并且电脑里需要提前安装好Node.js，因为下面的操作中有些步骤需要用到Node.js，Node.js的安装方法可以参考我前面写的博客<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/\">使用NVM安装Node.js</a></p>\n<h5 id=\"第一步：全局安装Browsersync\"><a href=\"#第一步：全局安装Browsersync\" class=\"headerlink\" title=\"第一步：全局安装Browsersync\"></a>第一步：全局安装Browsersync</h5><pre><code>npm install -g browser-sync \n</code></pre><h5 id=\"第二步：进入移动端页面中的index-html所在的文件路径下\"><a href=\"#第二步：进入移动端页面中的index-html所在的文件路径下\" class=\"headerlink\" title=\"第二步：进入移动端页面中的index.html所在的文件路径下\"></a>第二步：进入移动端页面中的index.html所在的文件路径下</h5><p><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20171021182843152.png\" alt=\"\"></p>\n<h5 id=\"第三步：运行Browsersync\"><a href=\"#第三步：运行Browsersync\" class=\"headerlink\" title=\"第三步：运行Browsersync\"></a>第三步：运行Browsersync</h5><pre><code>browser-sync start --server\n</code></pre><p>此时会自动使用默认的浏览器打开网页，并且在命令行窗口中会显示四个Url地址，其中上面两个表示当前网页的Url地址下面两个Url地址用于打开Browsersync管理页，在Browsersync管理页中可以控制网页<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20171021184022959.png\" alt=\"\"></p>\n<p>此时在手机浏览器上运行<a href=\"http://192.168.0.102:3000\" target=\"_blank\" rel=\"noopener\">http://192.168.0.102:3000</a>就可以在手机上看到这个网页，前提必须使手机和电脑连接在同一wifi下  </p>\n<h5 id=\"第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机\"><a href=\"#第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机\" class=\"headerlink\" title=\"第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机\"></a>第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机</h5><p>打开桌面版的Chrome浏览器，在地址框中输入<code>chrome://inspect</code>，此时在Chrome浏览器页面上可以查看到与电脑连接的移动设备的信息<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/pic.png\" alt=\"\"></p>\n<h5 id=\"第五步：将Url地址发送到手机上\"><a href=\"#第五步：将Url地址发送到手机上\" class=\"headerlink\" title=\"第五步：将Url地址发送到手机上\"></a>第五步：将Url地址发送到手机上</h5><p>在输入框中输入Url地址<a href=\"http://192.168.0.102:3000\" target=\"_blank\" rel=\"noopener\">http://192.168.0.102:3000</a>，并且单击Open按钮，此时会将Url地址发送到手机上的Chrom浏览器中，如果此时手机上启动了Chrome浏览器，Chrom浏览器会显示该Url地址的内容，如果没有启动Chrome浏览器，在启动Chrome浏览器时会自动显示该Url地址的内容<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/pic1.PNG\" alt=\"\"></p>\n<h5 id=\"第六步：在手机上查看移动端页面\"><a href=\"#第六步：在手机上查看移动端页面\" class=\"headerlink\" title=\"第六步：在手机上查看移动端页面\"></a>第六步：在手机上查看移动端页面</h5><p>打开手机上的Chrome浏览器，可以看到这个移动端页面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/phone.png\" alt=\"\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%9F%A5%E7%9C%8B%E7%A7%BB%E5%8A%A8Web%E9%A1%B5/\">在手机上查看移动Web页</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>我最近在学习做移动端页面，当做好一个移动端页面后想使用手机查看一下移动端页面在手机上的效果，找了很久才找到一个比较好的方法，特意写这篇文章记录下在手机上查看移动端页面的方法<br>","more":"</p>\n<h2 id=\"准备的硬件和软件\"><a href=\"#准备的硬件和软件\" class=\"headerlink\" title=\"准备的硬件和软件\"></a>准备的硬件和软件</h2><ul>\n<li><a href=\"\">带有android系统的手机</a></li>\n<li><a href=\"\">数据线</a></li>\n<li><a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n<li><a href=\"http://www.browsersync.cn/\" target=\"_blank\" rel=\"noopener\">Browsersync</a></li>\n<li><a href=\"http://rj.baidu.com/soft/detail/14744.html?ald\" target=\"_blank\" rel=\"noopener\">Chrome</a></li>\n</ul>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><h5 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h5><p>需要提前在电脑中安装Chrome浏览器，在手机上安装移动版的Chrome浏览器，并且通过数据线将手机和电脑连接，手机必须和电脑连接在同一wifi下，并且电脑里需要提前安装好Node.js，因为下面的操作中有些步骤需要用到Node.js，Node.js的安装方法可以参考我前面写的博客<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/\">使用NVM安装Node.js</a></p>\n<h5 id=\"第一步：全局安装Browsersync\"><a href=\"#第一步：全局安装Browsersync\" class=\"headerlink\" title=\"第一步：全局安装Browsersync\"></a>第一步：全局安装Browsersync</h5><pre><code>npm install -g browser-sync \n</code></pre><h5 id=\"第二步：进入移动端页面中的index-html所在的文件路径下\"><a href=\"#第二步：进入移动端页面中的index-html所在的文件路径下\" class=\"headerlink\" title=\"第二步：进入移动端页面中的index.html所在的文件路径下\"></a>第二步：进入移动端页面中的index.html所在的文件路径下</h5><p><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20171021182843152.png\" alt=\"\"></p>\n<h5 id=\"第三步：运行Browsersync\"><a href=\"#第三步：运行Browsersync\" class=\"headerlink\" title=\"第三步：运行Browsersync\"></a>第三步：运行Browsersync</h5><pre><code>browser-sync start --server\n</code></pre><p>此时会自动使用默认的浏览器打开网页，并且在命令行窗口中会显示四个Url地址，其中上面两个表示当前网页的Url地址下面两个Url地址用于打开Browsersync管理页，在Browsersync管理页中可以控制网页<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/20171021184022959.png\" alt=\"\"></p>\n<p>此时在手机浏览器上运行<a href=\"http://192.168.0.102:3000\" target=\"_blank\" rel=\"noopener\">http://192.168.0.102:3000</a>就可以在手机上看到这个网页，前提必须使手机和电脑连接在同一wifi下  </p>\n<h5 id=\"第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机\"><a href=\"#第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机\" class=\"headerlink\" title=\"第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机\"></a>第四步：在桌面版Chrome浏览器上查看连接到电脑上的手机</h5><p>打开桌面版的Chrome浏览器，在地址框中输入<code>chrome://inspect</code>，此时在Chrome浏览器页面上可以查看到与电脑连接的移动设备的信息<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/pic.png\" alt=\"\"></p>\n<h5 id=\"第五步：将Url地址发送到手机上\"><a href=\"#第五步：将Url地址发送到手机上\" class=\"headerlink\" title=\"第五步：将Url地址发送到手机上\"></a>第五步：将Url地址发送到手机上</h5><p>在输入框中输入Url地址<a href=\"http://192.168.0.102:3000\" target=\"_blank\" rel=\"noopener\">http://192.168.0.102:3000</a>，并且单击Open按钮，此时会将Url地址发送到手机上的Chrom浏览器中，如果此时手机上启动了Chrome浏览器，Chrom浏览器会显示该Url地址的内容，如果没有启动Chrome浏览器，在启动Chrome浏览器时会自动显示该Url地址的内容<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/pic1.PNG\" alt=\"\"></p>\n<h5 id=\"第六步：在手机上查看移动端页面\"><a href=\"#第六步：在手机上查看移动端页面\" class=\"headerlink\" title=\"第六步：在手机上查看移动端页面\"></a>第六步：在手机上查看移动端页面</h5><p>打开手机上的Chrome浏览器，可以看到这个移动端页面<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/phone.png\" alt=\"\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%9F%A5%E7%9C%8B%E7%A7%BB%E5%8A%A8Web%E9%A1%B5/\">在手机上查看移动Web页</a>】</p>\n</blockquote>"},{"title":"常用的正则表达式","date":"2017-12-13T07:18:08.000Z","_content":"\n整理的一些常用的正则表达式\n<!--more-->\n\n\n**^** 表示字符串的开始位置\n\n**$** 表示字符串的结束位置\n\n**+** 加号前面的字符至少出现一次或多次，等同于{1,}\n\n**\\*** 星号前面的字符可以不出现、可以出现一次、可以出现多次，等同于{0,}\n\n**?** 问号前面的字符只能出现0次或1次，等同于{0, 1}\n\n**.** 匹配除回车(\\r)、换行(\\n) 、行分隔符(\\u2028) 和 段分隔符(\\u2029) 以外的所有字符\n\n**|** 表示或者，即cat|dog表示匹配cat或dog\n\n**\\d** 匹配0-9之间的任意一个数字，相当于[0-9]\n\n**\\d+** 匹配一个或多个连续的数字\n\n**\\D** 匹配除0-9以外的任意字符，相当于[^0-9]\n\n**\\w** 匹配任意的字母、数字和下划线，相当于[A-Za-z0-9_]\n\n**\\W** 匹配除字母、数字和下划线以外的字符，相当于[^A-Za-z0-9_]\n\n**\\s** 匹配空格（包括制表符、空格符、换行符等），相等于[\\t\\r\\n\\v\\f]\n\n**\\S** 匹配非空格的字符，相当于[^\\t\\r\\n\\v\\f]\n\n**\\b** 匹配词的边界，即匹配词的开头和结尾\n\n**\\B** 匹配非词边界，即匹配词的中间\n\n**\\cX** 表示Ctrl-[X]，其中的X是A-Z之中任一个英文字母，用来匹配控制字符\n\n**[\\b]** 匹配退格键(U+0008)，不要与\\b混淆\n\n**\\n** 匹配换行键\n\n**\\r** 匹配回车键\n\n**\\t** 匹配制表符tab（U+0009）\n\n**\\v** 匹配垂直制表符（U+000B）\n\n**\\f** 匹配换页符（U+000C）\n\n**\\0** 匹配null字符（U+0000）\n\n**\\xhh** 匹配一个以两位十六进制数（\\x00-\\xFF）表示的字符\n\n**\\uhhhh** 匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的unicode字符\n\n**{n}** 恰好重复n次\n\n**{n,}** 至少重复n次\n\n**{n, m}** 重复n到m次\n\n**()** 匹配括号内的内容 例如：(123) 表示匹配数字 123\n\n**[]** 匹配括号内的某个内容 例如：[123] 表示匹配数字 1、2、3\n\n**[0-9]** 匹配单个数字\n\n**[0-9]+** 匹配多个数字\n\n**[^xyz]** 表示匹配除了x、y、z之外的任意字符\n\n**[^]** 匹配一切字符，其中包括换行符\n\n**0-9** 表示匹配0到9中的某一个数字，包括0和9\n\n**[\\S\\s]** 匹配一切字符\n\n**匹配手机号码的正则表达式** /^1(3[0-9]|4[57]|5[0-35-9]|7[0135678]|8[0-9])\\d{8}$/\n\n## 参考链接\n- [RegExp对象](http://javascript.ruanyifeng.com/stdlib/regexp.html)\n- [玩转 JavaScript 正则表达式](https://www.qcloud.com/community/article/675364001489391659?fromSource=gwzcw.92887.92887.92887)\n- [正则表达式30分钟入门教程](https://deerchao.net/tutorials/regex/regex.htm)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[常用的正则表达式](http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/)】","source":"_posts/常用的正则表达式.md","raw":"---\ntitle: 常用的正则表达式\ncategories:\n  - 正则表达式\ntags:\n  - 正则表达式\ndate: 2017-12-13 15:18:08\n---\n\n整理的一些常用的正则表达式\n<!--more-->\n\n\n**^** 表示字符串的开始位置\n\n**$** 表示字符串的结束位置\n\n**+** 加号前面的字符至少出现一次或多次，等同于{1,}\n\n**\\*** 星号前面的字符可以不出现、可以出现一次、可以出现多次，等同于{0,}\n\n**?** 问号前面的字符只能出现0次或1次，等同于{0, 1}\n\n**.** 匹配除回车(\\r)、换行(\\n) 、行分隔符(\\u2028) 和 段分隔符(\\u2029) 以外的所有字符\n\n**|** 表示或者，即cat|dog表示匹配cat或dog\n\n**\\d** 匹配0-9之间的任意一个数字，相当于[0-9]\n\n**\\d+** 匹配一个或多个连续的数字\n\n**\\D** 匹配除0-9以外的任意字符，相当于[^0-9]\n\n**\\w** 匹配任意的字母、数字和下划线，相当于[A-Za-z0-9_]\n\n**\\W** 匹配除字母、数字和下划线以外的字符，相当于[^A-Za-z0-9_]\n\n**\\s** 匹配空格（包括制表符、空格符、换行符等），相等于[\\t\\r\\n\\v\\f]\n\n**\\S** 匹配非空格的字符，相当于[^\\t\\r\\n\\v\\f]\n\n**\\b** 匹配词的边界，即匹配词的开头和结尾\n\n**\\B** 匹配非词边界，即匹配词的中间\n\n**\\cX** 表示Ctrl-[X]，其中的X是A-Z之中任一个英文字母，用来匹配控制字符\n\n**[\\b]** 匹配退格键(U+0008)，不要与\\b混淆\n\n**\\n** 匹配换行键\n\n**\\r** 匹配回车键\n\n**\\t** 匹配制表符tab（U+0009）\n\n**\\v** 匹配垂直制表符（U+000B）\n\n**\\f** 匹配换页符（U+000C）\n\n**\\0** 匹配null字符（U+0000）\n\n**\\xhh** 匹配一个以两位十六进制数（\\x00-\\xFF）表示的字符\n\n**\\uhhhh** 匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的unicode字符\n\n**{n}** 恰好重复n次\n\n**{n,}** 至少重复n次\n\n**{n, m}** 重复n到m次\n\n**()** 匹配括号内的内容 例如：(123) 表示匹配数字 123\n\n**[]** 匹配括号内的某个内容 例如：[123] 表示匹配数字 1、2、3\n\n**[0-9]** 匹配单个数字\n\n**[0-9]+** 匹配多个数字\n\n**[^xyz]** 表示匹配除了x、y、z之外的任意字符\n\n**[^]** 匹配一切字符，其中包括换行符\n\n**0-9** 表示匹配0到9中的某一个数字，包括0和9\n\n**[\\S\\s]** 匹配一切字符\n\n**匹配手机号码的正则表达式** /^1(3[0-9]|4[57]|5[0-35-9]|7[0135678]|8[0-9])\\d{8}$/\n\n## 参考链接\n- [RegExp对象](http://javascript.ruanyifeng.com/stdlib/regexp.html)\n- [玩转 JavaScript 正则表达式](https://www.qcloud.com/community/article/675364001489391659?fromSource=gwzcw.92887.92887.92887)\n- [正则表达式30分钟入门教程](https://deerchao.net/tutorials/regex/regex.htm)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[常用的正则表达式](http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/)】","slug":"常用的正则表达式","published":1,"updated":"2018-07-07T02:23:40.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqof000ljc7ualkum4mk","content":"<p>整理的一些常用的正则表达式<br><a id=\"more\"></a></p>\n<p><strong>^</strong> 表示字符串的开始位置</p>\n<p><strong>$</strong> 表示字符串的结束位置</p>\n<p><strong>+</strong> 加号前面的字符至少出现一次或多次，等同于{1,}</p>\n<p><strong>*</strong> 星号前面的字符可以不出现、可以出现一次、可以出现多次，等同于{0,}</p>\n<p><strong>?</strong> 问号前面的字符只能出现0次或1次，等同于{0, 1}</p>\n<p><strong>.</strong> 匹配除回车(\\r)、换行(\\n) 、行分隔符(\\u2028) 和 段分隔符(\\u2029) 以外的所有字符</p>\n<p><strong>|</strong> 表示或者，即cat|dog表示匹配cat或dog</p>\n<p><strong>\\d</strong> 匹配0-9之间的任意一个数字，相当于[0-9]</p>\n<p><strong>\\d+</strong> 匹配一个或多个连续的数字</p>\n<p><strong>\\D</strong> 匹配除0-9以外的任意字符，相当于[^0-9]</p>\n<p><strong>\\w</strong> 匹配任意的字母、数字和下划线，相当于[A-Za-z0-9_]</p>\n<p><strong>\\W</strong> 匹配除字母、数字和下划线以外的字符，相当于[^A-Za-z0-9_]</p>\n<p><strong>\\s</strong> 匹配空格（包括制表符、空格符、换行符等），相等于[\\t\\r\\n\\v\\f]</p>\n<p><strong>\\S</strong> 匹配非空格的字符，相当于[^\\t\\r\\n\\v\\f]</p>\n<p><strong>\\b</strong> 匹配词的边界，即匹配词的开头和结尾</p>\n<p><strong>\\B</strong> 匹配非词边界，即匹配词的中间</p>\n<p><strong>\\cX</strong> 表示Ctrl-[X]，其中的X是A-Z之中任一个英文字母，用来匹配控制字符</p>\n<p><strong>[\\b]</strong> 匹配退格键(U+0008)，不要与\\b混淆</p>\n<p><strong>\\n</strong> 匹配换行键</p>\n<p><strong>\\r</strong> 匹配回车键</p>\n<p><strong>\\t</strong> 匹配制表符tab（U+0009）</p>\n<p><strong>\\v</strong> 匹配垂直制表符（U+000B）</p>\n<p><strong>\\f</strong> 匹配换页符（U+000C）</p>\n<p><strong>\\0</strong> 匹配null字符（U+0000）</p>\n<p><strong>\\xhh</strong> 匹配一个以两位十六进制数（\\x00-\\xFF）表示的字符</p>\n<p><strong>\\uhhhh</strong> 匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的unicode字符</p>\n<p><strong>{n}</strong> 恰好重复n次</p>\n<p><strong>{n,}</strong> 至少重复n次</p>\n<p><strong>{n, m}</strong> 重复n到m次</p>\n<p><strong>()</strong> 匹配括号内的内容 例如：(123) 表示匹配数字 123</p>\n<p><strong>[]</strong> 匹配括号内的某个内容 例如：[123] 表示匹配数字 1、2、3</p>\n<p><strong>[0-9]</strong> 匹配单个数字</p>\n<p><strong>[0-9]+</strong> 匹配多个数字</p>\n<p><strong>[^xyz]</strong> 表示匹配除了x、y、z之外的任意字符</p>\n<p><strong>[^]</strong> 匹配一切字符，其中包括换行符</p>\n<p><strong>0-9</strong> 表示匹配0到9中的某一个数字，包括0和9</p>\n<p><strong>[\\S\\s]</strong> 匹配一切字符</p>\n<p><strong>匹配手机号码的正则表达式</strong> /^1(3[0-9]|4[57]|5[0-35-9]|7[0135678]|8[0-9])\\d{8}$/</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://javascript.ruanyifeng.com/stdlib/regexp.html\" target=\"_blank\" rel=\"noopener\">RegExp对象</a></li>\n<li><a href=\"https://www.qcloud.com/community/article/675364001489391659?fromSource=gwzcw.92887.92887.92887\" target=\"_blank\" rel=\"noopener\">玩转 JavaScript 正则表达式</a></li>\n<li><a href=\"https://deerchao.net/tutorials/regex/regex.htm\" target=\"_blank\" rel=\"noopener\">正则表达式30分钟入门教程</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/\">常用的正则表达式</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>整理的一些常用的正则表达式<br>","more":"</p>\n<p><strong>^</strong> 表示字符串的开始位置</p>\n<p><strong>$</strong> 表示字符串的结束位置</p>\n<p><strong>+</strong> 加号前面的字符至少出现一次或多次，等同于{1,}</p>\n<p><strong>*</strong> 星号前面的字符可以不出现、可以出现一次、可以出现多次，等同于{0,}</p>\n<p><strong>?</strong> 问号前面的字符只能出现0次或1次，等同于{0, 1}</p>\n<p><strong>.</strong> 匹配除回车(\\r)、换行(\\n) 、行分隔符(\\u2028) 和 段分隔符(\\u2029) 以外的所有字符</p>\n<p><strong>|</strong> 表示或者，即cat|dog表示匹配cat或dog</p>\n<p><strong>\\d</strong> 匹配0-9之间的任意一个数字，相当于[0-9]</p>\n<p><strong>\\d+</strong> 匹配一个或多个连续的数字</p>\n<p><strong>\\D</strong> 匹配除0-9以外的任意字符，相当于[^0-9]</p>\n<p><strong>\\w</strong> 匹配任意的字母、数字和下划线，相当于[A-Za-z0-9_]</p>\n<p><strong>\\W</strong> 匹配除字母、数字和下划线以外的字符，相当于[^A-Za-z0-9_]</p>\n<p><strong>\\s</strong> 匹配空格（包括制表符、空格符、换行符等），相等于[\\t\\r\\n\\v\\f]</p>\n<p><strong>\\S</strong> 匹配非空格的字符，相当于[^\\t\\r\\n\\v\\f]</p>\n<p><strong>\\b</strong> 匹配词的边界，即匹配词的开头和结尾</p>\n<p><strong>\\B</strong> 匹配非词边界，即匹配词的中间</p>\n<p><strong>\\cX</strong> 表示Ctrl-[X]，其中的X是A-Z之中任一个英文字母，用来匹配控制字符</p>\n<p><strong>[\\b]</strong> 匹配退格键(U+0008)，不要与\\b混淆</p>\n<p><strong>\\n</strong> 匹配换行键</p>\n<p><strong>\\r</strong> 匹配回车键</p>\n<p><strong>\\t</strong> 匹配制表符tab（U+0009）</p>\n<p><strong>\\v</strong> 匹配垂直制表符（U+000B）</p>\n<p><strong>\\f</strong> 匹配换页符（U+000C）</p>\n<p><strong>\\0</strong> 匹配null字符（U+0000）</p>\n<p><strong>\\xhh</strong> 匹配一个以两位十六进制数（\\x00-\\xFF）表示的字符</p>\n<p><strong>\\uhhhh</strong> 匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的unicode字符</p>\n<p><strong>{n}</strong> 恰好重复n次</p>\n<p><strong>{n,}</strong> 至少重复n次</p>\n<p><strong>{n, m}</strong> 重复n到m次</p>\n<p><strong>()</strong> 匹配括号内的内容 例如：(123) 表示匹配数字 123</p>\n<p><strong>[]</strong> 匹配括号内的某个内容 例如：[123] 表示匹配数字 1、2、3</p>\n<p><strong>[0-9]</strong> 匹配单个数字</p>\n<p><strong>[0-9]+</strong> 匹配多个数字</p>\n<p><strong>[^xyz]</strong> 表示匹配除了x、y、z之外的任意字符</p>\n<p><strong>[^]</strong> 匹配一切字符，其中包括换行符</p>\n<p><strong>0-9</strong> 表示匹配0到9中的某一个数字，包括0和9</p>\n<p><strong>[\\S\\s]</strong> 匹配一切字符</p>\n<p><strong>匹配手机号码的正则表达式</strong> /^1(3[0-9]|4[57]|5[0-35-9]|7[0135678]|8[0-9])\\d{8}$/</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://javascript.ruanyifeng.com/stdlib/regexp.html\" target=\"_blank\" rel=\"noopener\">RegExp对象</a></li>\n<li><a href=\"https://www.qcloud.com/community/article/675364001489391659?fromSource=gwzcw.92887.92887.92887\" target=\"_blank\" rel=\"noopener\">玩转 JavaScript 正则表达式</a></li>\n<li><a href=\"https://deerchao.net/tutorials/regex/regex.htm\" target=\"_blank\" rel=\"noopener\">正则表达式30分钟入门教程</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/\">常用的正则表达式</a>】</p>\n</blockquote>"},{"title":"常见的WebStrom使用技巧和Chrome使用技巧","date":"2017-03-02T16:00:00.000Z","_content":"\n自己平时总结的一些使用WebStrom的使用技巧和Chrome浏览器使用技巧\n<!--more-->\n\n## WebStrom使用技巧\n\n- **标签名 + Tab键**可以快速输入一个标签 例如：div + Tab键可以快速输入：`<div></div>`\n\n\n- **选中代码**按下 **Ctrl + D** 可以同时实现复制和粘贴\n\n\n- 左手按住**Alt键**，右手按住**鼠标左键往下拉**可以选中下拉线上的内容\n\n\n- 在WebStrom中输入`div*10`并且按下**Tab键**可以一次性输入10个div\n\n\n- 在WebStrom中输入`div{item$}*10`并且按下**Tab键**可以一次性输入10个div并且div中的内容依次是item1、item2、item3….item10\n\n\n- 在WebStrom中输入`div.box$*3`并且按下**Tab键**，可以一次性输入3个div，并且div的类选择器名称依次是box1、box2、box3\n\n\n- 在WebStrom中输入`div#box$*3`并且按下**Tab键**，可以一次性输入3个div，并且div的id选择器名称依次是box1、box2、box3\n\n\n- 按住**Ctrl键**，并且按住**鼠标左键**，拖动鼠标，选中代码，松开鼠标左键后代码仍能处于被选中的状态，此时可以对代码做一系列的操作\n\n\n- **! + Tab键**快速输入HTML5框架代码\n\n\n- `html:5` + **Tab键**也可以快速输入HTML5框架代码\n\n\n- `html:xt` + **Tab键**可以快速输入HTML4框架代码\n\n\n- 查找的快捷键 **Ctrl + F**\n\n\n- 替换的快捷键 **Ctrl + R**  \n\n\n- 格式化代码的快捷键 **Ctrl + Alt + L**  \n\n\n- `meta:vp` + **Tab键**可以快速输入viewport  \n\n\n- 全局搜索的快捷键**Ctrl + Shift + N**\n\n\n- **修改代码模板：**单击File --> Settings --> Editor --> File and Code Templates\n\n## Chrome浏览器使用技巧\n- 在浏览器中打开调试窗口的快捷键**F12** 或者 **Ctrl + Shift + I** 或者 **Ctrl + Shift + J**\n\n\n- 在Chrome浏览器下的console窗口中实现代码换行的快捷键 **Shift + Enter**\n\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[常见的WebStrom使用技巧](http://meishadevs.com/blog/%E5%B8%B8%E8%A7%81%E7%9A%84WebStrom%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/)】","source":"_posts/常见的WebStrom使用技巧.md","raw":"---\ntitle: 常见的WebStrom使用技巧和Chrome使用技巧\ndate: 2017-03-03\ncategories:\n\t- WebStrom\n\t- Chrome\ntags:\n    - WebStrom\n    - Chrome\n---\n\n自己平时总结的一些使用WebStrom的使用技巧和Chrome浏览器使用技巧\n<!--more-->\n\n## WebStrom使用技巧\n\n- **标签名 + Tab键**可以快速输入一个标签 例如：div + Tab键可以快速输入：`<div></div>`\n\n\n- **选中代码**按下 **Ctrl + D** 可以同时实现复制和粘贴\n\n\n- 左手按住**Alt键**，右手按住**鼠标左键往下拉**可以选中下拉线上的内容\n\n\n- 在WebStrom中输入`div*10`并且按下**Tab键**可以一次性输入10个div\n\n\n- 在WebStrom中输入`div{item$}*10`并且按下**Tab键**可以一次性输入10个div并且div中的内容依次是item1、item2、item3….item10\n\n\n- 在WebStrom中输入`div.box$*3`并且按下**Tab键**，可以一次性输入3个div，并且div的类选择器名称依次是box1、box2、box3\n\n\n- 在WebStrom中输入`div#box$*3`并且按下**Tab键**，可以一次性输入3个div，并且div的id选择器名称依次是box1、box2、box3\n\n\n- 按住**Ctrl键**，并且按住**鼠标左键**，拖动鼠标，选中代码，松开鼠标左键后代码仍能处于被选中的状态，此时可以对代码做一系列的操作\n\n\n- **! + Tab键**快速输入HTML5框架代码\n\n\n- `html:5` + **Tab键**也可以快速输入HTML5框架代码\n\n\n- `html:xt` + **Tab键**可以快速输入HTML4框架代码\n\n\n- 查找的快捷键 **Ctrl + F**\n\n\n- 替换的快捷键 **Ctrl + R**  \n\n\n- 格式化代码的快捷键 **Ctrl + Alt + L**  \n\n\n- `meta:vp` + **Tab键**可以快速输入viewport  \n\n\n- 全局搜索的快捷键**Ctrl + Shift + N**\n\n\n- **修改代码模板：**单击File --> Settings --> Editor --> File and Code Templates\n\n## Chrome浏览器使用技巧\n- 在浏览器中打开调试窗口的快捷键**F12** 或者 **Ctrl + Shift + I** 或者 **Ctrl + Shift + J**\n\n\n- 在Chrome浏览器下的console窗口中实现代码换行的快捷键 **Shift + Enter**\n\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[常见的WebStrom使用技巧](http://meishadevs.com/blog/%E5%B8%B8%E8%A7%81%E7%9A%84WebStrom%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/)】","slug":"常见的WebStrom使用技巧","published":1,"updated":"2018-07-10T09:52:29.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqof000mjc7uwuvhdkwf","content":"<p>自己平时总结的一些使用WebStrom的使用技巧和Chrome浏览器使用技巧<br><a id=\"more\"></a></p>\n<h2 id=\"WebStrom使用技巧\"><a href=\"#WebStrom使用技巧\" class=\"headerlink\" title=\"WebStrom使用技巧\"></a>WebStrom使用技巧</h2><ul>\n<li><strong>标签名 + Tab键</strong>可以快速输入一个标签 例如：div + Tab键可以快速输入：<code>&lt;div&gt;&lt;/div&gt;</code></li>\n</ul>\n<ul>\n<li><strong>选中代码</strong>按下 <strong>Ctrl + D</strong> 可以同时实现复制和粘贴</li>\n</ul>\n<ul>\n<li>左手按住<strong>Alt键</strong>，右手按住<strong>鼠标左键往下拉</strong>可以选中下拉线上的内容</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div*10</code>并且按下<strong>Tab键</strong>可以一次性输入10个div</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div{item$}*10</code>并且按下<strong>Tab键</strong>可以一次性输入10个div并且div中的内容依次是item1、item2、item3….item10</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div.box$*3</code>并且按下<strong>Tab键</strong>，可以一次性输入3个div，并且div的类选择器名称依次是box1、box2、box3</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div#box$*3</code>并且按下<strong>Tab键</strong>，可以一次性输入3个div，并且div的id选择器名称依次是box1、box2、box3</li>\n</ul>\n<ul>\n<li>按住<strong>Ctrl键</strong>，并且按住<strong>鼠标左键</strong>，拖动鼠标，选中代码，松开鼠标左键后代码仍能处于被选中的状态，此时可以对代码做一系列的操作</li>\n</ul>\n<ul>\n<li><strong>! + Tab键</strong>快速输入HTML5框架代码</li>\n</ul>\n<ul>\n<li><code>html:5</code> + <strong>Tab键</strong>也可以快速输入HTML5框架代码</li>\n</ul>\n<ul>\n<li><code>html:xt</code> + <strong>Tab键</strong>可以快速输入HTML4框架代码</li>\n</ul>\n<ul>\n<li>查找的快捷键 <strong>Ctrl + F</strong></li>\n</ul>\n<ul>\n<li>替换的快捷键 <strong>Ctrl + R</strong>  </li>\n</ul>\n<ul>\n<li>格式化代码的快捷键 <strong>Ctrl + Alt + L</strong>  </li>\n</ul>\n<ul>\n<li><code>meta:vp</code> + <strong>Tab键</strong>可以快速输入viewport  </li>\n</ul>\n<ul>\n<li>全局搜索的快捷键<strong>Ctrl + Shift + N</strong></li>\n</ul>\n<ul>\n<li><strong>修改代码模板：</strong>单击File –&gt; Settings –&gt; Editor –&gt; File and Code Templates</li>\n</ul>\n<h2 id=\"Chrome浏览器使用技巧\"><a href=\"#Chrome浏览器使用技巧\" class=\"headerlink\" title=\"Chrome浏览器使用技巧\"></a>Chrome浏览器使用技巧</h2><ul>\n<li>在浏览器中打开调试窗口的快捷键<strong>F12</strong> 或者 <strong>Ctrl + Shift + I</strong> 或者 <strong>Ctrl + Shift + J</strong></li>\n</ul>\n<ul>\n<li>在Chrome浏览器下的console窗口中实现代码换行的快捷键 <strong>Shift + Enter</strong></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E8%A7%81%E7%9A%84WebStrom%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/\">常见的WebStrom使用技巧</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些使用WebStrom的使用技巧和Chrome浏览器使用技巧<br>","more":"</p>\n<h2 id=\"WebStrom使用技巧\"><a href=\"#WebStrom使用技巧\" class=\"headerlink\" title=\"WebStrom使用技巧\"></a>WebStrom使用技巧</h2><ul>\n<li><strong>标签名 + Tab键</strong>可以快速输入一个标签 例如：div + Tab键可以快速输入：<code>&lt;div&gt;&lt;/div&gt;</code></li>\n</ul>\n<ul>\n<li><strong>选中代码</strong>按下 <strong>Ctrl + D</strong> 可以同时实现复制和粘贴</li>\n</ul>\n<ul>\n<li>左手按住<strong>Alt键</strong>，右手按住<strong>鼠标左键往下拉</strong>可以选中下拉线上的内容</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div*10</code>并且按下<strong>Tab键</strong>可以一次性输入10个div</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div{item$}*10</code>并且按下<strong>Tab键</strong>可以一次性输入10个div并且div中的内容依次是item1、item2、item3….item10</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div.box$*3</code>并且按下<strong>Tab键</strong>，可以一次性输入3个div，并且div的类选择器名称依次是box1、box2、box3</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div#box$*3</code>并且按下<strong>Tab键</strong>，可以一次性输入3个div，并且div的id选择器名称依次是box1、box2、box3</li>\n</ul>\n<ul>\n<li>按住<strong>Ctrl键</strong>，并且按住<strong>鼠标左键</strong>，拖动鼠标，选中代码，松开鼠标左键后代码仍能处于被选中的状态，此时可以对代码做一系列的操作</li>\n</ul>\n<ul>\n<li><strong>! + Tab键</strong>快速输入HTML5框架代码</li>\n</ul>\n<ul>\n<li><code>html:5</code> + <strong>Tab键</strong>也可以快速输入HTML5框架代码</li>\n</ul>\n<ul>\n<li><code>html:xt</code> + <strong>Tab键</strong>可以快速输入HTML4框架代码</li>\n</ul>\n<ul>\n<li>查找的快捷键 <strong>Ctrl + F</strong></li>\n</ul>\n<ul>\n<li>替换的快捷键 <strong>Ctrl + R</strong>  </li>\n</ul>\n<ul>\n<li>格式化代码的快捷键 <strong>Ctrl + Alt + L</strong>  </li>\n</ul>\n<ul>\n<li><code>meta:vp</code> + <strong>Tab键</strong>可以快速输入viewport  </li>\n</ul>\n<ul>\n<li>全局搜索的快捷键<strong>Ctrl + Shift + N</strong></li>\n</ul>\n<ul>\n<li><strong>修改代码模板：</strong>单击File –&gt; Settings –&gt; Editor –&gt; File and Code Templates</li>\n</ul>\n<h2 id=\"Chrome浏览器使用技巧\"><a href=\"#Chrome浏览器使用技巧\" class=\"headerlink\" title=\"Chrome浏览器使用技巧\"></a>Chrome浏览器使用技巧</h2><ul>\n<li>在浏览器中打开调试窗口的快捷键<strong>F12</strong> 或者 <strong>Ctrl + Shift + I</strong> 或者 <strong>Ctrl + Shift + J</strong></li>\n</ul>\n<ul>\n<li>在Chrome浏览器下的console窗口中实现代码换行的快捷键 <strong>Shift + Enter</strong></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E8%A7%81%E7%9A%84WebStrom%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/\">常见的WebStrom使用技巧</a>】</p>\n</blockquote>"},{"title":"常见的CSS样式兼容性写法","date":"2017-03-04T16:00:00.000Z","_content":"\n自己平时整理的一些CSS样式的兼容性写法\n<!--more-->\n\n##### 1. 设置透明度\n\n\t在IE6中使用 filter: alpha(opacity = 40);\n\t在其他浏览器中使用 opacity: 0.4;\n\n##### 2. 设置行高\n\n\t/*\\9表示兼容所有的IE浏览器*/  \n\tline-height: 35px\\9;\n\n##### 3. 清除浮动\n\n\t .clearfix:after {\n\t    content: '';\n\t    height: 0;\n\t    clear: both;\n\t    overflow: hidden;\n\t    visibility: hidden;\n\t    display: block;\n\t}\n\n\t.clearfix {\n\t    *zoom: 1;\n\t}\n\n##### 4. 禁止用户选择文本\n\t\n\t -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n##### 5. 使用绝对定位将子元素元素的宽度设为父元素宽度的100%，将子元素的高度设为父元素高度的100%\n\n\t.parent {\n\t\tposition: relative\n\t}\n\n\t.child {\n\t\t position: absolute;\n\t     left: 0;\n\t     right: 0;\n\t     top: 0;\n\t\t bottom: 0;\n\t}\n\n##### 6. 使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间\n\n\t.parent {\n        position: relative;\n    }\n\n\t.child {\n\t\t-webkit-transform: translate(-50%, -50%);\n    \t-moz-transform: translate(-50%, -50%);\n\t    -ms-transform: translate(-50%, -50%);\n\t    -o-transform: translate(-50%, -50%);\n\t    transform: translate(-50%, -50%);\n\t    position: absolute;\n\t    left: 50%;\n\t    top: 50%;\n\t}\n\n##### 7. 使用flex将子元素设置到父元素的正中间\n\n\t.parent {\n\t\tdisplay: flex;\n\t    justify-content: center;\n\t    align-items: center;\n\t}\n\n##### 8. 隐藏溢出标签中的文本并且在标签最后增加一个省略号\n\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\n##### 9. 使子元素相对于父元素在水平方向和竖直方向上都居中\n\n\t.parent {\n        position: relative;\n    }\n\n    .child {\n        margin: auto;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    }\n\n##### 10. 在移动设备上设置 1px 大小的边框\n\n \t.border-1px {\n        position: relative;\n    }\n\n    .border-1px::after {\n        content: '';\n        width: 100%;\n        border-top: 1px solid #ccc;\n        display: block;\n        position: absolute;\n        left: 0;\n        bottom: 0;\n    }\n\n    /* 如果网页在最小屏幕像素比为1.5的移动设备上运行 */\n    @media (-webkit-min-device-pixel-ratio: 1.5),(min-device-pixel-ratio: 1.5) {\n        .border-1px::after {\n            -webkit-transform: scaleY(0.7);\n            transform: scaleY(0.7);\n        }\n    }\n\n    /* 如果网页在最小屏幕像素比为2的移动设备上运行 */\n    @media (-webkit-min-device-pixel-ratio: 2),(min-device-pixel-ratio: 2) {\n        .border-1px::after {\n            -webkit-transform: scaleY(0.5);\n            transform: scaleY(0.5);\n        }\n    }\n\n##### 11. 使用 flex 布局的兼容性写法\n\n\t.flex {\n\t    display: -webkit-box;\n\t    display: -webkit-flex;\n\t    display: flex;\n\t}\n\n##### 12. 使用 flex 布局实现元素均等分配\n\n\t.flex-1 {\n\t\t-webkit-flex: 1;\n\t    flex: 1;\n\t}\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[常见的CSS样式兼容性写法](http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/)】","source":"_posts/常见的CSS样式兼容性写法.md","raw":"---\ntitle: 常见的CSS样式兼容性写法\ndate: 2017-03-05\ncategories:\n\t- CSS\ntags:\n    - CSS\n---\n\n自己平时整理的一些CSS样式的兼容性写法\n<!--more-->\n\n##### 1. 设置透明度\n\n\t在IE6中使用 filter: alpha(opacity = 40);\n\t在其他浏览器中使用 opacity: 0.4;\n\n##### 2. 设置行高\n\n\t/*\\9表示兼容所有的IE浏览器*/  \n\tline-height: 35px\\9;\n\n##### 3. 清除浮动\n\n\t .clearfix:after {\n\t    content: '';\n\t    height: 0;\n\t    clear: both;\n\t    overflow: hidden;\n\t    visibility: hidden;\n\t    display: block;\n\t}\n\n\t.clearfix {\n\t    *zoom: 1;\n\t}\n\n##### 4. 禁止用户选择文本\n\t\n\t -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n##### 5. 使用绝对定位将子元素元素的宽度设为父元素宽度的100%，将子元素的高度设为父元素高度的100%\n\n\t.parent {\n\t\tposition: relative\n\t}\n\n\t.child {\n\t\t position: absolute;\n\t     left: 0;\n\t     right: 0;\n\t     top: 0;\n\t\t bottom: 0;\n\t}\n\n##### 6. 使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间\n\n\t.parent {\n        position: relative;\n    }\n\n\t.child {\n\t\t-webkit-transform: translate(-50%, -50%);\n    \t-moz-transform: translate(-50%, -50%);\n\t    -ms-transform: translate(-50%, -50%);\n\t    -o-transform: translate(-50%, -50%);\n\t    transform: translate(-50%, -50%);\n\t    position: absolute;\n\t    left: 50%;\n\t    top: 50%;\n\t}\n\n##### 7. 使用flex将子元素设置到父元素的正中间\n\n\t.parent {\n\t\tdisplay: flex;\n\t    justify-content: center;\n\t    align-items: center;\n\t}\n\n##### 8. 隐藏溢出标签中的文本并且在标签最后增加一个省略号\n\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\n##### 9. 使子元素相对于父元素在水平方向和竖直方向上都居中\n\n\t.parent {\n        position: relative;\n    }\n\n    .child {\n        margin: auto;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    }\n\n##### 10. 在移动设备上设置 1px 大小的边框\n\n \t.border-1px {\n        position: relative;\n    }\n\n    .border-1px::after {\n        content: '';\n        width: 100%;\n        border-top: 1px solid #ccc;\n        display: block;\n        position: absolute;\n        left: 0;\n        bottom: 0;\n    }\n\n    /* 如果网页在最小屏幕像素比为1.5的移动设备上运行 */\n    @media (-webkit-min-device-pixel-ratio: 1.5),(min-device-pixel-ratio: 1.5) {\n        .border-1px::after {\n            -webkit-transform: scaleY(0.7);\n            transform: scaleY(0.7);\n        }\n    }\n\n    /* 如果网页在最小屏幕像素比为2的移动设备上运行 */\n    @media (-webkit-min-device-pixel-ratio: 2),(min-device-pixel-ratio: 2) {\n        .border-1px::after {\n            -webkit-transform: scaleY(0.5);\n            transform: scaleY(0.5);\n        }\n    }\n\n##### 11. 使用 flex 布局的兼容性写法\n\n\t.flex {\n\t    display: -webkit-box;\n\t    display: -webkit-flex;\n\t    display: flex;\n\t}\n\n##### 12. 使用 flex 布局实现元素均等分配\n\n\t.flex-1 {\n\t\t-webkit-flex: 1;\n\t    flex: 1;\n\t}\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[常见的CSS样式兼容性写法](http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/)】","slug":"常见的CSS样式兼容性写法","published":1,"updated":"2018-07-07T02:23:40.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqof000njc7ukm8qt2sc","content":"<p>自己平时整理的一些CSS样式的兼容性写法<br><a id=\"more\"></a></p>\n<h5 id=\"1-设置透明度\"><a href=\"#1-设置透明度\" class=\"headerlink\" title=\"1. 设置透明度\"></a>1. 设置透明度</h5><pre><code>在IE6中使用 filter: alpha(opacity = 40);\n在其他浏览器中使用 opacity: 0.4;\n</code></pre><h5 id=\"2-设置行高\"><a href=\"#2-设置行高\" class=\"headerlink\" title=\"2. 设置行高\"></a>2. 设置行高</h5><pre><code>/*\\9表示兼容所有的IE浏览器*/  \nline-height: 35px\\9;\n</code></pre><h5 id=\"3-清除浮动\"><a href=\"#3-清除浮动\" class=\"headerlink\" title=\"3. 清除浮动\"></a>3. 清除浮动</h5><pre><code> .clearfix:after {\n    content: &apos;&apos;;\n    height: 0;\n    clear: both;\n    overflow: hidden;\n    visibility: hidden;\n    display: block;\n}\n\n.clearfix {\n    *zoom: 1;\n}\n</code></pre><h5 id=\"4-禁止用户选择文本\"><a href=\"#4-禁止用户选择文本\" class=\"headerlink\" title=\"4. 禁止用户选择文本\"></a>4. 禁止用户选择文本</h5><pre><code> -moz-user-select: -moz-none;\n-khtml-user-select: none;\n-webkit-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n</code></pre><h5 id=\"5-使用绝对定位将子元素元素的宽度设为父元素宽度的100-，将子元素的高度设为父元素高度的100\"><a href=\"#5-使用绝对定位将子元素元素的宽度设为父元素宽度的100-，将子元素的高度设为父元素高度的100\" class=\"headerlink\" title=\"5. 使用绝对定位将子元素元素的宽度设为父元素宽度的100%，将子元素的高度设为父元素高度的100%\"></a>5. 使用绝对定位将子元素元素的宽度设为父元素宽度的100%，将子元素的高度设为父元素高度的100%</h5><pre><code>.parent {\n    position: relative\n}\n\n.child {\n     position: absolute;\n     left: 0;\n     right: 0;\n     top: 0;\n     bottom: 0;\n}\n</code></pre><h5 id=\"6-使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间\"><a href=\"#6-使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间\" class=\"headerlink\" title=\"6. 使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间\"></a>6. 使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间</h5><pre><code>.parent {\n    position: relative;\n}\n\n.child {\n    -webkit-transform: translate(-50%, -50%);\n    -moz-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    -o-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    position: absolute;\n    left: 50%;\n    top: 50%;\n}\n</code></pre><h5 id=\"7-使用flex将子元素设置到父元素的正中间\"><a href=\"#7-使用flex将子元素设置到父元素的正中间\" class=\"headerlink\" title=\"7. 使用flex将子元素设置到父元素的正中间\"></a>7. 使用flex将子元素设置到父元素的正中间</h5><pre><code>.parent {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n</code></pre><h5 id=\"8-隐藏溢出标签中的文本并且在标签最后增加一个省略号\"><a href=\"#8-隐藏溢出标签中的文本并且在标签最后增加一个省略号\" class=\"headerlink\" title=\"8. 隐藏溢出标签中的文本并且在标签最后增加一个省略号\"></a>8. 隐藏溢出标签中的文本并且在标签最后增加一个省略号</h5><pre><code>overflow: hidden;\nwhite-space: nowrap;\ntext-overflow: ellipsis;\n</code></pre><h5 id=\"9-使子元素相对于父元素在水平方向和竖直方向上都居中\"><a href=\"#9-使子元素相对于父元素在水平方向和竖直方向上都居中\" class=\"headerlink\" title=\"9. 使子元素相对于父元素在水平方向和竖直方向上都居中\"></a>9. 使子元素相对于父元素在水平方向和竖直方向上都居中</h5><pre><code>.parent {\n    position: relative;\n}\n\n.child {\n    margin: auto;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n</code></pre><h5 id=\"10-在移动设备上设置-1px-大小的边框\"><a href=\"#10-在移动设备上设置-1px-大小的边框\" class=\"headerlink\" title=\"10. 在移动设备上设置 1px 大小的边框\"></a>10. 在移动设备上设置 1px 大小的边框</h5><pre><code> .border-1px {\n    position: relative;\n}\n\n.border-1px::after {\n    content: &apos;&apos;;\n    width: 100%;\n    border-top: 1px solid #ccc;\n    display: block;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n}\n\n/* 如果网页在最小屏幕像素比为1.5的移动设备上运行 */\n@media (-webkit-min-device-pixel-ratio: 1.5),(min-device-pixel-ratio: 1.5) {\n    .border-1px::after {\n        -webkit-transform: scaleY(0.7);\n        transform: scaleY(0.7);\n    }\n}\n\n/* 如果网页在最小屏幕像素比为2的移动设备上运行 */\n@media (-webkit-min-device-pixel-ratio: 2),(min-device-pixel-ratio: 2) {\n    .border-1px::after {\n        -webkit-transform: scaleY(0.5);\n        transform: scaleY(0.5);\n    }\n}\n</code></pre><h5 id=\"11-使用-flex-布局的兼容性写法\"><a href=\"#11-使用-flex-布局的兼容性写法\" class=\"headerlink\" title=\"11. 使用 flex 布局的兼容性写法\"></a>11. 使用 flex 布局的兼容性写法</h5><pre><code>.flex {\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: flex;\n}\n</code></pre><h5 id=\"12-使用-flex-布局实现元素均等分配\"><a href=\"#12-使用-flex-布局实现元素均等分配\" class=\"headerlink\" title=\"12. 使用 flex 布局实现元素均等分配\"></a>12. 使用 flex 布局实现元素均等分配</h5><pre><code>.flex-1 {\n    -webkit-flex: 1;\n    flex: 1;\n}\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/\">常见的CSS样式兼容性写法</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时整理的一些CSS样式的兼容性写法<br>","more":"</p>\n<h5 id=\"1-设置透明度\"><a href=\"#1-设置透明度\" class=\"headerlink\" title=\"1. 设置透明度\"></a>1. 设置透明度</h5><pre><code>在IE6中使用 filter: alpha(opacity = 40);\n在其他浏览器中使用 opacity: 0.4;\n</code></pre><h5 id=\"2-设置行高\"><a href=\"#2-设置行高\" class=\"headerlink\" title=\"2. 设置行高\"></a>2. 设置行高</h5><pre><code>/*\\9表示兼容所有的IE浏览器*/  \nline-height: 35px\\9;\n</code></pre><h5 id=\"3-清除浮动\"><a href=\"#3-清除浮动\" class=\"headerlink\" title=\"3. 清除浮动\"></a>3. 清除浮动</h5><pre><code> .clearfix:after {\n    content: &apos;&apos;;\n    height: 0;\n    clear: both;\n    overflow: hidden;\n    visibility: hidden;\n    display: block;\n}\n\n.clearfix {\n    *zoom: 1;\n}\n</code></pre><h5 id=\"4-禁止用户选择文本\"><a href=\"#4-禁止用户选择文本\" class=\"headerlink\" title=\"4. 禁止用户选择文本\"></a>4. 禁止用户选择文本</h5><pre><code> -moz-user-select: -moz-none;\n-khtml-user-select: none;\n-webkit-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n</code></pre><h5 id=\"5-使用绝对定位将子元素元素的宽度设为父元素宽度的100-，将子元素的高度设为父元素高度的100\"><a href=\"#5-使用绝对定位将子元素元素的宽度设为父元素宽度的100-，将子元素的高度设为父元素高度的100\" class=\"headerlink\" title=\"5. 使用绝对定位将子元素元素的宽度设为父元素宽度的100%，将子元素的高度设为父元素高度的100%\"></a>5. 使用绝对定位将子元素元素的宽度设为父元素宽度的100%，将子元素的高度设为父元素高度的100%</h5><pre><code>.parent {\n    position: relative\n}\n\n.child {\n     position: absolute;\n     left: 0;\n     right: 0;\n     top: 0;\n     bottom: 0;\n}\n</code></pre><h5 id=\"6-使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间\"><a href=\"#6-使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间\" class=\"headerlink\" title=\"6. 使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间\"></a>6. 使用绝对定位加CSS3中的transform将子元素设置到父元素的正中间</h5><pre><code>.parent {\n    position: relative;\n}\n\n.child {\n    -webkit-transform: translate(-50%, -50%);\n    -moz-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    -o-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    position: absolute;\n    left: 50%;\n    top: 50%;\n}\n</code></pre><h5 id=\"7-使用flex将子元素设置到父元素的正中间\"><a href=\"#7-使用flex将子元素设置到父元素的正中间\" class=\"headerlink\" title=\"7. 使用flex将子元素设置到父元素的正中间\"></a>7. 使用flex将子元素设置到父元素的正中间</h5><pre><code>.parent {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n</code></pre><h5 id=\"8-隐藏溢出标签中的文本并且在标签最后增加一个省略号\"><a href=\"#8-隐藏溢出标签中的文本并且在标签最后增加一个省略号\" class=\"headerlink\" title=\"8. 隐藏溢出标签中的文本并且在标签最后增加一个省略号\"></a>8. 隐藏溢出标签中的文本并且在标签最后增加一个省略号</h5><pre><code>overflow: hidden;\nwhite-space: nowrap;\ntext-overflow: ellipsis;\n</code></pre><h5 id=\"9-使子元素相对于父元素在水平方向和竖直方向上都居中\"><a href=\"#9-使子元素相对于父元素在水平方向和竖直方向上都居中\" class=\"headerlink\" title=\"9. 使子元素相对于父元素在水平方向和竖直方向上都居中\"></a>9. 使子元素相对于父元素在水平方向和竖直方向上都居中</h5><pre><code>.parent {\n    position: relative;\n}\n\n.child {\n    margin: auto;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n</code></pre><h5 id=\"10-在移动设备上设置-1px-大小的边框\"><a href=\"#10-在移动设备上设置-1px-大小的边框\" class=\"headerlink\" title=\"10. 在移动设备上设置 1px 大小的边框\"></a>10. 在移动设备上设置 1px 大小的边框</h5><pre><code> .border-1px {\n    position: relative;\n}\n\n.border-1px::after {\n    content: &apos;&apos;;\n    width: 100%;\n    border-top: 1px solid #ccc;\n    display: block;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n}\n\n/* 如果网页在最小屏幕像素比为1.5的移动设备上运行 */\n@media (-webkit-min-device-pixel-ratio: 1.5),(min-device-pixel-ratio: 1.5) {\n    .border-1px::after {\n        -webkit-transform: scaleY(0.7);\n        transform: scaleY(0.7);\n    }\n}\n\n/* 如果网页在最小屏幕像素比为2的移动设备上运行 */\n@media (-webkit-min-device-pixel-ratio: 2),(min-device-pixel-ratio: 2) {\n    .border-1px::after {\n        -webkit-transform: scaleY(0.5);\n        transform: scaleY(0.5);\n    }\n}\n</code></pre><h5 id=\"11-使用-flex-布局的兼容性写法\"><a href=\"#11-使用-flex-布局的兼容性写法\" class=\"headerlink\" title=\"11. 使用 flex 布局的兼容性写法\"></a>11. 使用 flex 布局的兼容性写法</h5><pre><code>.flex {\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: flex;\n}\n</code></pre><h5 id=\"12-使用-flex-布局实现元素均等分配\"><a href=\"#12-使用-flex-布局实现元素均等分配\" class=\"headerlink\" title=\"12. 使用 flex 布局实现元素均等分配\"></a>12. 使用 flex 布局实现元素均等分配</h5><pre><code>.flex-1 {\n    -webkit-flex: 1;\n    flex: 1;\n}\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/\">常见的CSS样式兼容性写法</a>】</p>\n</blockquote>"},{"title":"平时遇到的前端笔试题和面试题","date":"2018-04-10T09:07:48.000Z","_content":"\n我最近一个多月都在忙着找工作，这些是在面试过程中遇到的一些笔试题和面试题。\n<!--more-->\n\n**1、10 + '20' = ? 再加 '20' 呢？**  \n\n\t10 + '20' = '1020' \n\t'1020' + '20' = '102020'\n \n**2、请写出 Ajax 请求中用到的函数**  \n\n\tvar xhr = new XMLHttpRequest();\n\txhr.open('GET/POST', 'http://localhost:8080?username=meishadevs', true);\n\txhr.onreadystatechange = function() {};\n\txhr.send();\n\n**3、使用正则表达式提取出url值为 https://map.baidu.com/x/y/z 中的 [map.baidu.com](map.baidu.com)**  \n\n\t/https:\\/\\/([^\\/]+)/.exec('https://map.baidu.com/x/y/z')[1]\n\t'https://map.baidu.com/x/y/z'.match(/https:\\/\\/([^\\/]+)/)[1]\n\n执行结果\n![](http://oq3pg8pg4.bkt.clouddn.com/exec.png)\n\n**4、使用ES6的方法实现数组去重**  \n\n\tlet array = [1, 1, 1, 1, 2, 3, 4, 4, 5, 3];\n\tlet set = new Set(array);\n\tlet arr = Array.from(set);\n\n**5、设计一个函数实现add(3)(4)**  \n\n\tfunction add(a) {\n\t\treturn function(b) {\n\t\t\treturn a + b;\n\t    }\n\t}\n\n\tadd(3)(4)\n\nES6的写法\n\n\tadd = a => b => a + b\n\tadd(3)(4)\n\n对ES6写法做一个变形\n\n\tadd = a => (b => a + b)\n\n再变\n\n\tadd = function (a) {\n\t\treturn (b => a + b)\n\t}\n\n再变\n\n\tadd = function (a) {\n\t\treturn function (b) {\n\t\t\treturn a + b;\n\t\t}\n\t}\n\n**6、使用Ajax实现一个表单提交功能，并跳转到提交的地址，（可以使用 jQuery 或 Zepto**）  \n\n**7、在完成第6题后使用 Promise 再实现一遍**  \n\n**8、JavaScript中的基本数据类型**  \n\n\tNumber、String、Boolean、Null、Undefined\n\n**9、一道响应式布局的题目**\n\n**10、call、apply的作用与区别**  \ncall 和 apply 都是为了改变函数体内部 this 的指向，它们的第一个参数都是调用函数的对象，call方法接收由若干个参数组成的参数列表，apply方法接收的是一个包含多个参数的数组\n\n例如使用**call**获取一组数字中的最大值\n\n\tMath.max.call(null, 1, 3, 5, 8, 2)\n\n例如使用**apply**获取一组数字中的最大值\n\n\tMath.max.apply(null, [1, 3, 5, 8, 2])\n\n**11、标准盒模型和怪异盒模型的区别**  \n标准盒模型的 box-sizing 属性的值为 content-box  \n怪异盒模型的 box-sizing 属性的值为 border-box  \n标准盒模型中 width = 内容的宽度  \n怪异盒模型中 width = 内容的宽度 + padding + border  \n\n**12、em 与 rem 的区别**  \nrem 表示根节点(html标签)的字体大小的倍数  \n当 em 作为 font-size 的单位时，表示相对于父元素的 font-size 值的倍数  \n当 em作为其他属性单位时，代表自身字体大小的倍数\n\n**13、localStorage 与 sessionStorage 的区别**  \n使用 localStorage 保存的数据，除非手动清除，否则会永久保存  \n使用 sessionStorage 保存的数据仅在当前会话下有效，关闭页面或浏览器后会被清除  \n\n**14、元素层叠**  \n参考张鑫旭大神的文章：[深入理解CSS中的层叠上下文和层叠顺序](http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n\n**15、使用原型现继承**  \n\n使用 \\_\\_proto\\_\\_ 实现继承(不推荐使用这种方式)\n\n\t//创建animal对象\n\tvar animal = {\n\t    name: \"animal\",\n\t    \n\t    eat: function () {\n\t        console.log(this.name + \" is eating\");\n\t    }\n\t};\n\t\n\t//创建dog对象\n\tvar dog = {\n\t    name: \"dog\",\n\t\n\t    //指向animal对象（dog继承自animal）\n\t    __proto__: animal\n\t};\n\t\n\t//创建cat对象\n\tvar cat = {\n\t    name: \"cat\",\n\t\n\t    //指向animal对象(cat继承自animal)\n\t    __proto__: animal\n\t};\n\t\n\tdog.eat();\n\tcat.eat();\n\n使用 prototype 实现继承\n\n\t//创建animal对象\n\tvar animal = {\n\t    name: \"animal\",\n\t\n\t    eat: function () {\n\t        console.log(this.name + \" is eating\");\n\t    }\n\t};\n\t\n\t//创建构造函数Dog\n\tfunction Dog() {\n\t    this.name = \"dog\";\n\t}\n\t\n\t//创建构造函数Cat\n\tfunction Cat() {\n\t    this.name = \"cat\";\n\t}\n\t\n\t//设置Dog的原型为animal(Dog继承自animal)\n\tDog.prototype = animal;\n\n\t//设置Cat的原型为animal(Cat继承自animal)\n\tCat.prototype = animal;\n\t\n\t//创建dog对象\n\tvar dog = new Dog();\n\n\t//创建cat对象\n\tvar cat = new Cat();\n\n\tdog.eat();\n\tcat.eat();\n\n**16、JavaScript 中事件绑定的方式**  \n\n\tbutton.onclick = function() {}\n\n\tbutton.addEventListener(\"click\", function () {});\n\n**17、设计一个函数实现判断一个数据的数据类型是不是数组**  \n\n\tfunction isArray(num) {\n    \treturn num instanceof Array;\n\t}\n\n**18、什么是浏览器的同源策略？**  \n协议相同、域名相同、端口号相同\n\n**19、什么是浏览器的标准模式和怪异模式？**  \n参考MDN上的一篇文章：[怪异模式和标准模式](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode)\n\n**20、预处理CSS有什么优点和缺点？**  \n优点：可以实现重用、自动加前缀等  \n缺点：不能直接识别，需要转换成CSS\n\n**21、Web性能优化的手段有哪些？**  \n1、减少HTTP请求数  \n2、使用CDN  \n3、给HTTP头部添加过期时间  \n4、使用Gzip压缩  \n5、样式表置于页面最前面  \n6、把JavaScript脚本放在最后面  \n7、使用外部的JavaScript和CSS  \n8、压缩JavaScript和CSS  \n9、如果使用小图标，可以将小图标制成一张雪碧图  \n\n**22、常见的HTTP状态码有哪些？**  \n参考我网上找到的一篇文章：[HTTP常见状态码 200 301 302 404 500 - starof - 博客园](http://www.cnblogs.com/starof/p/5035119.html)\n\n**23、下面代码的执行结果**  \n\t\n \tvar a = 1;\n    (function () {\n        console.log(a);\n        var a = 2;\n        console.log(a);\n    })()\n\n输出的结果是 undefined, 2\n因为这里存在变量提升，所以上面的代码可以写成下面的形式\n\n \tvar a = 1;\n    (function () {\n        var a;\n        console.log(a);\n        a = 2;\n        console.log(a);\n    })()\n\n**24、下面代码的输出结果**\n\n \tvar User = {\n        count: 1,\n        getCount: function () {\n            return this.count;\n        }\n    };\n\n    var func = User.getCount;\n    console.log(User.getCount());\n    console.log(func());\n\n输出的结果是 1, undefined，因为第一个console输出中this指向的是User对象，count是User对象的属性，第二个console输出中this指向的是window对象，window对象中没有count属性，所以输出 undefined\n\n**25、如何理解this**  \n\n1、构造函数中的this指向新创建的实例对象  \n\n\t function Person(name, age) {\n\t    this.name = name;\n\t    this.age = age;\n\t\n\t    this.printThis = function () {\n\t        console.log(this);\n\t    }\n\t}\n\n    var person = new Person(\"meishadevs\", 24);\n    person.printThis();\n\n执行结果  \n![](http://oq3pg8pg4.bkt.clouddn.com/this1.PNG)\n\n2、普通函数中的this指向函数的调用者  \n\n\tfunction printThis() {\n\t    console.log(this);\n\t}\n\n    printThis();\n\n执行结果  \n![](http://oq3pg8pg4.bkt.clouddn.com/this2.PNG)\n\n3、自执行函数中的this指向window对象  \n\n\t(function () {\n\t    console.log(this);\n\t})();\n\n执行结果  \n![](http://oq3pg8pg4.bkt.clouddn.com/this3.PNG)\n\n4、箭头函数中的this指向函数定义时所在的对象\n\n\n**26、写出以字母开头，可以包含字母或数字的4—10位的用户密码的正则表达式**\n\n\t/^[a-zA-Z][a-zA-Z0-9]{3,9}$/.test(password);\n\n**27、parent为父级div元素的类名，child为子级div元素的类名，parent和child都不定宽高且parent的宽高都大于child，请写出让child垂直水平居中的CSS**\t\n\n方法一：position + transform\n\n\t.parent {\n\t\tposition: relative;\n\t}\n\t\n\t.child {\n\t    transform: translate(-50%, -50%);\n\t    position: absolute;\n\t    left: 50%;\n\t    top: 50%;\n\t}\n\n方法二：使用flex布局\n\n\t.parent {\n\t\tdisplay: flex;\n\t    justify-content: center;\n\t    align-items: center;\n\t}\n\n**28、DOM事件流包括那三个阶段**  \n第一阶段：从window对象传导到目标节点，称为“捕获阶段”（capture phase）  \n第二阶段：在目标节点上触发，称为“目标阶段”（target phase）  \n第三阶段：从目标节点传导回window对象，称为“冒泡阶段”（bubbling phase）  \n\n**29、写出js代码合并下列两个数组，并去重**  \n\n\tlet arr1 = [2, 6, 1, 3, 8];\n\tlet arr2 = [5, 2, 7, 6, 4];\n\n实现代码\n\n\tlet arr1 = [2, 6, 1, 3, 8];\n\tlet arr2 = [5, 2, 7, 6, 4];\n\tlet arr3 = arr1.concat(arr2);\n\tlet set = new Set(arr3);\n\tlet arr4 = Array.from(set);\n\tconsole.log(arr4);\n\n**30、下面这段代码的输出结果是，如何使它输出1、2、3、4**\n\n\tfor (var i = 1; i < 5; i++) {\n\t\tsetTimeout(function () {\n\t\t    console.log(i);\n\t\t});\n\t}\n\n输出4个5，使用两种方法可以输出1、2、3、4\n\n方法1：使用自执行函数\n\n\tfor (var i = 1; i < 5; i++) {\n\t    (function (num) {\n\t        setTimeout(function () {\n\t            console.log(num);\n\t        });\n\t    })(i);\n\t}\n\n方法2：将var改成let，因为使用var声明的变量没有局部作用域，为了解决这个问题才在ES6中引入了let\n\n\tfor (let i = 1; i < 5; i++) {\n\t    setTimeout(function () {\n\t        console.log(i);\n\t    });\n\t}\n\n**31、4，4，10，10，加减乘除，怎么出24点？四个数字分别只能用一次**\n\n\t(10 * 10 - 4) / 4\n\n**32、如果你有无穷多的水，一个容积为3L的和5L的提桶，你如何准确称出4L的水**\n\n\t第一步：将装5L水的水桶装满                                               \n\t装5L水的水桶中装了5L水 \n\t装3L水的水桶没有装水\n\n   \t第二步：将装5L水的水桶中的水倒入只能装3L水的水桶中，并倒满只能转3L水的水桶   \n\t装5L水的水桶中装了2L水\n\t装3L水的水桶中装了3L水\n\n\t第三步：将装3L水的水桶中的水倒掉                                       \n\t装5L水的水桶中装了2L水 \n\t装3L水的水桶为空\n\n\t第四步：将装5L水的水桶中的2L水倒入装3L水的水桶中                           \n\t装5L水的水桶为空       \n\t装3L水的水桶中装了2L水\n\n\t第五步：将装5L水的水桶装满                                                \n\t装5L水的水桶中装了5L水\n\t装3L水的水桶中装了2L水\n\n\t第六步：将装满5L水的水桶中的水倒入装3L水的水桶中，并倒满只能装3L水的水桶    \n\t装5L水的水桶中装了4L水 \n\t装3L水的水桶中装了3L水\n\n**33、如何实现快速排序**  \n\n\tvar quickSort = function (arr) {\n\n        //如果数组中只有一个元素\n        if (arr.length <= 1) {\n\n            //直接返回改数组\n            return arr;\n        }\n\n        //获得数组中中间值的索引(基准的索引)\n        var pivotIndex = Math.floor(arr.length / 2);\n\n        //获得数组中的中间值(数组中的基准)\n        //并将该值从原数组中删除\n        var pivot = arr.splice(pivotIndex, 1)[0];\n\n        //创建数组，用于保存原数组中小于基准的值\n        var left = [];\n\n        //创建数组，用于保存原数组中大于基准的值\n        var right = [];\n\n        //遍历原数组\n        for (var i = 0; i < arr.length; i++) {\n\n            //如果原数组的值小于基准\n            if (arr[i] < pivot) {\n\n                //将数组的值保存到left数组中\n                left.push(arr[i]);\n\n            //如果原数组的值大于或等于基准\n            } else {\n                //将数组的值保存到right数组中\n                right.push(arr[i]);\n            }\n        }\n\n        //使用递归不断重复这个过程\n        return quickSort(left).concat([pivot], quickSort(right));\n    };\n\n    var array = [85, 24, 63, 45, 17, 31, 96, 50];\n    console.log('排序前:', array);\n\n    var arr = quickSort(array);\n    console.log('排序后:', arr);\n\t\n## 参考链接\n- [深入理解CSS中的层叠上下文和层叠顺序](http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n- [Javascript：一个屌丝的逆袭](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513059&idx=1&sn=a2eaf97d9e3000d15a33681d1b720463&scene=21#wechat_redirect)\n- [javascript王国的一次旅行，一个没有类的世界怎么玩转面向对象？](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513786&idx=1&sn=6f51ad314e3ef3e1575e032568477f3a&scene=0#wechat_redirect&rd2werd=1#wechat_redirect)\n- [javascript王国之函数教主](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513789&idx=1&sn=e2e39002a915291fa06050c8116c2f96&chksm=80d67b7eb7a1f2681267fa53c624add554c47ed1c39dc8d44b98b0a414c80a646e52ad399173&scene=4&rd2werd=1#wechat_redirect)\n- [怪异模式和标准模式](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode)\n- [HTTP常见状态码 200 301 302 404 500 - starof - 博客园](http://www.cnblogs.com/starof/p/5035119.html)\n- [快速排序（Quicksort）的Javascript实现](http://www.ruanyifeng.com/blog/2011/04/quicksort_in_javascript.html)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[平时遇到的前端笔试题和面试题](http://meishadevs.com/blog/%E5%B9%B3%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AF%95%E9%A2%98%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/)】","source":"_posts/平时遇到的前端笔试题和面试题.md","raw":"---\ntitle: 平时遇到的前端笔试题和面试题\ncategories:\n  - 面试\ntags:\n  - 面试\n \ndate: 2018-04-10 17:07:48\n---\n\n我最近一个多月都在忙着找工作，这些是在面试过程中遇到的一些笔试题和面试题。\n<!--more-->\n\n**1、10 + '20' = ? 再加 '20' 呢？**  \n\n\t10 + '20' = '1020' \n\t'1020' + '20' = '102020'\n \n**2、请写出 Ajax 请求中用到的函数**  \n\n\tvar xhr = new XMLHttpRequest();\n\txhr.open('GET/POST', 'http://localhost:8080?username=meishadevs', true);\n\txhr.onreadystatechange = function() {};\n\txhr.send();\n\n**3、使用正则表达式提取出url值为 https://map.baidu.com/x/y/z 中的 [map.baidu.com](map.baidu.com)**  \n\n\t/https:\\/\\/([^\\/]+)/.exec('https://map.baidu.com/x/y/z')[1]\n\t'https://map.baidu.com/x/y/z'.match(/https:\\/\\/([^\\/]+)/)[1]\n\n执行结果\n![](http://oq3pg8pg4.bkt.clouddn.com/exec.png)\n\n**4、使用ES6的方法实现数组去重**  \n\n\tlet array = [1, 1, 1, 1, 2, 3, 4, 4, 5, 3];\n\tlet set = new Set(array);\n\tlet arr = Array.from(set);\n\n**5、设计一个函数实现add(3)(4)**  \n\n\tfunction add(a) {\n\t\treturn function(b) {\n\t\t\treturn a + b;\n\t    }\n\t}\n\n\tadd(3)(4)\n\nES6的写法\n\n\tadd = a => b => a + b\n\tadd(3)(4)\n\n对ES6写法做一个变形\n\n\tadd = a => (b => a + b)\n\n再变\n\n\tadd = function (a) {\n\t\treturn (b => a + b)\n\t}\n\n再变\n\n\tadd = function (a) {\n\t\treturn function (b) {\n\t\t\treturn a + b;\n\t\t}\n\t}\n\n**6、使用Ajax实现一个表单提交功能，并跳转到提交的地址，（可以使用 jQuery 或 Zepto**）  \n\n**7、在完成第6题后使用 Promise 再实现一遍**  \n\n**8、JavaScript中的基本数据类型**  \n\n\tNumber、String、Boolean、Null、Undefined\n\n**9、一道响应式布局的题目**\n\n**10、call、apply的作用与区别**  \ncall 和 apply 都是为了改变函数体内部 this 的指向，它们的第一个参数都是调用函数的对象，call方法接收由若干个参数组成的参数列表，apply方法接收的是一个包含多个参数的数组\n\n例如使用**call**获取一组数字中的最大值\n\n\tMath.max.call(null, 1, 3, 5, 8, 2)\n\n例如使用**apply**获取一组数字中的最大值\n\n\tMath.max.apply(null, [1, 3, 5, 8, 2])\n\n**11、标准盒模型和怪异盒模型的区别**  \n标准盒模型的 box-sizing 属性的值为 content-box  \n怪异盒模型的 box-sizing 属性的值为 border-box  \n标准盒模型中 width = 内容的宽度  \n怪异盒模型中 width = 内容的宽度 + padding + border  \n\n**12、em 与 rem 的区别**  \nrem 表示根节点(html标签)的字体大小的倍数  \n当 em 作为 font-size 的单位时，表示相对于父元素的 font-size 值的倍数  \n当 em作为其他属性单位时，代表自身字体大小的倍数\n\n**13、localStorage 与 sessionStorage 的区别**  \n使用 localStorage 保存的数据，除非手动清除，否则会永久保存  \n使用 sessionStorage 保存的数据仅在当前会话下有效，关闭页面或浏览器后会被清除  \n\n**14、元素层叠**  \n参考张鑫旭大神的文章：[深入理解CSS中的层叠上下文和层叠顺序](http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n\n**15、使用原型现继承**  \n\n使用 \\_\\_proto\\_\\_ 实现继承(不推荐使用这种方式)\n\n\t//创建animal对象\n\tvar animal = {\n\t    name: \"animal\",\n\t    \n\t    eat: function () {\n\t        console.log(this.name + \" is eating\");\n\t    }\n\t};\n\t\n\t//创建dog对象\n\tvar dog = {\n\t    name: \"dog\",\n\t\n\t    //指向animal对象（dog继承自animal）\n\t    __proto__: animal\n\t};\n\t\n\t//创建cat对象\n\tvar cat = {\n\t    name: \"cat\",\n\t\n\t    //指向animal对象(cat继承自animal)\n\t    __proto__: animal\n\t};\n\t\n\tdog.eat();\n\tcat.eat();\n\n使用 prototype 实现继承\n\n\t//创建animal对象\n\tvar animal = {\n\t    name: \"animal\",\n\t\n\t    eat: function () {\n\t        console.log(this.name + \" is eating\");\n\t    }\n\t};\n\t\n\t//创建构造函数Dog\n\tfunction Dog() {\n\t    this.name = \"dog\";\n\t}\n\t\n\t//创建构造函数Cat\n\tfunction Cat() {\n\t    this.name = \"cat\";\n\t}\n\t\n\t//设置Dog的原型为animal(Dog继承自animal)\n\tDog.prototype = animal;\n\n\t//设置Cat的原型为animal(Cat继承自animal)\n\tCat.prototype = animal;\n\t\n\t//创建dog对象\n\tvar dog = new Dog();\n\n\t//创建cat对象\n\tvar cat = new Cat();\n\n\tdog.eat();\n\tcat.eat();\n\n**16、JavaScript 中事件绑定的方式**  \n\n\tbutton.onclick = function() {}\n\n\tbutton.addEventListener(\"click\", function () {});\n\n**17、设计一个函数实现判断一个数据的数据类型是不是数组**  \n\n\tfunction isArray(num) {\n    \treturn num instanceof Array;\n\t}\n\n**18、什么是浏览器的同源策略？**  \n协议相同、域名相同、端口号相同\n\n**19、什么是浏览器的标准模式和怪异模式？**  \n参考MDN上的一篇文章：[怪异模式和标准模式](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode)\n\n**20、预处理CSS有什么优点和缺点？**  \n优点：可以实现重用、自动加前缀等  \n缺点：不能直接识别，需要转换成CSS\n\n**21、Web性能优化的手段有哪些？**  \n1、减少HTTP请求数  \n2、使用CDN  \n3、给HTTP头部添加过期时间  \n4、使用Gzip压缩  \n5、样式表置于页面最前面  \n6、把JavaScript脚本放在最后面  \n7、使用外部的JavaScript和CSS  \n8、压缩JavaScript和CSS  \n9、如果使用小图标，可以将小图标制成一张雪碧图  \n\n**22、常见的HTTP状态码有哪些？**  \n参考我网上找到的一篇文章：[HTTP常见状态码 200 301 302 404 500 - starof - 博客园](http://www.cnblogs.com/starof/p/5035119.html)\n\n**23、下面代码的执行结果**  \n\t\n \tvar a = 1;\n    (function () {\n        console.log(a);\n        var a = 2;\n        console.log(a);\n    })()\n\n输出的结果是 undefined, 2\n因为这里存在变量提升，所以上面的代码可以写成下面的形式\n\n \tvar a = 1;\n    (function () {\n        var a;\n        console.log(a);\n        a = 2;\n        console.log(a);\n    })()\n\n**24、下面代码的输出结果**\n\n \tvar User = {\n        count: 1,\n        getCount: function () {\n            return this.count;\n        }\n    };\n\n    var func = User.getCount;\n    console.log(User.getCount());\n    console.log(func());\n\n输出的结果是 1, undefined，因为第一个console输出中this指向的是User对象，count是User对象的属性，第二个console输出中this指向的是window对象，window对象中没有count属性，所以输出 undefined\n\n**25、如何理解this**  \n\n1、构造函数中的this指向新创建的实例对象  \n\n\t function Person(name, age) {\n\t    this.name = name;\n\t    this.age = age;\n\t\n\t    this.printThis = function () {\n\t        console.log(this);\n\t    }\n\t}\n\n    var person = new Person(\"meishadevs\", 24);\n    person.printThis();\n\n执行结果  \n![](http://oq3pg8pg4.bkt.clouddn.com/this1.PNG)\n\n2、普通函数中的this指向函数的调用者  \n\n\tfunction printThis() {\n\t    console.log(this);\n\t}\n\n    printThis();\n\n执行结果  \n![](http://oq3pg8pg4.bkt.clouddn.com/this2.PNG)\n\n3、自执行函数中的this指向window对象  \n\n\t(function () {\n\t    console.log(this);\n\t})();\n\n执行结果  \n![](http://oq3pg8pg4.bkt.clouddn.com/this3.PNG)\n\n4、箭头函数中的this指向函数定义时所在的对象\n\n\n**26、写出以字母开头，可以包含字母或数字的4—10位的用户密码的正则表达式**\n\n\t/^[a-zA-Z][a-zA-Z0-9]{3,9}$/.test(password);\n\n**27、parent为父级div元素的类名，child为子级div元素的类名，parent和child都不定宽高且parent的宽高都大于child，请写出让child垂直水平居中的CSS**\t\n\n方法一：position + transform\n\n\t.parent {\n\t\tposition: relative;\n\t}\n\t\n\t.child {\n\t    transform: translate(-50%, -50%);\n\t    position: absolute;\n\t    left: 50%;\n\t    top: 50%;\n\t}\n\n方法二：使用flex布局\n\n\t.parent {\n\t\tdisplay: flex;\n\t    justify-content: center;\n\t    align-items: center;\n\t}\n\n**28、DOM事件流包括那三个阶段**  \n第一阶段：从window对象传导到目标节点，称为“捕获阶段”（capture phase）  \n第二阶段：在目标节点上触发，称为“目标阶段”（target phase）  \n第三阶段：从目标节点传导回window对象，称为“冒泡阶段”（bubbling phase）  \n\n**29、写出js代码合并下列两个数组，并去重**  \n\n\tlet arr1 = [2, 6, 1, 3, 8];\n\tlet arr2 = [5, 2, 7, 6, 4];\n\n实现代码\n\n\tlet arr1 = [2, 6, 1, 3, 8];\n\tlet arr2 = [5, 2, 7, 6, 4];\n\tlet arr3 = arr1.concat(arr2);\n\tlet set = new Set(arr3);\n\tlet arr4 = Array.from(set);\n\tconsole.log(arr4);\n\n**30、下面这段代码的输出结果是，如何使它输出1、2、3、4**\n\n\tfor (var i = 1; i < 5; i++) {\n\t\tsetTimeout(function () {\n\t\t    console.log(i);\n\t\t});\n\t}\n\n输出4个5，使用两种方法可以输出1、2、3、4\n\n方法1：使用自执行函数\n\n\tfor (var i = 1; i < 5; i++) {\n\t    (function (num) {\n\t        setTimeout(function () {\n\t            console.log(num);\n\t        });\n\t    })(i);\n\t}\n\n方法2：将var改成let，因为使用var声明的变量没有局部作用域，为了解决这个问题才在ES6中引入了let\n\n\tfor (let i = 1; i < 5; i++) {\n\t    setTimeout(function () {\n\t        console.log(i);\n\t    });\n\t}\n\n**31、4，4，10，10，加减乘除，怎么出24点？四个数字分别只能用一次**\n\n\t(10 * 10 - 4) / 4\n\n**32、如果你有无穷多的水，一个容积为3L的和5L的提桶，你如何准确称出4L的水**\n\n\t第一步：将装5L水的水桶装满                                               \n\t装5L水的水桶中装了5L水 \n\t装3L水的水桶没有装水\n\n   \t第二步：将装5L水的水桶中的水倒入只能装3L水的水桶中，并倒满只能转3L水的水桶   \n\t装5L水的水桶中装了2L水\n\t装3L水的水桶中装了3L水\n\n\t第三步：将装3L水的水桶中的水倒掉                                       \n\t装5L水的水桶中装了2L水 \n\t装3L水的水桶为空\n\n\t第四步：将装5L水的水桶中的2L水倒入装3L水的水桶中                           \n\t装5L水的水桶为空       \n\t装3L水的水桶中装了2L水\n\n\t第五步：将装5L水的水桶装满                                                \n\t装5L水的水桶中装了5L水\n\t装3L水的水桶中装了2L水\n\n\t第六步：将装满5L水的水桶中的水倒入装3L水的水桶中，并倒满只能装3L水的水桶    \n\t装5L水的水桶中装了4L水 \n\t装3L水的水桶中装了3L水\n\n**33、如何实现快速排序**  \n\n\tvar quickSort = function (arr) {\n\n        //如果数组中只有一个元素\n        if (arr.length <= 1) {\n\n            //直接返回改数组\n            return arr;\n        }\n\n        //获得数组中中间值的索引(基准的索引)\n        var pivotIndex = Math.floor(arr.length / 2);\n\n        //获得数组中的中间值(数组中的基准)\n        //并将该值从原数组中删除\n        var pivot = arr.splice(pivotIndex, 1)[0];\n\n        //创建数组，用于保存原数组中小于基准的值\n        var left = [];\n\n        //创建数组，用于保存原数组中大于基准的值\n        var right = [];\n\n        //遍历原数组\n        for (var i = 0; i < arr.length; i++) {\n\n            //如果原数组的值小于基准\n            if (arr[i] < pivot) {\n\n                //将数组的值保存到left数组中\n                left.push(arr[i]);\n\n            //如果原数组的值大于或等于基准\n            } else {\n                //将数组的值保存到right数组中\n                right.push(arr[i]);\n            }\n        }\n\n        //使用递归不断重复这个过程\n        return quickSort(left).concat([pivot], quickSort(right));\n    };\n\n    var array = [85, 24, 63, 45, 17, 31, 96, 50];\n    console.log('排序前:', array);\n\n    var arr = quickSort(array);\n    console.log('排序后:', arr);\n\t\n## 参考链接\n- [深入理解CSS中的层叠上下文和层叠顺序](http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/)\n- [Javascript：一个屌丝的逆袭](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513059&idx=1&sn=a2eaf97d9e3000d15a33681d1b720463&scene=21#wechat_redirect)\n- [javascript王国的一次旅行，一个没有类的世界怎么玩转面向对象？](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513786&idx=1&sn=6f51ad314e3ef3e1575e032568477f3a&scene=0#wechat_redirect&rd2werd=1#wechat_redirect)\n- [javascript王国之函数教主](https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513789&idx=1&sn=e2e39002a915291fa06050c8116c2f96&chksm=80d67b7eb7a1f2681267fa53c624add554c47ed1c39dc8d44b98b0a414c80a646e52ad399173&scene=4&rd2werd=1#wechat_redirect)\n- [怪异模式和标准模式](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode)\n- [HTTP常见状态码 200 301 302 404 500 - starof - 博客园](http://www.cnblogs.com/starof/p/5035119.html)\n- [快速排序（Quicksort）的Javascript实现](http://www.ruanyifeng.com/blog/2011/04/quicksort_in_javascript.html)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[平时遇到的前端笔试题和面试题](http://meishadevs.com/blog/%E5%B9%B3%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AF%95%E9%A2%98%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/)】","slug":"平时遇到的前端笔试题和面试题","published":1,"updated":"2018-07-07T02:23:40.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqof000ojc7u7sk6himh","content":"<p>我最近一个多月都在忙着找工作，这些是在面试过程中遇到的一些笔试题和面试题。<br><a id=\"more\"></a></p>\n<p><strong>1、10 + ‘20’ = ? 再加 ‘20’ 呢？</strong>  </p>\n<pre><code>10 + &apos;20&apos; = &apos;1020&apos; \n&apos;1020&apos; + &apos;20&apos; = &apos;102020&apos;\n</code></pre><p><strong>2、请写出 Ajax 请求中用到的函数</strong>  </p>\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.open(&apos;GET/POST&apos;, &apos;http://localhost:8080?username=meishadevs&apos;, true);\nxhr.onreadystatechange = function() {};\nxhr.send();\n</code></pre><p><strong>3、使用正则表达式提取出url值为 <a href=\"https://map.baidu.com/x/y/z\" target=\"_blank\" rel=\"noopener\">https://map.baidu.com/x/y/z</a> 中的 <a href=\"map.baidu.com\">map.baidu.com</a></strong>  </p>\n<pre><code>/https:\\/\\/([^\\/]+)/.exec(&apos;https://map.baidu.com/x/y/z&apos;)[1]\n&apos;https://map.baidu.com/x/y/z&apos;.match(/https:\\/\\/([^\\/]+)/)[1]\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/exec.png\" alt=\"\"></p>\n<p><strong>4、使用ES6的方法实现数组去重</strong>  </p>\n<pre><code>let array = [1, 1, 1, 1, 2, 3, 4, 4, 5, 3];\nlet set = new Set(array);\nlet arr = Array.from(set);\n</code></pre><p><strong>5、设计一个函数实现add(3)(4)</strong>  </p>\n<pre><code>function add(a) {\n    return function(b) {\n        return a + b;\n    }\n}\n\nadd(3)(4)\n</code></pre><p>ES6的写法</p>\n<pre><code>add = a =&gt; b =&gt; a + b\nadd(3)(4)\n</code></pre><p>对ES6写法做一个变形</p>\n<pre><code>add = a =&gt; (b =&gt; a + b)\n</code></pre><p>再变</p>\n<pre><code>add = function (a) {\n    return (b =&gt; a + b)\n}\n</code></pre><p>再变</p>\n<pre><code>add = function (a) {\n    return function (b) {\n        return a + b;\n    }\n}\n</code></pre><p><strong>6、使用Ajax实现一个表单提交功能，并跳转到提交的地址，（可以使用 jQuery 或 Zepto</strong>）  </p>\n<p><strong>7、在完成第6题后使用 Promise 再实现一遍</strong>  </p>\n<p><strong>8、JavaScript中的基本数据类型</strong>  </p>\n<pre><code>Number、String、Boolean、Null、Undefined\n</code></pre><p><strong>9、一道响应式布局的题目</strong></p>\n<p><strong>10、call、apply的作用与区别</strong><br>call 和 apply 都是为了改变函数体内部 this 的指向，它们的第一个参数都是调用函数的对象，call方法接收由若干个参数组成的参数列表，apply方法接收的是一个包含多个参数的数组</p>\n<p>例如使用<strong>call</strong>获取一组数字中的最大值</p>\n<pre><code>Math.max.call(null, 1, 3, 5, 8, 2)\n</code></pre><p>例如使用<strong>apply</strong>获取一组数字中的最大值</p>\n<pre><code>Math.max.apply(null, [1, 3, 5, 8, 2])\n</code></pre><p><strong>11、标准盒模型和怪异盒模型的区别</strong><br>标准盒模型的 box-sizing 属性的值为 content-box<br>怪异盒模型的 box-sizing 属性的值为 border-box<br>标准盒模型中 width = 内容的宽度<br>怪异盒模型中 width = 内容的宽度 + padding + border  </p>\n<p><strong>12、em 与 rem 的区别</strong><br>rem 表示根节点(html标签)的字体大小的倍数<br>当 em 作为 font-size 的单位时，表示相对于父元素的 font-size 值的倍数<br>当 em作为其他属性单位时，代表自身字体大小的倍数</p>\n<p><strong>13、localStorage 与 sessionStorage 的区别</strong><br>使用 localStorage 保存的数据，除非手动清除，否则会永久保存<br>使用 sessionStorage 保存的数据仅在当前会话下有效，关闭页面或浏览器后会被清除  </p>\n<p><strong>14、元素层叠</strong><br>参考张鑫旭大神的文章：<a href=\"http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">深入理解CSS中的层叠上下文和层叠顺序</a></p>\n<p><strong>15、使用原型现继承</strong>  </p>\n<p>使用 __proto__ 实现继承(不推荐使用这种方式)</p>\n<pre><code>//创建animal对象\nvar animal = {\n    name: &quot;animal&quot;,\n\n    eat: function () {\n        console.log(this.name + &quot; is eating&quot;);\n    }\n};\n\n//创建dog对象\nvar dog = {\n    name: &quot;dog&quot;,\n\n    //指向animal对象（dog继承自animal）\n    __proto__: animal\n};\n\n//创建cat对象\nvar cat = {\n    name: &quot;cat&quot;,\n\n    //指向animal对象(cat继承自animal)\n    __proto__: animal\n};\n\ndog.eat();\ncat.eat();\n</code></pre><p>使用 prototype 实现继承</p>\n<pre><code>//创建animal对象\nvar animal = {\n    name: &quot;animal&quot;,\n\n    eat: function () {\n        console.log(this.name + &quot; is eating&quot;);\n    }\n};\n\n//创建构造函数Dog\nfunction Dog() {\n    this.name = &quot;dog&quot;;\n}\n\n//创建构造函数Cat\nfunction Cat() {\n    this.name = &quot;cat&quot;;\n}\n\n//设置Dog的原型为animal(Dog继承自animal)\nDog.prototype = animal;\n\n//设置Cat的原型为animal(Cat继承自animal)\nCat.prototype = animal;\n\n//创建dog对象\nvar dog = new Dog();\n\n//创建cat对象\nvar cat = new Cat();\n\ndog.eat();\ncat.eat();\n</code></pre><p><strong>16、JavaScript 中事件绑定的方式</strong>  </p>\n<pre><code>button.onclick = function() {}\n\nbutton.addEventListener(&quot;click&quot;, function () {});\n</code></pre><p><strong>17、设计一个函数实现判断一个数据的数据类型是不是数组</strong>  </p>\n<pre><code>function isArray(num) {\n    return num instanceof Array;\n}\n</code></pre><p><strong>18、什么是浏览器的同源策略？</strong><br>协议相同、域名相同、端口号相同</p>\n<p><strong>19、什么是浏览器的标准模式和怪异模式？</strong><br>参考MDN上的一篇文章：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode\" target=\"_blank\" rel=\"noopener\">怪异模式和标准模式</a></p>\n<p><strong>20、预处理CSS有什么优点和缺点？</strong><br>优点：可以实现重用、自动加前缀等<br>缺点：不能直接识别，需要转换成CSS</p>\n<p><strong>21、Web性能优化的手段有哪些？</strong><br>1、减少HTTP请求数<br>2、使用CDN<br>3、给HTTP头部添加过期时间<br>4、使用Gzip压缩<br>5、样式表置于页面最前面<br>6、把JavaScript脚本放在最后面<br>7、使用外部的JavaScript和CSS<br>8、压缩JavaScript和CSS<br>9、如果使用小图标，可以将小图标制成一张雪碧图  </p>\n<p><strong>22、常见的HTTP状态码有哪些？</strong><br>参考我网上找到的一篇文章：<a href=\"http://www.cnblogs.com/starof/p/5035119.html\" target=\"_blank\" rel=\"noopener\">HTTP常见状态码 200 301 302 404 500 - starof - 博客园</a></p>\n<p><strong>23、下面代码的执行结果</strong>  </p>\n<pre><code> var a = 1;\n(function () {\n    console.log(a);\n    var a = 2;\n    console.log(a);\n})()\n</code></pre><p>输出的结果是 undefined, 2<br>因为这里存在变量提升，所以上面的代码可以写成下面的形式</p>\n<pre><code> var a = 1;\n(function () {\n    var a;\n    console.log(a);\n    a = 2;\n    console.log(a);\n})()\n</code></pre><p><strong>24、下面代码的输出结果</strong></p>\n<pre><code> var User = {\n    count: 1,\n    getCount: function () {\n        return this.count;\n    }\n};\n\nvar func = User.getCount;\nconsole.log(User.getCount());\nconsole.log(func());\n</code></pre><p>输出的结果是 1, undefined，因为第一个console输出中this指向的是User对象，count是User对象的属性，第二个console输出中this指向的是window对象，window对象中没有count属性，所以输出 undefined</p>\n<p><strong>25、如何理解this</strong>  </p>\n<p>1、构造函数中的this指向新创建的实例对象  </p>\n<pre><code> function Person(name, age) {\n    this.name = name;\n    this.age = age;\n\n    this.printThis = function () {\n        console.log(this);\n    }\n}\n\nvar person = new Person(&quot;meishadevs&quot;, 24);\nperson.printThis();\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/this1.PNG\" alt=\"\"></p>\n<p>2、普通函数中的this指向函数的调用者  </p>\n<pre><code>function printThis() {\n    console.log(this);\n}\n\nprintThis();\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/this2.PNG\" alt=\"\"></p>\n<p>3、自执行函数中的this指向window对象  </p>\n<pre><code>(function () {\n    console.log(this);\n})();\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/this3.PNG\" alt=\"\"></p>\n<p>4、箭头函数中的this指向函数定义时所在的对象</p>\n<p><strong>26、写出以字母开头，可以包含字母或数字的4—10位的用户密码的正则表达式</strong></p>\n<pre><code>/^[a-zA-Z][a-zA-Z0-9]{3,9}$/.test(password);\n</code></pre><p><strong>27、parent为父级div元素的类名，child为子级div元素的类名，parent和child都不定宽高且parent的宽高都大于child，请写出让child垂直水平居中的CSS</strong>    </p>\n<p>方法一：position + transform</p>\n<pre><code>.parent {\n    position: relative;\n}\n\n.child {\n    transform: translate(-50%, -50%);\n    position: absolute;\n    left: 50%;\n    top: 50%;\n}\n</code></pre><p>方法二：使用flex布局</p>\n<pre><code>.parent {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n</code></pre><p><strong>28、DOM事件流包括那三个阶段</strong><br>第一阶段：从window对象传导到目标节点，称为“捕获阶段”（capture phase）<br>第二阶段：在目标节点上触发，称为“目标阶段”（target phase）<br>第三阶段：从目标节点传导回window对象，称为“冒泡阶段”（bubbling phase）  </p>\n<p><strong>29、写出js代码合并下列两个数组，并去重</strong>  </p>\n<pre><code>let arr1 = [2, 6, 1, 3, 8];\nlet arr2 = [5, 2, 7, 6, 4];\n</code></pre><p>实现代码</p>\n<pre><code>let arr1 = [2, 6, 1, 3, 8];\nlet arr2 = [5, 2, 7, 6, 4];\nlet arr3 = arr1.concat(arr2);\nlet set = new Set(arr3);\nlet arr4 = Array.from(set);\nconsole.log(arr4);\n</code></pre><p><strong>30、下面这段代码的输出结果是，如何使它输出1、2、3、4</strong></p>\n<pre><code>for (var i = 1; i &lt; 5; i++) {\n    setTimeout(function () {\n        console.log(i);\n    });\n}\n</code></pre><p>输出4个5，使用两种方法可以输出1、2、3、4</p>\n<p>方法1：使用自执行函数</p>\n<pre><code>for (var i = 1; i &lt; 5; i++) {\n    (function (num) {\n        setTimeout(function () {\n            console.log(num);\n        });\n    })(i);\n}\n</code></pre><p>方法2：将var改成let，因为使用var声明的变量没有局部作用域，为了解决这个问题才在ES6中引入了let</p>\n<pre><code>for (let i = 1; i &lt; 5; i++) {\n    setTimeout(function () {\n        console.log(i);\n    });\n}\n</code></pre><p><strong>31、4，4，10，10，加减乘除，怎么出24点？四个数字分别只能用一次</strong></p>\n<pre><code>(10 * 10 - 4) / 4\n</code></pre><p><strong>32、如果你有无穷多的水，一个容积为3L的和5L的提桶，你如何准确称出4L的水</strong></p>\n<pre><code>第一步：将装5L水的水桶装满                                               \n装5L水的水桶中装了5L水 \n装3L水的水桶没有装水\n\n   第二步：将装5L水的水桶中的水倒入只能装3L水的水桶中，并倒满只能转3L水的水桶   \n装5L水的水桶中装了2L水\n装3L水的水桶中装了3L水\n\n第三步：将装3L水的水桶中的水倒掉                                       \n装5L水的水桶中装了2L水 \n装3L水的水桶为空\n\n第四步：将装5L水的水桶中的2L水倒入装3L水的水桶中                           \n装5L水的水桶为空       \n装3L水的水桶中装了2L水\n\n第五步：将装5L水的水桶装满                                                \n装5L水的水桶中装了5L水\n装3L水的水桶中装了2L水\n\n第六步：将装满5L水的水桶中的水倒入装3L水的水桶中，并倒满只能装3L水的水桶    \n装5L水的水桶中装了4L水 \n装3L水的水桶中装了3L水\n</code></pre><p><strong>33、如何实现快速排序</strong>  </p>\n<pre><code>var quickSort = function (arr) {\n\n    //如果数组中只有一个元素\n    if (arr.length &lt;= 1) {\n\n        //直接返回改数组\n        return arr;\n    }\n\n    //获得数组中中间值的索引(基准的索引)\n    var pivotIndex = Math.floor(arr.length / 2);\n\n    //获得数组中的中间值(数组中的基准)\n    //并将该值从原数组中删除\n    var pivot = arr.splice(pivotIndex, 1)[0];\n\n    //创建数组，用于保存原数组中小于基准的值\n    var left = [];\n\n    //创建数组，用于保存原数组中大于基准的值\n    var right = [];\n\n    //遍历原数组\n    for (var i = 0; i &lt; arr.length; i++) {\n\n        //如果原数组的值小于基准\n        if (arr[i] &lt; pivot) {\n\n            //将数组的值保存到left数组中\n            left.push(arr[i]);\n\n        //如果原数组的值大于或等于基准\n        } else {\n            //将数组的值保存到right数组中\n            right.push(arr[i]);\n        }\n    }\n\n    //使用递归不断重复这个过程\n    return quickSort(left).concat([pivot], quickSort(right));\n};\n\nvar array = [85, 24, 63, 45, 17, 31, 96, 50];\nconsole.log(&apos;排序前:&apos;, array);\n\nvar arr = quickSort(array);\nconsole.log(&apos;排序后:&apos;, arr);\n</code></pre><h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">深入理解CSS中的层叠上下文和层叠顺序</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513059&amp;idx=1&amp;sn=a2eaf97d9e3000d15a33681d1b720463&amp;scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">Javascript：一个屌丝的逆袭</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513786&amp;idx=1&amp;sn=6f51ad314e3ef3e1575e032568477f3a&amp;scene=0#wechat_redirect&amp;rd2werd=1#wechat_redirect\" target=\"_blank\" rel=\"noopener\">javascript王国的一次旅行，一个没有类的世界怎么玩转面向对象？</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513789&amp;idx=1&amp;sn=e2e39002a915291fa06050c8116c2f96&amp;chksm=80d67b7eb7a1f2681267fa53c624add554c47ed1c39dc8d44b98b0a414c80a646e52ad399173&amp;scene=4&amp;rd2werd=1#wechat_redirect\" target=\"_blank\" rel=\"noopener\">javascript王国之函数教主</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode\" target=\"_blank\" rel=\"noopener\">怪异模式和标准模式</a></li>\n<li><a href=\"http://www.cnblogs.com/starof/p/5035119.html\" target=\"_blank\" rel=\"noopener\">HTTP常见状态码 200 301 302 404 500 - starof - 博客园</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2011/04/quicksort_in_javascript.html\" target=\"_blank\" rel=\"noopener\">快速排序（Quicksort）的Javascript实现</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B9%B3%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AF%95%E9%A2%98%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/\">平时遇到的前端笔试题和面试题</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>我最近一个多月都在忙着找工作，这些是在面试过程中遇到的一些笔试题和面试题。<br>","more":"</p>\n<p><strong>1、10 + ‘20’ = ? 再加 ‘20’ 呢？</strong>  </p>\n<pre><code>10 + &apos;20&apos; = &apos;1020&apos; \n&apos;1020&apos; + &apos;20&apos; = &apos;102020&apos;\n</code></pre><p><strong>2、请写出 Ajax 请求中用到的函数</strong>  </p>\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.open(&apos;GET/POST&apos;, &apos;http://localhost:8080?username=meishadevs&apos;, true);\nxhr.onreadystatechange = function() {};\nxhr.send();\n</code></pre><p><strong>3、使用正则表达式提取出url值为 <a href=\"https://map.baidu.com/x/y/z\" target=\"_blank\" rel=\"noopener\">https://map.baidu.com/x/y/z</a> 中的 <a href=\"map.baidu.com\">map.baidu.com</a></strong>  </p>\n<pre><code>/https:\\/\\/([^\\/]+)/.exec(&apos;https://map.baidu.com/x/y/z&apos;)[1]\n&apos;https://map.baidu.com/x/y/z&apos;.match(/https:\\/\\/([^\\/]+)/)[1]\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/exec.png\" alt=\"\"></p>\n<p><strong>4、使用ES6的方法实现数组去重</strong>  </p>\n<pre><code>let array = [1, 1, 1, 1, 2, 3, 4, 4, 5, 3];\nlet set = new Set(array);\nlet arr = Array.from(set);\n</code></pre><p><strong>5、设计一个函数实现add(3)(4)</strong>  </p>\n<pre><code>function add(a) {\n    return function(b) {\n        return a + b;\n    }\n}\n\nadd(3)(4)\n</code></pre><p>ES6的写法</p>\n<pre><code>add = a =&gt; b =&gt; a + b\nadd(3)(4)\n</code></pre><p>对ES6写法做一个变形</p>\n<pre><code>add = a =&gt; (b =&gt; a + b)\n</code></pre><p>再变</p>\n<pre><code>add = function (a) {\n    return (b =&gt; a + b)\n}\n</code></pre><p>再变</p>\n<pre><code>add = function (a) {\n    return function (b) {\n        return a + b;\n    }\n}\n</code></pre><p><strong>6、使用Ajax实现一个表单提交功能，并跳转到提交的地址，（可以使用 jQuery 或 Zepto</strong>）  </p>\n<p><strong>7、在完成第6题后使用 Promise 再实现一遍</strong>  </p>\n<p><strong>8、JavaScript中的基本数据类型</strong>  </p>\n<pre><code>Number、String、Boolean、Null、Undefined\n</code></pre><p><strong>9、一道响应式布局的题目</strong></p>\n<p><strong>10、call、apply的作用与区别</strong><br>call 和 apply 都是为了改变函数体内部 this 的指向，它们的第一个参数都是调用函数的对象，call方法接收由若干个参数组成的参数列表，apply方法接收的是一个包含多个参数的数组</p>\n<p>例如使用<strong>call</strong>获取一组数字中的最大值</p>\n<pre><code>Math.max.call(null, 1, 3, 5, 8, 2)\n</code></pre><p>例如使用<strong>apply</strong>获取一组数字中的最大值</p>\n<pre><code>Math.max.apply(null, [1, 3, 5, 8, 2])\n</code></pre><p><strong>11、标准盒模型和怪异盒模型的区别</strong><br>标准盒模型的 box-sizing 属性的值为 content-box<br>怪异盒模型的 box-sizing 属性的值为 border-box<br>标准盒模型中 width = 内容的宽度<br>怪异盒模型中 width = 内容的宽度 + padding + border  </p>\n<p><strong>12、em 与 rem 的区别</strong><br>rem 表示根节点(html标签)的字体大小的倍数<br>当 em 作为 font-size 的单位时，表示相对于父元素的 font-size 值的倍数<br>当 em作为其他属性单位时，代表自身字体大小的倍数</p>\n<p><strong>13、localStorage 与 sessionStorage 的区别</strong><br>使用 localStorage 保存的数据，除非手动清除，否则会永久保存<br>使用 sessionStorage 保存的数据仅在当前会话下有效，关闭页面或浏览器后会被清除  </p>\n<p><strong>14、元素层叠</strong><br>参考张鑫旭大神的文章：<a href=\"http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">深入理解CSS中的层叠上下文和层叠顺序</a></p>\n<p><strong>15、使用原型现继承</strong>  </p>\n<p>使用 __proto__ 实现继承(不推荐使用这种方式)</p>\n<pre><code>//创建animal对象\nvar animal = {\n    name: &quot;animal&quot;,\n\n    eat: function () {\n        console.log(this.name + &quot; is eating&quot;);\n    }\n};\n\n//创建dog对象\nvar dog = {\n    name: &quot;dog&quot;,\n\n    //指向animal对象（dog继承自animal）\n    __proto__: animal\n};\n\n//创建cat对象\nvar cat = {\n    name: &quot;cat&quot;,\n\n    //指向animal对象(cat继承自animal)\n    __proto__: animal\n};\n\ndog.eat();\ncat.eat();\n</code></pre><p>使用 prototype 实现继承</p>\n<pre><code>//创建animal对象\nvar animal = {\n    name: &quot;animal&quot;,\n\n    eat: function () {\n        console.log(this.name + &quot; is eating&quot;);\n    }\n};\n\n//创建构造函数Dog\nfunction Dog() {\n    this.name = &quot;dog&quot;;\n}\n\n//创建构造函数Cat\nfunction Cat() {\n    this.name = &quot;cat&quot;;\n}\n\n//设置Dog的原型为animal(Dog继承自animal)\nDog.prototype = animal;\n\n//设置Cat的原型为animal(Cat继承自animal)\nCat.prototype = animal;\n\n//创建dog对象\nvar dog = new Dog();\n\n//创建cat对象\nvar cat = new Cat();\n\ndog.eat();\ncat.eat();\n</code></pre><p><strong>16、JavaScript 中事件绑定的方式</strong>  </p>\n<pre><code>button.onclick = function() {}\n\nbutton.addEventListener(&quot;click&quot;, function () {});\n</code></pre><p><strong>17、设计一个函数实现判断一个数据的数据类型是不是数组</strong>  </p>\n<pre><code>function isArray(num) {\n    return num instanceof Array;\n}\n</code></pre><p><strong>18、什么是浏览器的同源策略？</strong><br>协议相同、域名相同、端口号相同</p>\n<p><strong>19、什么是浏览器的标准模式和怪异模式？</strong><br>参考MDN上的一篇文章：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode\" target=\"_blank\" rel=\"noopener\">怪异模式和标准模式</a></p>\n<p><strong>20、预处理CSS有什么优点和缺点？</strong><br>优点：可以实现重用、自动加前缀等<br>缺点：不能直接识别，需要转换成CSS</p>\n<p><strong>21、Web性能优化的手段有哪些？</strong><br>1、减少HTTP请求数<br>2、使用CDN<br>3、给HTTP头部添加过期时间<br>4、使用Gzip压缩<br>5、样式表置于页面最前面<br>6、把JavaScript脚本放在最后面<br>7、使用外部的JavaScript和CSS<br>8、压缩JavaScript和CSS<br>9、如果使用小图标，可以将小图标制成一张雪碧图  </p>\n<p><strong>22、常见的HTTP状态码有哪些？</strong><br>参考我网上找到的一篇文章：<a href=\"http://www.cnblogs.com/starof/p/5035119.html\" target=\"_blank\" rel=\"noopener\">HTTP常见状态码 200 301 302 404 500 - starof - 博客园</a></p>\n<p><strong>23、下面代码的执行结果</strong>  </p>\n<pre><code> var a = 1;\n(function () {\n    console.log(a);\n    var a = 2;\n    console.log(a);\n})()\n</code></pre><p>输出的结果是 undefined, 2<br>因为这里存在变量提升，所以上面的代码可以写成下面的形式</p>\n<pre><code> var a = 1;\n(function () {\n    var a;\n    console.log(a);\n    a = 2;\n    console.log(a);\n})()\n</code></pre><p><strong>24、下面代码的输出结果</strong></p>\n<pre><code> var User = {\n    count: 1,\n    getCount: function () {\n        return this.count;\n    }\n};\n\nvar func = User.getCount;\nconsole.log(User.getCount());\nconsole.log(func());\n</code></pre><p>输出的结果是 1, undefined，因为第一个console输出中this指向的是User对象，count是User对象的属性，第二个console输出中this指向的是window对象，window对象中没有count属性，所以输出 undefined</p>\n<p><strong>25、如何理解this</strong>  </p>\n<p>1、构造函数中的this指向新创建的实例对象  </p>\n<pre><code> function Person(name, age) {\n    this.name = name;\n    this.age = age;\n\n    this.printThis = function () {\n        console.log(this);\n    }\n}\n\nvar person = new Person(&quot;meishadevs&quot;, 24);\nperson.printThis();\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/this1.PNG\" alt=\"\"></p>\n<p>2、普通函数中的this指向函数的调用者  </p>\n<pre><code>function printThis() {\n    console.log(this);\n}\n\nprintThis();\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/this2.PNG\" alt=\"\"></p>\n<p>3、自执行函数中的this指向window对象  </p>\n<pre><code>(function () {\n    console.log(this);\n})();\n</code></pre><p>执行结果<br><img src=\"http://oq3pg8pg4.bkt.clouddn.com/this3.PNG\" alt=\"\"></p>\n<p>4、箭头函数中的this指向函数定义时所在的对象</p>\n<p><strong>26、写出以字母开头，可以包含字母或数字的4—10位的用户密码的正则表达式</strong></p>\n<pre><code>/^[a-zA-Z][a-zA-Z0-9]{3,9}$/.test(password);\n</code></pre><p><strong>27、parent为父级div元素的类名，child为子级div元素的类名，parent和child都不定宽高且parent的宽高都大于child，请写出让child垂直水平居中的CSS</strong>    </p>\n<p>方法一：position + transform</p>\n<pre><code>.parent {\n    position: relative;\n}\n\n.child {\n    transform: translate(-50%, -50%);\n    position: absolute;\n    left: 50%;\n    top: 50%;\n}\n</code></pre><p>方法二：使用flex布局</p>\n<pre><code>.parent {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n</code></pre><p><strong>28、DOM事件流包括那三个阶段</strong><br>第一阶段：从window对象传导到目标节点，称为“捕获阶段”（capture phase）<br>第二阶段：在目标节点上触发，称为“目标阶段”（target phase）<br>第三阶段：从目标节点传导回window对象，称为“冒泡阶段”（bubbling phase）  </p>\n<p><strong>29、写出js代码合并下列两个数组，并去重</strong>  </p>\n<pre><code>let arr1 = [2, 6, 1, 3, 8];\nlet arr2 = [5, 2, 7, 6, 4];\n</code></pre><p>实现代码</p>\n<pre><code>let arr1 = [2, 6, 1, 3, 8];\nlet arr2 = [5, 2, 7, 6, 4];\nlet arr3 = arr1.concat(arr2);\nlet set = new Set(arr3);\nlet arr4 = Array.from(set);\nconsole.log(arr4);\n</code></pre><p><strong>30、下面这段代码的输出结果是，如何使它输出1、2、3、4</strong></p>\n<pre><code>for (var i = 1; i &lt; 5; i++) {\n    setTimeout(function () {\n        console.log(i);\n    });\n}\n</code></pre><p>输出4个5，使用两种方法可以输出1、2、3、4</p>\n<p>方法1：使用自执行函数</p>\n<pre><code>for (var i = 1; i &lt; 5; i++) {\n    (function (num) {\n        setTimeout(function () {\n            console.log(num);\n        });\n    })(i);\n}\n</code></pre><p>方法2：将var改成let，因为使用var声明的变量没有局部作用域，为了解决这个问题才在ES6中引入了let</p>\n<pre><code>for (let i = 1; i &lt; 5; i++) {\n    setTimeout(function () {\n        console.log(i);\n    });\n}\n</code></pre><p><strong>31、4，4，10，10，加减乘除，怎么出24点？四个数字分别只能用一次</strong></p>\n<pre><code>(10 * 10 - 4) / 4\n</code></pre><p><strong>32、如果你有无穷多的水，一个容积为3L的和5L的提桶，你如何准确称出4L的水</strong></p>\n<pre><code>第一步：将装5L水的水桶装满                                               \n装5L水的水桶中装了5L水 \n装3L水的水桶没有装水\n\n   第二步：将装5L水的水桶中的水倒入只能装3L水的水桶中，并倒满只能转3L水的水桶   \n装5L水的水桶中装了2L水\n装3L水的水桶中装了3L水\n\n第三步：将装3L水的水桶中的水倒掉                                       \n装5L水的水桶中装了2L水 \n装3L水的水桶为空\n\n第四步：将装5L水的水桶中的2L水倒入装3L水的水桶中                           \n装5L水的水桶为空       \n装3L水的水桶中装了2L水\n\n第五步：将装5L水的水桶装满                                                \n装5L水的水桶中装了5L水\n装3L水的水桶中装了2L水\n\n第六步：将装满5L水的水桶中的水倒入装3L水的水桶中，并倒满只能装3L水的水桶    \n装5L水的水桶中装了4L水 \n装3L水的水桶中装了3L水\n</code></pre><p><strong>33、如何实现快速排序</strong>  </p>\n<pre><code>var quickSort = function (arr) {\n\n    //如果数组中只有一个元素\n    if (arr.length &lt;= 1) {\n\n        //直接返回改数组\n        return arr;\n    }\n\n    //获得数组中中间值的索引(基准的索引)\n    var pivotIndex = Math.floor(arr.length / 2);\n\n    //获得数组中的中间值(数组中的基准)\n    //并将该值从原数组中删除\n    var pivot = arr.splice(pivotIndex, 1)[0];\n\n    //创建数组，用于保存原数组中小于基准的值\n    var left = [];\n\n    //创建数组，用于保存原数组中大于基准的值\n    var right = [];\n\n    //遍历原数组\n    for (var i = 0; i &lt; arr.length; i++) {\n\n        //如果原数组的值小于基准\n        if (arr[i] &lt; pivot) {\n\n            //将数组的值保存到left数组中\n            left.push(arr[i]);\n\n        //如果原数组的值大于或等于基准\n        } else {\n            //将数组的值保存到right数组中\n            right.push(arr[i]);\n        }\n    }\n\n    //使用递归不断重复这个过程\n    return quickSort(left).concat([pivot], quickSort(right));\n};\n\nvar array = [85, 24, 63, 45, 17, 31, 96, 50];\nconsole.log(&apos;排序前:&apos;, array);\n\nvar arr = quickSort(array);\nconsole.log(&apos;排序后:&apos;, arr);\n</code></pre><h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/\" target=\"_blank\" rel=\"noopener\">深入理解CSS中的层叠上下文和层叠顺序</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513059&amp;idx=1&amp;sn=a2eaf97d9e3000d15a33681d1b720463&amp;scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">Javascript：一个屌丝的逆袭</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513786&amp;idx=1&amp;sn=6f51ad314e3ef3e1575e032568477f3a&amp;scene=0#wechat_redirect&amp;rd2werd=1#wechat_redirect\" target=\"_blank\" rel=\"noopener\">javascript王国的一次旅行，一个没有类的世界怎么玩转面向对象？</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513789&amp;idx=1&amp;sn=e2e39002a915291fa06050c8116c2f96&amp;chksm=80d67b7eb7a1f2681267fa53c624add554c47ed1c39dc8d44b98b0a414c80a646e52ad399173&amp;scene=4&amp;rd2werd=1#wechat_redirect\" target=\"_blank\" rel=\"noopener\">javascript王国之函数教主</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode\" target=\"_blank\" rel=\"noopener\">怪异模式和标准模式</a></li>\n<li><a href=\"http://www.cnblogs.com/starof/p/5035119.html\" target=\"_blank\" rel=\"noopener\">HTTP常见状态码 200 301 302 404 500 - starof - 博客园</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2011/04/quicksort_in_javascript.html\" target=\"_blank\" rel=\"noopener\">快速排序（Quicksort）的Javascript实现</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B9%B3%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AF%95%E9%A2%98%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/\">平时遇到的前端笔试题和面试题</a>】</p>\n</blockquote>"},{"title":"数据库中的视图简介","date":"2018-07-10T11:42:51.000Z","_content":"# 为什么要用视图\n我们在从数据库中查询某些数据时通常是使用 `select * from TableName where 查询条件`，例如从公告表中查询发布时间为\n\n# 什么是视图\n\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[]()】","source":"_posts/数据库中的视图简介.md","raw":"---\ntitle: 数据库中的视图简介\ncategories:\n  - 数据库\ntags:\n  - 数据库\ndate: 2018-07-10 19:42:51\n---\n# 为什么要用视图\n我们在从数据库中查询某些数据时通常是使用 `select * from TableName where 查询条件`，例如从公告表中查询发布时间为\n\n# 什么是视图\n\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[]()】","slug":"数据库中的视图简介","published":1,"updated":"2018-07-10T13:27:29.396Z","_id":"cjjfmmqof000pjc7uuc1okao6","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"为什么要用视图\"><a href=\"#为什么要用视图\" class=\"headerlink\" title=\"为什么要用视图\"></a>为什么要用视图</h1><p>我们在从数据库中查询某些数据时通常是使用 <code>select * from TableName where 查询条件</code>，例如从公告表中查询发布时间为</p>\n<h1 id=\"什么是视图\"><a href=\"#什么是视图\" class=\"headerlink\" title=\"什么是视图\"></a>什么是视图</h1><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"\"></a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"","more":"<h1 id=\"为什么要用视图\"><a href=\"#为什么要用视图\" class=\"headerlink\" title=\"为什么要用视图\"></a>为什么要用视图</h1><p>我们在从数据库中查询某些数据时通常是使用 <code>select * from TableName where 查询条件</code>，例如从公告表中查询发布时间为</p>\n<h1 id=\"什么是视图\"><a href=\"#什么是视图\" class=\"headerlink\" title=\"什么是视图\"></a>什么是视图</h1><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"\"></a>】</p>\n</blockquote>\n"},{"title":"开发中的一些小知识点","date":"2017-03-03T16:00:00.000Z","_content":"\n自己平时总结的一些开发中用到的小知识点\n<!--more-->\n\n获得网站的图标： 网址 +　“/“ + favicon.ico 如获得淘宝网的图标\n\t\n\thttp://www.taobao.com/favicon.ico\n\n网站图标一般放在网站的根目录下\n\n在网页中导入icon的代码\n\n\t<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n\n滑动时候，不选中文字的代码\n\n\twindow.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();\n\n隐藏滚动条的方法\n\n\tdocument.body.style.overflow = \"hidden\";\n\n显示滚动条的方式\n\n\tdocument.body.style.overflow = \"visible\";\n\n去掉标签自带的蓝色边框\n\n\toutline-style:none;\n\n当给标签设置display: inline-block属性的时候，标签之间会产生空隙，清除标签之间的空隙的方法是给设置了display:inline-block属性的标签的父标签设置\n\n\tfont-size : 0\n\n去掉图片底部默认的3像素空白间隙\n\n\tvertical-align: top\n\n下面的css样式表示文本的字体为宋体，文本的字体大小为14px，文本的行高为24px\n\n\tfont: 14px/24px \"宋体\"\n\n如果给line-height的值只设置一个数字，没有加单位，此时元素的行高为元素的字体大小乘以那个数字如给元素设置两个属性 line-height: 2 和 font-size: 20px，当前元素的line-height属性没有单位，此时元素的行高为\nfont-size的值 line-height的值 = 20 X 2 = 40\n\n下面的代码表示选中div标签下的第n(n为从1开始的正整数)个标签，并且这个标签必须是p标签才会被选中\n\n\tdiv p:nth-child(n)\n\n下面的代码表示选中div标签下的第n(n为从1开始的正整数)个p标签\n\n\tdiv p:nth-of-type(n)\n\n下面的代码表示选中div标签下的第偶数个标签，并且这个标签必须是p标签才会被选中\n\n\tdiv p:nth-child(even)\n\n下面的代码表示选中div标签下的第奇数个标签，并且这个标签必须是p标签才会被选中\n\n\tdiv p:nth-child(odd)\n\n`-webkit-margin-before: 1em`表示元素的上边距的高度 = 元素的字体大小 X 1，当元素的font-size: 14时候。元素的上边距的高度 = 14px X 1 = 14px，webkit指的是Chrome浏览器内核\n\nli浮动后，ul将失去高度，如要设置ul整体背景需要定义好ul的高度\n\n设置了定位的元素，在没有设置left值和top值的情况下在原来的位置不变\n\n`text-align:center`属性不仅可以使块级元素中的文本居中，还可以使块级元素中的行内元素居中\n\n`box-sizing: border-box`浏览器使用IE盒模型的方式解析标签，当标签定义了width和height时，border和padding则是被包含在宽高之内，此时内容的宽和高可以通过定义的“width”和 “height”减去相应方向上的padding值和border值得到，**即width = border-left + padding-left + 内容的宽度 + padding-right + border-right**\n\n`box-sizing:content-box`浏览器使用标准的W3C盒模型的方式解析标签，当标签定义了width和height时，标签中内容的宽度和高度不包括border和padding，当不设置`box-sizing`属性时，默认使用标准的W3C盒模型，**即width = 内容的宽度**\n\n在网页中使用Ajax，提交按钮不能设置成`<input type=\"submit\"/>`，只能设置成`<input type=\"button\"/>`\n\n在同步提交中服务器端是通过标签的`name`属性获得标签中的值，例如在网页中创建一个密码输入框`<input type=\"password\" name=\"password\"/>`，在PHP中通过`$password = $_GET['password']`;获得密码输入框中的密码,其中password表示密码输入框中name属性的值\n\n下面的语句是条件注释，表示当浏览器的版本小于IE9时候，执行条件语句中的代码\n\n\t<!--[if lt IE 9]>\n    \t<script src=\"https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n    \t<script src=\"https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js\"></script>\n\t<![endif]-->\n\n大部分主流浏览器浏览器中默认的字体大小都为16px\n\n`direction: ltr`将文本的显示方向设置为从右往左显示\n\n`flex-basis`设置弹性盒的初始长度\n\n当输入框中的单词拼写错误时，禁止产生红色波浪线的代码`<input type=\"text\" spellcheck=\"false\">`  \n\nselect标签默认情况下box-sizing属性的值为border-box  \n\n**属性选择器**  \n`E[attr]：`表示选中存在attr属性的E标签  \n`E[attr=val]：`表示选中属性的值为val的E标签  \n`E[attr~=val]：`表示选中标签的属性值以空格分割的E标签\n`E[attr*=val]：`表示选中属性值里包含val字符并且在“任意”位置的E标签  \n`E[attr^=val]：`表示选中属性值里包含val字符并且在“开始”位置的E标签  \n`E[attr$=val]：`表示选中属性值里包含val字符并且在“结束”位置的E标签\n\n**e.g.**表示举例来说、例如  \n**etc.**表示等等  \n**FAQ**表示常见的问题与解答\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[开发中的一些小知识点](http://meishadevs.com/blog/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/)】","source":"_posts/开发中的一些小知识点.md","raw":"---\ntitle: 开发中的一些小知识点\ndate: 2017-03-04\ncategories:\n\t- 前端\ntags:\n    - 前端\n---\n\n自己平时总结的一些开发中用到的小知识点\n<!--more-->\n\n获得网站的图标： 网址 +　“/“ + favicon.ico 如获得淘宝网的图标\n\t\n\thttp://www.taobao.com/favicon.ico\n\n网站图标一般放在网站的根目录下\n\n在网页中导入icon的代码\n\n\t<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n\n滑动时候，不选中文字的代码\n\n\twindow.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();\n\n隐藏滚动条的方法\n\n\tdocument.body.style.overflow = \"hidden\";\n\n显示滚动条的方式\n\n\tdocument.body.style.overflow = \"visible\";\n\n去掉标签自带的蓝色边框\n\n\toutline-style:none;\n\n当给标签设置display: inline-block属性的时候，标签之间会产生空隙，清除标签之间的空隙的方法是给设置了display:inline-block属性的标签的父标签设置\n\n\tfont-size : 0\n\n去掉图片底部默认的3像素空白间隙\n\n\tvertical-align: top\n\n下面的css样式表示文本的字体为宋体，文本的字体大小为14px，文本的行高为24px\n\n\tfont: 14px/24px \"宋体\"\n\n如果给line-height的值只设置一个数字，没有加单位，此时元素的行高为元素的字体大小乘以那个数字如给元素设置两个属性 line-height: 2 和 font-size: 20px，当前元素的line-height属性没有单位，此时元素的行高为\nfont-size的值 line-height的值 = 20 X 2 = 40\n\n下面的代码表示选中div标签下的第n(n为从1开始的正整数)个标签，并且这个标签必须是p标签才会被选中\n\n\tdiv p:nth-child(n)\n\n下面的代码表示选中div标签下的第n(n为从1开始的正整数)个p标签\n\n\tdiv p:nth-of-type(n)\n\n下面的代码表示选中div标签下的第偶数个标签，并且这个标签必须是p标签才会被选中\n\n\tdiv p:nth-child(even)\n\n下面的代码表示选中div标签下的第奇数个标签，并且这个标签必须是p标签才会被选中\n\n\tdiv p:nth-child(odd)\n\n`-webkit-margin-before: 1em`表示元素的上边距的高度 = 元素的字体大小 X 1，当元素的font-size: 14时候。元素的上边距的高度 = 14px X 1 = 14px，webkit指的是Chrome浏览器内核\n\nli浮动后，ul将失去高度，如要设置ul整体背景需要定义好ul的高度\n\n设置了定位的元素，在没有设置left值和top值的情况下在原来的位置不变\n\n`text-align:center`属性不仅可以使块级元素中的文本居中，还可以使块级元素中的行内元素居中\n\n`box-sizing: border-box`浏览器使用IE盒模型的方式解析标签，当标签定义了width和height时，border和padding则是被包含在宽高之内，此时内容的宽和高可以通过定义的“width”和 “height”减去相应方向上的padding值和border值得到，**即width = border-left + padding-left + 内容的宽度 + padding-right + border-right**\n\n`box-sizing:content-box`浏览器使用标准的W3C盒模型的方式解析标签，当标签定义了width和height时，标签中内容的宽度和高度不包括border和padding，当不设置`box-sizing`属性时，默认使用标准的W3C盒模型，**即width = 内容的宽度**\n\n在网页中使用Ajax，提交按钮不能设置成`<input type=\"submit\"/>`，只能设置成`<input type=\"button\"/>`\n\n在同步提交中服务器端是通过标签的`name`属性获得标签中的值，例如在网页中创建一个密码输入框`<input type=\"password\" name=\"password\"/>`，在PHP中通过`$password = $_GET['password']`;获得密码输入框中的密码,其中password表示密码输入框中name属性的值\n\n下面的语句是条件注释，表示当浏览器的版本小于IE9时候，执行条件语句中的代码\n\n\t<!--[if lt IE 9]>\n    \t<script src=\"https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n    \t<script src=\"https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js\"></script>\n\t<![endif]-->\n\n大部分主流浏览器浏览器中默认的字体大小都为16px\n\n`direction: ltr`将文本的显示方向设置为从右往左显示\n\n`flex-basis`设置弹性盒的初始长度\n\n当输入框中的单词拼写错误时，禁止产生红色波浪线的代码`<input type=\"text\" spellcheck=\"false\">`  \n\nselect标签默认情况下box-sizing属性的值为border-box  \n\n**属性选择器**  \n`E[attr]：`表示选中存在attr属性的E标签  \n`E[attr=val]：`表示选中属性的值为val的E标签  \n`E[attr~=val]：`表示选中标签的属性值以空格分割的E标签\n`E[attr*=val]：`表示选中属性值里包含val字符并且在“任意”位置的E标签  \n`E[attr^=val]：`表示选中属性值里包含val字符并且在“开始”位置的E标签  \n`E[attr$=val]：`表示选中属性值里包含val字符并且在“结束”位置的E标签\n\n**e.g.**表示举例来说、例如  \n**etc.**表示等等  \n**FAQ**表示常见的问题与解答\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[开发中的一些小知识点](http://meishadevs.com/blog/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/)】","slug":"开发中的一些小知识点","published":1,"updated":"2018-07-07T02:23:40.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqof000qjc7ue56vc3e6","content":"<p>自己平时总结的一些开发中用到的小知识点<br><a id=\"more\"></a></p>\n<p>获得网站的图标： 网址 +　“/“ + favicon.ico 如获得淘宝网的图标</p>\n<pre><code>http://www.taobao.com/favicon.ico\n</code></pre><p>网站图标一般放在网站的根目录下</p>\n<p>在网页中导入icon的代码</p>\n<pre><code>&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;favicon.ico&quot;&gt;\n</code></pre><p>滑动时候，不选中文字的代码</p>\n<pre><code>window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();\n</code></pre><p>隐藏滚动条的方法</p>\n<pre><code>document.body.style.overflow = &quot;hidden&quot;;\n</code></pre><p>显示滚动条的方式</p>\n<pre><code>document.body.style.overflow = &quot;visible&quot;;\n</code></pre><p>去掉标签自带的蓝色边框</p>\n<pre><code>outline-style:none;\n</code></pre><p>当给标签设置display: inline-block属性的时候，标签之间会产生空隙，清除标签之间的空隙的方法是给设置了display:inline-block属性的标签的父标签设置</p>\n<pre><code>font-size : 0\n</code></pre><p>去掉图片底部默认的3像素空白间隙</p>\n<pre><code>vertical-align: top\n</code></pre><p>下面的css样式表示文本的字体为宋体，文本的字体大小为14px，文本的行高为24px</p>\n<pre><code>font: 14px/24px &quot;宋体&quot;\n</code></pre><p>如果给line-height的值只设置一个数字，没有加单位，此时元素的行高为元素的字体大小乘以那个数字如给元素设置两个属性 line-height: 2 和 font-size: 20px，当前元素的line-height属性没有单位，此时元素的行高为<br>font-size的值 line-height的值 = 20 X 2 = 40</p>\n<p>下面的代码表示选中div标签下的第n(n为从1开始的正整数)个标签，并且这个标签必须是p标签才会被选中</p>\n<pre><code>div p:nth-child(n)\n</code></pre><p>下面的代码表示选中div标签下的第n(n为从1开始的正整数)个p标签</p>\n<pre><code>div p:nth-of-type(n)\n</code></pre><p>下面的代码表示选中div标签下的第偶数个标签，并且这个标签必须是p标签才会被选中</p>\n<pre><code>div p:nth-child(even)\n</code></pre><p>下面的代码表示选中div标签下的第奇数个标签，并且这个标签必须是p标签才会被选中</p>\n<pre><code>div p:nth-child(odd)\n</code></pre><p><code>-webkit-margin-before: 1em</code>表示元素的上边距的高度 = 元素的字体大小 X 1，当元素的font-size: 14时候。元素的上边距的高度 = 14px X 1 = 14px，webkit指的是Chrome浏览器内核</p>\n<p>li浮动后，ul将失去高度，如要设置ul整体背景需要定义好ul的高度</p>\n<p>设置了定位的元素，在没有设置left值和top值的情况下在原来的位置不变</p>\n<p><code>text-align:center</code>属性不仅可以使块级元素中的文本居中，还可以使块级元素中的行内元素居中</p>\n<p><code>box-sizing: border-box</code>浏览器使用IE盒模型的方式解析标签，当标签定义了width和height时，border和padding则是被包含在宽高之内，此时内容的宽和高可以通过定义的“width”和 “height”减去相应方向上的padding值和border值得到，<strong>即width = border-left + padding-left + 内容的宽度 + padding-right + border-right</strong></p>\n<p><code>box-sizing:content-box</code>浏览器使用标准的W3C盒模型的方式解析标签，当标签定义了width和height时，标签中内容的宽度和高度不包括border和padding，当不设置<code>box-sizing</code>属性时，默认使用标准的W3C盒模型，<strong>即width = 内容的宽度</strong></p>\n<p>在网页中使用Ajax，提交按钮不能设置成<code>&lt;input type=&quot;submit&quot;/&gt;</code>，只能设置成<code>&lt;input type=&quot;button&quot;/&gt;</code></p>\n<p>在同步提交中服务器端是通过标签的<code>name</code>属性获得标签中的值，例如在网页中创建一个密码输入框<code>&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;</code>，在PHP中通过<code>$password = $_GET[&#39;password&#39;]</code>;获得密码输入框中的密码,其中password表示密码输入框中name属性的值</p>\n<p>下面的语句是条件注释，表示当浏览器的版本小于IE9时候，执行条件语句中的代码</p>\n<pre><code>&lt;!--[if lt IE 9]&gt;\n    &lt;script src=&quot;https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre><p>大部分主流浏览器浏览器中默认的字体大小都为16px</p>\n<p><code>direction: ltr</code>将文本的显示方向设置为从右往左显示</p>\n<p><code>flex-basis</code>设置弹性盒的初始长度</p>\n<p>当输入框中的单词拼写错误时，禁止产生红色波浪线的代码<code>&lt;input type=&quot;text&quot; spellcheck=&quot;false&quot;&gt;</code>  </p>\n<p>select标签默认情况下box-sizing属性的值为border-box  </p>\n<p><strong>属性选择器</strong><br><code>E[attr]：</code>表示选中存在attr属性的E标签<br><code>E[attr=val]：</code>表示选中属性的值为val的E标签<br><code>E[attr~=val]：</code>表示选中标签的属性值以空格分割的E标签<br><code>E[attr*=val]：</code>表示选中属性值里包含val字符并且在“任意”位置的E标签<br><code>E[attr^=val]：</code>表示选中属性值里包含val字符并且在“开始”位置的E标签<br><code>E[attr$=val]：</code>表示选中属性值里包含val字符并且在“结束”位置的E标签</p>\n<p><strong>e.g.</strong>表示举例来说、例如<br><strong>etc.</strong>表示等等<br><strong>FAQ</strong>表示常见的问题与解答</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/\">开发中的一些小知识点</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些开发中用到的小知识点<br>","more":"</p>\n<p>获得网站的图标： 网址 +　“/“ + favicon.ico 如获得淘宝网的图标</p>\n<pre><code>http://www.taobao.com/favicon.ico\n</code></pre><p>网站图标一般放在网站的根目录下</p>\n<p>在网页中导入icon的代码</p>\n<pre><code>&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;favicon.ico&quot;&gt;\n</code></pre><p>滑动时候，不选中文字的代码</p>\n<pre><code>window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();\n</code></pre><p>隐藏滚动条的方法</p>\n<pre><code>document.body.style.overflow = &quot;hidden&quot;;\n</code></pre><p>显示滚动条的方式</p>\n<pre><code>document.body.style.overflow = &quot;visible&quot;;\n</code></pre><p>去掉标签自带的蓝色边框</p>\n<pre><code>outline-style:none;\n</code></pre><p>当给标签设置display: inline-block属性的时候，标签之间会产生空隙，清除标签之间的空隙的方法是给设置了display:inline-block属性的标签的父标签设置</p>\n<pre><code>font-size : 0\n</code></pre><p>去掉图片底部默认的3像素空白间隙</p>\n<pre><code>vertical-align: top\n</code></pre><p>下面的css样式表示文本的字体为宋体，文本的字体大小为14px，文本的行高为24px</p>\n<pre><code>font: 14px/24px &quot;宋体&quot;\n</code></pre><p>如果给line-height的值只设置一个数字，没有加单位，此时元素的行高为元素的字体大小乘以那个数字如给元素设置两个属性 line-height: 2 和 font-size: 20px，当前元素的line-height属性没有单位，此时元素的行高为<br>font-size的值 line-height的值 = 20 X 2 = 40</p>\n<p>下面的代码表示选中div标签下的第n(n为从1开始的正整数)个标签，并且这个标签必须是p标签才会被选中</p>\n<pre><code>div p:nth-child(n)\n</code></pre><p>下面的代码表示选中div标签下的第n(n为从1开始的正整数)个p标签</p>\n<pre><code>div p:nth-of-type(n)\n</code></pre><p>下面的代码表示选中div标签下的第偶数个标签，并且这个标签必须是p标签才会被选中</p>\n<pre><code>div p:nth-child(even)\n</code></pre><p>下面的代码表示选中div标签下的第奇数个标签，并且这个标签必须是p标签才会被选中</p>\n<pre><code>div p:nth-child(odd)\n</code></pre><p><code>-webkit-margin-before: 1em</code>表示元素的上边距的高度 = 元素的字体大小 X 1，当元素的font-size: 14时候。元素的上边距的高度 = 14px X 1 = 14px，webkit指的是Chrome浏览器内核</p>\n<p>li浮动后，ul将失去高度，如要设置ul整体背景需要定义好ul的高度</p>\n<p>设置了定位的元素，在没有设置left值和top值的情况下在原来的位置不变</p>\n<p><code>text-align:center</code>属性不仅可以使块级元素中的文本居中，还可以使块级元素中的行内元素居中</p>\n<p><code>box-sizing: border-box</code>浏览器使用IE盒模型的方式解析标签，当标签定义了width和height时，border和padding则是被包含在宽高之内，此时内容的宽和高可以通过定义的“width”和 “height”减去相应方向上的padding值和border值得到，<strong>即width = border-left + padding-left + 内容的宽度 + padding-right + border-right</strong></p>\n<p><code>box-sizing:content-box</code>浏览器使用标准的W3C盒模型的方式解析标签，当标签定义了width和height时，标签中内容的宽度和高度不包括border和padding，当不设置<code>box-sizing</code>属性时，默认使用标准的W3C盒模型，<strong>即width = 内容的宽度</strong></p>\n<p>在网页中使用Ajax，提交按钮不能设置成<code>&lt;input type=&quot;submit&quot;/&gt;</code>，只能设置成<code>&lt;input type=&quot;button&quot;/&gt;</code></p>\n<p>在同步提交中服务器端是通过标签的<code>name</code>属性获得标签中的值，例如在网页中创建一个密码输入框<code>&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;</code>，在PHP中通过<code>$password = $_GET[&#39;password&#39;]</code>;获得密码输入框中的密码,其中password表示密码输入框中name属性的值</p>\n<p>下面的语句是条件注释，表示当浏览器的版本小于IE9时候，执行条件语句中的代码</p>\n<pre><code>&lt;!--[if lt IE 9]&gt;\n    &lt;script src=&quot;https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre><p>大部分主流浏览器浏览器中默认的字体大小都为16px</p>\n<p><code>direction: ltr</code>将文本的显示方向设置为从右往左显示</p>\n<p><code>flex-basis</code>设置弹性盒的初始长度</p>\n<p>当输入框中的单词拼写错误时，禁止产生红色波浪线的代码<code>&lt;input type=&quot;text&quot; spellcheck=&quot;false&quot;&gt;</code>  </p>\n<p>select标签默认情况下box-sizing属性的值为border-box  </p>\n<p><strong>属性选择器</strong><br><code>E[attr]：</code>表示选中存在attr属性的E标签<br><code>E[attr=val]：</code>表示选中属性的值为val的E标签<br><code>E[attr~=val]：</code>表示选中标签的属性值以空格分割的E标签<br><code>E[attr*=val]：</code>表示选中属性值里包含val字符并且在“任意”位置的E标签<br><code>E[attr^=val]：</code>表示选中属性值里包含val字符并且在“开始”位置的E标签<br><code>E[attr$=val]：</code>表示选中属性值里包含val字符并且在“结束”位置的E标签</p>\n<p><strong>e.g.</strong>表示举例来说、例如<br><strong>etc.</strong>表示等等<br><strong>FAQ</strong>表示常见的问题与解答</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/\">开发中的一些小知识点</a>】</p>\n</blockquote>"},{"title":"移动Web学习笔记","date":"2017-08-31T02:23:03.000Z","_content":"\n**1. -webkit-text-size-adjust: 100%**  \n**解释：**在 Chrome 浏览器中只能设置大于或等于 12px 的字体大小，当设置了小于 12px 的字体大小时，浏览器按照 12px 的字体大小渲染字体，而设置了 **-webkit-text-size-adjust** 属性后浏览器可以渲染 12px 以下的字体大小\n\n<!--more-->\n\n**2. -webkit-tap-highlight-color: transparent**  \n**解释：**这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景，设置 **-webkit-tap-highlight-color: transparent**时就不会产生这个背景\n\n**3. lang=\"zh-cmn-Hans\"**  \n**解释：**语种名称代码，这个代码表示网页中使用的是简体普通话[点击此处查看详细解释](http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html)\n\n**4. lang=\"en\"**  \n**解释：**语种名称代码，这个代码表示网页中使用的是英语[点击此处查看详细解释](http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html)  \n\n**5. rel=\"apple-touch-icon\"**  \n**解释：**在iPhone, iPad上的safari浏览器中有个将网站添加到主屏幕上的按钮，当网站设置了**rel=\"apple-touch-icon**属性，当网站添加到屏幕上，屏幕上会显示网站的图标[点击此处查看详细解释](http://blog.sina.com.cn/s/blog_5a073f0f01014jfc.html)\n\n**6. 在iOS上实现模糊效果的代码**\n\n\t-webkit-backdrop-filter: blur(10px);\n    backdrop-filter: blur(10px);\n\n**7. 禁止单击鼠标左键并移动鼠标时拖拽图片**\n\t\n\t<img src=\"bg1.png\" draggable=\"false\">\n\t<img src=\"bg2.png\" draggable=\"false\">\n\n**8. touch-callout: none**  \n**解释：**当你触摸并按住触摸目标时候，禁止显示系统默认菜单\n\n**9. -webkit-overflow-scrolling: touch**  \n**解释：**-webkit-overflow-scrolling属性用于控制元素在移动设备上是否使用滚动回弹效果，其中touch表示使用具有回弹效果的滚动, 当手指从触摸屏上移开，内容会继续保持一段时间的滚动效果。继续滚动的速度和持续的时间和滚动手势的强烈程度成正比\n\n**10. pointer-events: none**  \n**解释：**当鼠标点击设置了pointer-events: none属性的标签时，标签不起作用，会出现类似于标签的禁用效果[点击此处查看详细解释](http://www.zhangxinxu.com/wordpress/2011/12/css3-pointer-events-none-javascript/)\n\n**11. -webkit-box-sizing:border-box**  \n**解释：**当你指定了一个块级元素时，并且为其定义了边框，设置了其宽度为100％。在移动设备开发过程中我们通常会对文本框定义为宽度100％，将其定义为块级元素以实现全屏自适应的样式，但此时你会发现，该元素的边框(左右)各1个像素会溢了文档，导致出现横向滚动条，为解决这一问题，我们可以为其添加一个特殊的样式`-webkit-box-sizing:border-box;`用来指定该盒子的大小包括边框的宽度\n\n**12. em**  \n**解释：** em为相对长度单位。相对于当前对象内文本的字体尺寸  \n当em作为font-size的单位时，表示相对于父元素的font-size的倍数  \n例如：父元素的font-size的值为 16px  \n如果子元素的font-size: 2em，则子元素的字体大小为 16px X 2em = 32px  \n当em作为其他属性单位时，代表自身字体大小的倍数  \n例如：一个元素的font-size: 16px  \n如果该元素的line-height: 2em，则该元素的行高为 16px X 2em = 32px  \n\n**13. rem**  \n**解释：**rem是CSS3新引进的一个度量单位，其数值表示根节点(html标签)的字体大小的倍数，在当前的所有主流浏览器中根节点(html标签)的字体大小都为16px，即 html标签的font-size:16px，1rem = 16px,为了让后面方便计算，通常将1rem的值设为10px，通过将html标签的font-size值设为62.5%可以将html标签的font-size值设置为10px，因为 16px X 62.5% = 10px，此时以后凡是html标签下的标签都可以使用rem，例如在html标签下有个p标签，要将p标签的高度设为50px可以写成`p {height: 5rem;}`[点击此处查看详细介绍](http://www.w3cplus.com/css3/define-font-size-with-css3-rem)\n\n**14. -webkit-font-smoothing: antialiased**  \n**解释：**`-webkit-font-smoothing`属性用于定义字体的平滑属性。有关字体平滑的介绍可参考[字体渲染](http://ued.ctrip.com/blog/font-rendering.html)一文，目前该属性已从W3C标准中移除，慎用！  \n其属性值`antialiased`表示使用灰阶平滑\n\n**15. 自定义滚动条的样式**  \n**::-webkit-scrollbar** 滚动条整体部分  \n**::-webkit-scrollbar-thumb**  滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）  \n**::-webkit-scrollbar-track** 滚动条的轨道（里面装有Thumb）  \n**::-webkit-scrollbar-button** 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。  \n**::-webkit-scrollbar-track-piece** 内层轨道，滚动条中间部分（除去）  \n**::-webkit-scrollbar-corner** 边角，即两个滚动条的交汇处  \n**::-webkit-resizer** 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\n\n**15.** `<meta name=\"apple-touch-fullscreen\" content=\"yes\">`  \n**解释：**添加到主屏幕上后全屏显示  \n\n**16.** `<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">`  \n**解释：** 所有运行在移动端浏览器中的网页都必须添加这个标签，其中name='viewport'表示视口、width=device-width表示网页的宽度等于浏览器窗口的宽度、initial-scale=1.0表示网页的初始化缩放比例其中1.0表示不缩放、maximum-scale=1.0表示网页的最大缩放比例、minimum-scale=1.0表示网页的最小缩放比例、user-scalable=no表示不允许用户自己缩放网页\n\n**17.** `<meta name=\"format-detection\" content=\"telephone=no\">`  \n**解释：**告诉浏览器不要将页面中的数字识别为电话号码\n\n**18.** `<meta name=\"google-site-verification\" content=\"\">`  \n**解释：**将网站添加进google网站管理，有利于google的收录\n\n**19.** `<meta name=\"screen-orientation\"   content=\"portrait\">`  \n**解释：**浏览器使用竖屏显示网页\n\n**20.** `<meta name=\"screen-orient\" content=\"landscape\">`  \n**解释：**浏览器使用横屏显示网页\n\n**21.** `<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">`  \n**解释：**启用webapp的全屏模式，删除iPad或者iPhone上默认的工具栏和菜单栏\n\n**22.** `<meta name=\"full-screen\" content=\"yes\">`  \n**解释：**在UC浏览器中强制使用全屏显示网页\n\n**23.** `<meta name=\"x5-fullscreen\" content=\"true\">`  \n**解释：**在QQ浏览器中强制使用全屏显示网页\n\n**24.** `spellcheck=\"false\"`  \n**解释：**给类似于textarea、input标签添加`spellcheck=\"false\"s属性后当向标签中输入的单词拼写错误，不会产生红色的波浪线\n\n**25.** `-webkit-appearance: none`  \n**解释：**`-webkit-appearance`用于改变按钮和其他控件的外观，使其类似于原生控件，其属性值`none`用于去除系统默认appearance的样式，常用于IOS下移除原生样式\n\n**26.** `<input type=\"search\">`  \n***解释：**使用`<input type=\"search\">`制作搜索框，当在手机上点击搜索框时会弹出一个软键盘，软键盘上的enter按钮会以搜索按钮的形式显示 \n\n**27.** `<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">`  \n**解释：**如果网页在IE浏览器上运行，使用最新的edge浏览器渲染网页\n\n**28.** `<meta http-equiv=\"Cache-Control\" content=\"no-cache\">`  \n**解释：**Cache-Control表示指定请求和响应遵循的缓存机制，其中no-cache表示不缓存请求的消息或者响应的消息[点击此处查看详细介绍](http://blog.csdn.net/m0_38073829/article/details/75453050)\n\n**29.** `<meta http-equiv=\"cache-control\" content=\"no-store\">`  \n**解释：**Cache-Control表示指定请求和响应遵循的缓存机制，其中no-store用于防止重要的信息被无意的发布[点击此处查看详细介绍](http://blog.csdn.net/m0_38073829/article/details/75453050)\n\n**30.** `<meta http-equiv=\"Pragma\" content=\"no-cache\">`  \n**解释：**Pragme用于定义页面缓存，其中no-cache表示不缓存页面[点击此处查看详细介绍](http://blog.csdn.net/m0_38073829/article/details/75453050)\n\n**31.** `<link rel=\"dns-prefetch\" href=\"\">`  \n**解释：**预解析技术，当你浏览网页时，浏览器会在加载网页时对网页中的域名进行解析缓存，这样在你单击当前网页中的连接时就无需进行DNS的解析，减少用户等待时间，提高用户体验，[点击此处查看详细介绍](http://www.sojson.com/blog/218.html)\n\n**32.** `<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">`  \n**解释：**iphone的私有标签，它用于给iphone上的safari浏览器顶端的状态栏设置样式\n\n**33.** `<meta content=\"email=no\" name=\"format-detection\" />`  \n**解释：**告诉浏览器不要识别页面上的邮箱地址\n\n**34.** `<meta name=\"imagemode\" content=\"force\"/>`  \n**解释：**强制显示标签\n\n**35.** `<meta name=\"theme-color\" content=\"#BF3030\">`  \n**解释：**使用浏览器访问网页时，改变浏览器上状态栏的背景颜色\n\n**36.** `<meta name=\"HandheldFriendly\" content=\"true\"> `  \n**解释：**使得手持设备能正常的渲染移动端页面，使得不识别 viewport 的浏览器能正常渲染移动端页面，比如：黑莓  \n\n**37.** `<meta name=\"MobileOptimized\" content=\"320\"> `  \n**解释：**使得微软的老式浏览器能渲染移动端能正常的渲染移动端页面  \n\n**38.** `<meta http-equiv=\"cleartype\" content=\"on\">`  \n**解释：**不使用clearType字体\n\n## 参考链接\n- [CSS3自定义滚动条样式 -webkit-scrollbar](https://www.xuanfengge.com/css3-webkit-scrollbar.html)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[移动Web学习笔记](http://meishadevs.com/blog/移动Web学习笔记/)】","source":"_posts/移动Web学习笔记.md","raw":"---\ntitle: 移动Web学习笔记\ncategories:\n  - 移动Web\ntags:\n  - 移动Web\ndate: 2017-08-31 10:23:03\n---\n\n**1. -webkit-text-size-adjust: 100%**  \n**解释：**在 Chrome 浏览器中只能设置大于或等于 12px 的字体大小，当设置了小于 12px 的字体大小时，浏览器按照 12px 的字体大小渲染字体，而设置了 **-webkit-text-size-adjust** 属性后浏览器可以渲染 12px 以下的字体大小\n\n<!--more-->\n\n**2. -webkit-tap-highlight-color: transparent**  \n**解释：**这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景，设置 **-webkit-tap-highlight-color: transparent**时就不会产生这个背景\n\n**3. lang=\"zh-cmn-Hans\"**  \n**解释：**语种名称代码，这个代码表示网页中使用的是简体普通话[点击此处查看详细解释](http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html)\n\n**4. lang=\"en\"**  \n**解释：**语种名称代码，这个代码表示网页中使用的是英语[点击此处查看详细解释](http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html)  \n\n**5. rel=\"apple-touch-icon\"**  \n**解释：**在iPhone, iPad上的safari浏览器中有个将网站添加到主屏幕上的按钮，当网站设置了**rel=\"apple-touch-icon**属性，当网站添加到屏幕上，屏幕上会显示网站的图标[点击此处查看详细解释](http://blog.sina.com.cn/s/blog_5a073f0f01014jfc.html)\n\n**6. 在iOS上实现模糊效果的代码**\n\n\t-webkit-backdrop-filter: blur(10px);\n    backdrop-filter: blur(10px);\n\n**7. 禁止单击鼠标左键并移动鼠标时拖拽图片**\n\t\n\t<img src=\"bg1.png\" draggable=\"false\">\n\t<img src=\"bg2.png\" draggable=\"false\">\n\n**8. touch-callout: none**  \n**解释：**当你触摸并按住触摸目标时候，禁止显示系统默认菜单\n\n**9. -webkit-overflow-scrolling: touch**  \n**解释：**-webkit-overflow-scrolling属性用于控制元素在移动设备上是否使用滚动回弹效果，其中touch表示使用具有回弹效果的滚动, 当手指从触摸屏上移开，内容会继续保持一段时间的滚动效果。继续滚动的速度和持续的时间和滚动手势的强烈程度成正比\n\n**10. pointer-events: none**  \n**解释：**当鼠标点击设置了pointer-events: none属性的标签时，标签不起作用，会出现类似于标签的禁用效果[点击此处查看详细解释](http://www.zhangxinxu.com/wordpress/2011/12/css3-pointer-events-none-javascript/)\n\n**11. -webkit-box-sizing:border-box**  \n**解释：**当你指定了一个块级元素时，并且为其定义了边框，设置了其宽度为100％。在移动设备开发过程中我们通常会对文本框定义为宽度100％，将其定义为块级元素以实现全屏自适应的样式，但此时你会发现，该元素的边框(左右)各1个像素会溢了文档，导致出现横向滚动条，为解决这一问题，我们可以为其添加一个特殊的样式`-webkit-box-sizing:border-box;`用来指定该盒子的大小包括边框的宽度\n\n**12. em**  \n**解释：** em为相对长度单位。相对于当前对象内文本的字体尺寸  \n当em作为font-size的单位时，表示相对于父元素的font-size的倍数  \n例如：父元素的font-size的值为 16px  \n如果子元素的font-size: 2em，则子元素的字体大小为 16px X 2em = 32px  \n当em作为其他属性单位时，代表自身字体大小的倍数  \n例如：一个元素的font-size: 16px  \n如果该元素的line-height: 2em，则该元素的行高为 16px X 2em = 32px  \n\n**13. rem**  \n**解释：**rem是CSS3新引进的一个度量单位，其数值表示根节点(html标签)的字体大小的倍数，在当前的所有主流浏览器中根节点(html标签)的字体大小都为16px，即 html标签的font-size:16px，1rem = 16px,为了让后面方便计算，通常将1rem的值设为10px，通过将html标签的font-size值设为62.5%可以将html标签的font-size值设置为10px，因为 16px X 62.5% = 10px，此时以后凡是html标签下的标签都可以使用rem，例如在html标签下有个p标签，要将p标签的高度设为50px可以写成`p {height: 5rem;}`[点击此处查看详细介绍](http://www.w3cplus.com/css3/define-font-size-with-css3-rem)\n\n**14. -webkit-font-smoothing: antialiased**  \n**解释：**`-webkit-font-smoothing`属性用于定义字体的平滑属性。有关字体平滑的介绍可参考[字体渲染](http://ued.ctrip.com/blog/font-rendering.html)一文，目前该属性已从W3C标准中移除，慎用！  \n其属性值`antialiased`表示使用灰阶平滑\n\n**15. 自定义滚动条的样式**  \n**::-webkit-scrollbar** 滚动条整体部分  \n**::-webkit-scrollbar-thumb**  滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）  \n**::-webkit-scrollbar-track** 滚动条的轨道（里面装有Thumb）  \n**::-webkit-scrollbar-button** 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。  \n**::-webkit-scrollbar-track-piece** 内层轨道，滚动条中间部分（除去）  \n**::-webkit-scrollbar-corner** 边角，即两个滚动条的交汇处  \n**::-webkit-resizer** 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\n\n**15.** `<meta name=\"apple-touch-fullscreen\" content=\"yes\">`  \n**解释：**添加到主屏幕上后全屏显示  \n\n**16.** `<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">`  \n**解释：** 所有运行在移动端浏览器中的网页都必须添加这个标签，其中name='viewport'表示视口、width=device-width表示网页的宽度等于浏览器窗口的宽度、initial-scale=1.0表示网页的初始化缩放比例其中1.0表示不缩放、maximum-scale=1.0表示网页的最大缩放比例、minimum-scale=1.0表示网页的最小缩放比例、user-scalable=no表示不允许用户自己缩放网页\n\n**17.** `<meta name=\"format-detection\" content=\"telephone=no\">`  \n**解释：**告诉浏览器不要将页面中的数字识别为电话号码\n\n**18.** `<meta name=\"google-site-verification\" content=\"\">`  \n**解释：**将网站添加进google网站管理，有利于google的收录\n\n**19.** `<meta name=\"screen-orientation\"   content=\"portrait\">`  \n**解释：**浏览器使用竖屏显示网页\n\n**20.** `<meta name=\"screen-orient\" content=\"landscape\">`  \n**解释：**浏览器使用横屏显示网页\n\n**21.** `<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">`  \n**解释：**启用webapp的全屏模式，删除iPad或者iPhone上默认的工具栏和菜单栏\n\n**22.** `<meta name=\"full-screen\" content=\"yes\">`  \n**解释：**在UC浏览器中强制使用全屏显示网页\n\n**23.** `<meta name=\"x5-fullscreen\" content=\"true\">`  \n**解释：**在QQ浏览器中强制使用全屏显示网页\n\n**24.** `spellcheck=\"false\"`  \n**解释：**给类似于textarea、input标签添加`spellcheck=\"false\"s属性后当向标签中输入的单词拼写错误，不会产生红色的波浪线\n\n**25.** `-webkit-appearance: none`  \n**解释：**`-webkit-appearance`用于改变按钮和其他控件的外观，使其类似于原生控件，其属性值`none`用于去除系统默认appearance的样式，常用于IOS下移除原生样式\n\n**26.** `<input type=\"search\">`  \n***解释：**使用`<input type=\"search\">`制作搜索框，当在手机上点击搜索框时会弹出一个软键盘，软键盘上的enter按钮会以搜索按钮的形式显示 \n\n**27.** `<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">`  \n**解释：**如果网页在IE浏览器上运行，使用最新的edge浏览器渲染网页\n\n**28.** `<meta http-equiv=\"Cache-Control\" content=\"no-cache\">`  \n**解释：**Cache-Control表示指定请求和响应遵循的缓存机制，其中no-cache表示不缓存请求的消息或者响应的消息[点击此处查看详细介绍](http://blog.csdn.net/m0_38073829/article/details/75453050)\n\n**29.** `<meta http-equiv=\"cache-control\" content=\"no-store\">`  \n**解释：**Cache-Control表示指定请求和响应遵循的缓存机制，其中no-store用于防止重要的信息被无意的发布[点击此处查看详细介绍](http://blog.csdn.net/m0_38073829/article/details/75453050)\n\n**30.** `<meta http-equiv=\"Pragma\" content=\"no-cache\">`  \n**解释：**Pragme用于定义页面缓存，其中no-cache表示不缓存页面[点击此处查看详细介绍](http://blog.csdn.net/m0_38073829/article/details/75453050)\n\n**31.** `<link rel=\"dns-prefetch\" href=\"\">`  \n**解释：**预解析技术，当你浏览网页时，浏览器会在加载网页时对网页中的域名进行解析缓存，这样在你单击当前网页中的连接时就无需进行DNS的解析，减少用户等待时间，提高用户体验，[点击此处查看详细介绍](http://www.sojson.com/blog/218.html)\n\n**32.** `<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">`  \n**解释：**iphone的私有标签，它用于给iphone上的safari浏览器顶端的状态栏设置样式\n\n**33.** `<meta content=\"email=no\" name=\"format-detection\" />`  \n**解释：**告诉浏览器不要识别页面上的邮箱地址\n\n**34.** `<meta name=\"imagemode\" content=\"force\"/>`  \n**解释：**强制显示标签\n\n**35.** `<meta name=\"theme-color\" content=\"#BF3030\">`  \n**解释：**使用浏览器访问网页时，改变浏览器上状态栏的背景颜色\n\n**36.** `<meta name=\"HandheldFriendly\" content=\"true\"> `  \n**解释：**使得手持设备能正常的渲染移动端页面，使得不识别 viewport 的浏览器能正常渲染移动端页面，比如：黑莓  \n\n**37.** `<meta name=\"MobileOptimized\" content=\"320\"> `  \n**解释：**使得微软的老式浏览器能渲染移动端能正常的渲染移动端页面  \n\n**38.** `<meta http-equiv=\"cleartype\" content=\"on\">`  \n**解释：**不使用clearType字体\n\n## 参考链接\n- [CSS3自定义滚动条样式 -webkit-scrollbar](https://www.xuanfengge.com/css3-webkit-scrollbar.html)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[移动Web学习笔记](http://meishadevs.com/blog/移动Web学习笔记/)】","slug":"移动Web学习笔记","published":1,"updated":"2018-07-07T02:23:40.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjfmmqof000rjc7uvwsy2vfy","content":"<p><strong>1. -webkit-text-size-adjust: 100%</strong><br><strong>解释：</strong>在 Chrome 浏览器中只能设置大于或等于 12px 的字体大小，当设置了小于 12px 的字体大小时，浏览器按照 12px 的字体大小渲染字体，而设置了 <strong>-webkit-text-size-adjust</strong> 属性后浏览器可以渲染 12px 以下的字体大小</p>\n<a id=\"more\"></a>\n<p><strong>2. -webkit-tap-highlight-color: transparent</strong><br><strong>解释：</strong>这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景，设置 <strong>-webkit-tap-highlight-color: transparent</strong>时就不会产生这个背景</p>\n<p><strong>3. lang=”zh-cmn-Hans”</strong><br><strong>解释：</strong>语种名称代码，这个代码表示网页中使用的是简体普通话<a href=\"http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html\" target=\"_blank\" rel=\"noopener\">点击此处查看详细解释</a></p>\n<p><strong>4. lang=”en”</strong><br><strong>解释：</strong>语种名称代码，这个代码表示网页中使用的是英语<a href=\"http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html\" target=\"_blank\" rel=\"noopener\">点击此处查看详细解释</a>  </p>\n<p><strong>5. rel=”apple-touch-icon”</strong><br><strong>解释：</strong>在iPhone, iPad上的safari浏览器中有个将网站添加到主屏幕上的按钮，当网站设置了<strong>rel=”apple-touch-icon</strong>属性，当网站添加到屏幕上，屏幕上会显示网站的图标<a href=\"http://blog.sina.com.cn/s/blog_5a073f0f01014jfc.html\" target=\"_blank\" rel=\"noopener\">点击此处查看详细解释</a></p>\n<p><strong>6. 在iOS上实现模糊效果的代码</strong></p>\n<pre><code>-webkit-backdrop-filter: blur(10px);\nbackdrop-filter: blur(10px);\n</code></pre><p><strong>7. 禁止单击鼠标左键并移动鼠标时拖拽图片</strong></p>\n<pre><code>&lt;img src=&quot;bg1.png&quot; draggable=&quot;false&quot;&gt;\n&lt;img src=&quot;bg2.png&quot; draggable=&quot;false&quot;&gt;\n</code></pre><p><strong>8. touch-callout: none</strong><br><strong>解释：</strong>当你触摸并按住触摸目标时候，禁止显示系统默认菜单</p>\n<p><strong>9. -webkit-overflow-scrolling: touch</strong><br><strong>解释：</strong>-webkit-overflow-scrolling属性用于控制元素在移动设备上是否使用滚动回弹效果，其中touch表示使用具有回弹效果的滚动, 当手指从触摸屏上移开，内容会继续保持一段时间的滚动效果。继续滚动的速度和持续的时间和滚动手势的强烈程度成正比</p>\n<p><strong>10. pointer-events: none</strong><br><strong>解释：</strong>当鼠标点击设置了pointer-events: none属性的标签时，标签不起作用，会出现类似于标签的禁用效果<a href=\"http://www.zhangxinxu.com/wordpress/2011/12/css3-pointer-events-none-javascript/\" target=\"_blank\" rel=\"noopener\">点击此处查看详细解释</a></p>\n<p><strong>11. -webkit-box-sizing:border-box</strong><br><strong>解释：</strong>当你指定了一个块级元素时，并且为其定义了边框，设置了其宽度为100％。在移动设备开发过程中我们通常会对文本框定义为宽度100％，将其定义为块级元素以实现全屏自适应的样式，但此时你会发现，该元素的边框(左右)各1个像素会溢了文档，导致出现横向滚动条，为解决这一问题，我们可以为其添加一个特殊的样式<code>-webkit-box-sizing:border-box;</code>用来指定该盒子的大小包括边框的宽度</p>\n<p><strong>12. em</strong><br><strong>解释：</strong> em为相对长度单位。相对于当前对象内文本的字体尺寸<br>当em作为font-size的单位时，表示相对于父元素的font-size的倍数<br>例如：父元素的font-size的值为 16px<br>如果子元素的font-size: 2em，则子元素的字体大小为 16px X 2em = 32px<br>当em作为其他属性单位时，代表自身字体大小的倍数<br>例如：一个元素的font-size: 16px<br>如果该元素的line-height: 2em，则该元素的行高为 16px X 2em = 32px  </p>\n<p><strong>13. rem</strong><br><strong>解释：</strong>rem是CSS3新引进的一个度量单位，其数值表示根节点(html标签)的字体大小的倍数，在当前的所有主流浏览器中根节点(html标签)的字体大小都为16px，即 html标签的font-size:16px，1rem = 16px,为了让后面方便计算，通常将1rem的值设为10px，通过将html标签的font-size值设为62.5%可以将html标签的font-size值设置为10px，因为 16px X 62.5% = 10px，此时以后凡是html标签下的标签都可以使用rem，例如在html标签下有个p标签，要将p标签的高度设为50px可以写成<code>p {height: 5rem;}</code><a href=\"http://www.w3cplus.com/css3/define-font-size-with-css3-rem\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>14. -webkit-font-smoothing: antialiased</strong><br><strong>解释：</strong><code>-webkit-font-smoothing</code>属性用于定义字体的平滑属性。有关字体平滑的介绍可参考<a href=\"http://ued.ctrip.com/blog/font-rendering.html\" target=\"_blank\" rel=\"noopener\">字体渲染</a>一文，目前该属性已从W3C标准中移除，慎用！<br>其属性值<code>antialiased</code>表示使用灰阶平滑</p>\n<p><strong>15. 自定义滚动条的样式</strong><br><strong>::-webkit-scrollbar</strong> 滚动条整体部分<br><strong>::-webkit-scrollbar-thumb</strong>  滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）<br><strong>::-webkit-scrollbar-track</strong> 滚动条的轨道（里面装有Thumb）<br><strong>::-webkit-scrollbar-button</strong> 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。<br><strong>::-webkit-scrollbar-track-piece</strong> 内层轨道，滚动条中间部分（除去）<br><strong>::-webkit-scrollbar-corner</strong> 边角，即两个滚动条的交汇处<br><strong>::-webkit-resizer</strong> 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</p>\n<p><strong>15.</strong> <code>&lt;meta name=&quot;apple-touch-fullscreen&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>添加到主屏幕上后全屏显示  </p>\n<p><strong>16.</strong> <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no&quot;&gt;</code><br><strong>解释：</strong> 所有运行在移动端浏览器中的网页都必须添加这个标签，其中name=’viewport’表示视口、width=device-width表示网页的宽度等于浏览器窗口的宽度、initial-scale=1.0表示网页的初始化缩放比例其中1.0表示不缩放、maximum-scale=1.0表示网页的最大缩放比例、minimum-scale=1.0表示网页的最小缩放比例、user-scalable=no表示不允许用户自己缩放网页</p>\n<p><strong>17.</strong> <code>&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</code><br><strong>解释：</strong>告诉浏览器不要将页面中的数字识别为电话号码</p>\n<p><strong>18.</strong> <code>&lt;meta name=&quot;google-site-verification&quot; content=&quot;&quot;&gt;</code><br><strong>解释：</strong>将网站添加进google网站管理，有利于google的收录</p>\n<p><strong>19.</strong> <code>&lt;meta name=&quot;screen-orientation&quot;   content=&quot;portrait&quot;&gt;</code><br><strong>解释：</strong>浏览器使用竖屏显示网页</p>\n<p><strong>20.</strong> <code>&lt;meta name=&quot;screen-orient&quot; content=&quot;landscape&quot;&gt;</code><br><strong>解释：</strong>浏览器使用横屏显示网页</p>\n<p><strong>21.</strong> <code>&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>启用webapp的全屏模式，删除iPad或者iPhone上默认的工具栏和菜单栏</p>\n<p><strong>22.</strong> <code>&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>在UC浏览器中强制使用全屏显示网页</p>\n<p><strong>23.</strong> <code>&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</code><br><strong>解释：</strong>在QQ浏览器中强制使用全屏显示网页</p>\n<p><strong>24.</strong> <code>spellcheck=&quot;false&quot;</code><br><strong>解释：</strong>给类似于textarea、input标签添加`spellcheck=”false”s属性后当向标签中输入的单词拼写错误，不会产生红色的波浪线</p>\n<p><strong>25.</strong> <code>-webkit-appearance: none</code><br><strong>解释：</strong><code>-webkit-appearance</code>用于改变按钮和其他控件的外观，使其类似于原生控件，其属性值<code>none</code>用于去除系统默认appearance的样式，常用于IOS下移除原生样式</p>\n<p><strong>26.</strong> <code>&lt;input type=&quot;search&quot;&gt;</code><br><strong>*解释：</strong>使用<code>&lt;input type=&quot;search&quot;&gt;</code>制作搜索框，当在手机上点击搜索框时会弹出一个软键盘，软键盘上的enter按钮会以搜索按钮的形式显示 </p>\n<p><strong>27.</strong> <code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</code><br><strong>解释：</strong>如果网页在IE浏览器上运行，使用最新的edge浏览器渲染网页</p>\n<p><strong>28.</strong> <code>&lt;meta http-equiv=&quot;Cache-Control&quot; content=&quot;no-cache&quot;&gt;</code><br><strong>解释：</strong>Cache-Control表示指定请求和响应遵循的缓存机制，其中no-cache表示不缓存请求的消息或者响应的消息<a href=\"http://blog.csdn.net/m0_38073829/article/details/75453050\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>29.</strong> <code>&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-store&quot;&gt;</code><br><strong>解释：</strong>Cache-Control表示指定请求和响应遵循的缓存机制，其中no-store用于防止重要的信息被无意的发布<a href=\"http://blog.csdn.net/m0_38073829/article/details/75453050\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>30.</strong> <code>&lt;meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot;&gt;</code><br><strong>解释：</strong>Pragme用于定义页面缓存，其中no-cache表示不缓存页面<a href=\"http://blog.csdn.net/m0_38073829/article/details/75453050\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>31.</strong> <code>&lt;link rel=&quot;dns-prefetch&quot; href=&quot;&quot;&gt;</code><br><strong>解释：</strong>预解析技术，当你浏览网页时，浏览器会在加载网页时对网页中的域名进行解析缓存，这样在你单击当前网页中的连接时就无需进行DNS的解析，减少用户等待时间，提高用户体验，<a href=\"http://www.sojson.com/blog/218.html\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>32.</strong> <code>&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot;&gt;</code><br><strong>解释：</strong>iphone的私有标签，它用于给iphone上的safari浏览器顶端的状态栏设置样式</p>\n<p><strong>33.</strong> <code>&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot; /&gt;</code><br><strong>解释：</strong>告诉浏览器不要识别页面上的邮箱地址</p>\n<p><strong>34.</strong> <code>&lt;meta name=&quot;imagemode&quot; content=&quot;force&quot;/&gt;</code><br><strong>解释：</strong>强制显示标签</p>\n<p><strong>35.</strong> <code>&lt;meta name=&quot;theme-color&quot; content=&quot;#BF3030&quot;&gt;</code><br><strong>解释：</strong>使用浏览器访问网页时，改变浏览器上状态栏的背景颜色</p>\n<p><strong>36.</strong> <code>&lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;</code><br><strong>解释：</strong>使得手持设备能正常的渲染移动端页面，使得不识别 viewport 的浏览器能正常渲染移动端页面，比如：黑莓  </p>\n<p><strong>37.</strong> <code>&lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;</code><br><strong>解释：</strong>使得微软的老式浏览器能渲染移动端能正常的渲染移动端页面  </p>\n<p><strong>38.</strong> <code>&lt;meta http-equiv=&quot;cleartype&quot; content=&quot;on&quot;&gt;</code><br><strong>解释：</strong>不使用clearType字体</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://www.xuanfengge.com/css3-webkit-scrollbar.html\" target=\"_blank\" rel=\"noopener\">CSS3自定义滚动条样式 -webkit-scrollbar</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/移动Web学习笔记/\">移动Web学习笔记</a>】</p>\n</blockquote>\n","site":{"data":{"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMiner"},{"name":"电商网","image":"http://oq3pg8pg4.bkt.clouddn.com/pic4.png","description":"整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成，整个网站包含了将网页添加到收藏夹、关键字搜索、图片轮播、商品分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/dswz"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","王子亭的博客":"https://jysperm.me/","MDN":"https://developer.mozilla.org/zh-CN/","w3cplus":"http://www.w3cplus.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p><strong>1. -webkit-text-size-adjust: 100%</strong><br><strong>解释：</strong>在 Chrome 浏览器中只能设置大于或等于 12px 的字体大小，当设置了小于 12px 的字体大小时，浏览器按照 12px 的字体大小渲染字体，而设置了 <strong>-webkit-text-size-adjust</strong> 属性后浏览器可以渲染 12px 以下的字体大小</p>","more":"<p><strong>2. -webkit-tap-highlight-color: transparent</strong><br><strong>解释：</strong>这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景，设置 <strong>-webkit-tap-highlight-color: transparent</strong>时就不会产生这个背景</p>\n<p><strong>3. lang=”zh-cmn-Hans”</strong><br><strong>解释：</strong>语种名称代码，这个代码表示网页中使用的是简体普通话<a href=\"http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html\" target=\"_blank\" rel=\"noopener\">点击此处查看详细解释</a></p>\n<p><strong>4. lang=”en”</strong><br><strong>解释：</strong>语种名称代码，这个代码表示网页中使用的是英语<a href=\"http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html\" target=\"_blank\" rel=\"noopener\">点击此处查看详细解释</a>  </p>\n<p><strong>5. rel=”apple-touch-icon”</strong><br><strong>解释：</strong>在iPhone, iPad上的safari浏览器中有个将网站添加到主屏幕上的按钮，当网站设置了<strong>rel=”apple-touch-icon</strong>属性，当网站添加到屏幕上，屏幕上会显示网站的图标<a href=\"http://blog.sina.com.cn/s/blog_5a073f0f01014jfc.html\" target=\"_blank\" rel=\"noopener\">点击此处查看详细解释</a></p>\n<p><strong>6. 在iOS上实现模糊效果的代码</strong></p>\n<pre><code>-webkit-backdrop-filter: blur(10px);\nbackdrop-filter: blur(10px);\n</code></pre><p><strong>7. 禁止单击鼠标左键并移动鼠标时拖拽图片</strong></p>\n<pre><code>&lt;img src=&quot;bg1.png&quot; draggable=&quot;false&quot;&gt;\n&lt;img src=&quot;bg2.png&quot; draggable=&quot;false&quot;&gt;\n</code></pre><p><strong>8. touch-callout: none</strong><br><strong>解释：</strong>当你触摸并按住触摸目标时候，禁止显示系统默认菜单</p>\n<p><strong>9. -webkit-overflow-scrolling: touch</strong><br><strong>解释：</strong>-webkit-overflow-scrolling属性用于控制元素在移动设备上是否使用滚动回弹效果，其中touch表示使用具有回弹效果的滚动, 当手指从触摸屏上移开，内容会继续保持一段时间的滚动效果。继续滚动的速度和持续的时间和滚动手势的强烈程度成正比</p>\n<p><strong>10. pointer-events: none</strong><br><strong>解释：</strong>当鼠标点击设置了pointer-events: none属性的标签时，标签不起作用，会出现类似于标签的禁用效果<a href=\"http://www.zhangxinxu.com/wordpress/2011/12/css3-pointer-events-none-javascript/\" target=\"_blank\" rel=\"noopener\">点击此处查看详细解释</a></p>\n<p><strong>11. -webkit-box-sizing:border-box</strong><br><strong>解释：</strong>当你指定了一个块级元素时，并且为其定义了边框，设置了其宽度为100％。在移动设备开发过程中我们通常会对文本框定义为宽度100％，将其定义为块级元素以实现全屏自适应的样式，但此时你会发现，该元素的边框(左右)各1个像素会溢了文档，导致出现横向滚动条，为解决这一问题，我们可以为其添加一个特殊的样式<code>-webkit-box-sizing:border-box;</code>用来指定该盒子的大小包括边框的宽度</p>\n<p><strong>12. em</strong><br><strong>解释：</strong> em为相对长度单位。相对于当前对象内文本的字体尺寸<br>当em作为font-size的单位时，表示相对于父元素的font-size的倍数<br>例如：父元素的font-size的值为 16px<br>如果子元素的font-size: 2em，则子元素的字体大小为 16px X 2em = 32px<br>当em作为其他属性单位时，代表自身字体大小的倍数<br>例如：一个元素的font-size: 16px<br>如果该元素的line-height: 2em，则该元素的行高为 16px X 2em = 32px  </p>\n<p><strong>13. rem</strong><br><strong>解释：</strong>rem是CSS3新引进的一个度量单位，其数值表示根节点(html标签)的字体大小的倍数，在当前的所有主流浏览器中根节点(html标签)的字体大小都为16px，即 html标签的font-size:16px，1rem = 16px,为了让后面方便计算，通常将1rem的值设为10px，通过将html标签的font-size值设为62.5%可以将html标签的font-size值设置为10px，因为 16px X 62.5% = 10px，此时以后凡是html标签下的标签都可以使用rem，例如在html标签下有个p标签，要将p标签的高度设为50px可以写成<code>p {height: 5rem;}</code><a href=\"http://www.w3cplus.com/css3/define-font-size-with-css3-rem\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>14. -webkit-font-smoothing: antialiased</strong><br><strong>解释：</strong><code>-webkit-font-smoothing</code>属性用于定义字体的平滑属性。有关字体平滑的介绍可参考<a href=\"http://ued.ctrip.com/blog/font-rendering.html\" target=\"_blank\" rel=\"noopener\">字体渲染</a>一文，目前该属性已从W3C标准中移除，慎用！<br>其属性值<code>antialiased</code>表示使用灰阶平滑</p>\n<p><strong>15. 自定义滚动条的样式</strong><br><strong>::-webkit-scrollbar</strong> 滚动条整体部分<br><strong>::-webkit-scrollbar-thumb</strong>  滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）<br><strong>::-webkit-scrollbar-track</strong> 滚动条的轨道（里面装有Thumb）<br><strong>::-webkit-scrollbar-button</strong> 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。<br><strong>::-webkit-scrollbar-track-piece</strong> 内层轨道，滚动条中间部分（除去）<br><strong>::-webkit-scrollbar-corner</strong> 边角，即两个滚动条的交汇处<br><strong>::-webkit-resizer</strong> 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</p>\n<p><strong>15.</strong> <code>&lt;meta name=&quot;apple-touch-fullscreen&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>添加到主屏幕上后全屏显示  </p>\n<p><strong>16.</strong> <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no&quot;&gt;</code><br><strong>解释：</strong> 所有运行在移动端浏览器中的网页都必须添加这个标签，其中name=’viewport’表示视口、width=device-width表示网页的宽度等于浏览器窗口的宽度、initial-scale=1.0表示网页的初始化缩放比例其中1.0表示不缩放、maximum-scale=1.0表示网页的最大缩放比例、minimum-scale=1.0表示网页的最小缩放比例、user-scalable=no表示不允许用户自己缩放网页</p>\n<p><strong>17.</strong> <code>&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</code><br><strong>解释：</strong>告诉浏览器不要将页面中的数字识别为电话号码</p>\n<p><strong>18.</strong> <code>&lt;meta name=&quot;google-site-verification&quot; content=&quot;&quot;&gt;</code><br><strong>解释：</strong>将网站添加进google网站管理，有利于google的收录</p>\n<p><strong>19.</strong> <code>&lt;meta name=&quot;screen-orientation&quot;   content=&quot;portrait&quot;&gt;</code><br><strong>解释：</strong>浏览器使用竖屏显示网页</p>\n<p><strong>20.</strong> <code>&lt;meta name=&quot;screen-orient&quot; content=&quot;landscape&quot;&gt;</code><br><strong>解释：</strong>浏览器使用横屏显示网页</p>\n<p><strong>21.</strong> <code>&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>启用webapp的全屏模式，删除iPad或者iPhone上默认的工具栏和菜单栏</p>\n<p><strong>22.</strong> <code>&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>在UC浏览器中强制使用全屏显示网页</p>\n<p><strong>23.</strong> <code>&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</code><br><strong>解释：</strong>在QQ浏览器中强制使用全屏显示网页</p>\n<p><strong>24.</strong> <code>spellcheck=&quot;false&quot;</code><br><strong>解释：</strong>给类似于textarea、input标签添加`spellcheck=”false”s属性后当向标签中输入的单词拼写错误，不会产生红色的波浪线</p>\n<p><strong>25.</strong> <code>-webkit-appearance: none</code><br><strong>解释：</strong><code>-webkit-appearance</code>用于改变按钮和其他控件的外观，使其类似于原生控件，其属性值<code>none</code>用于去除系统默认appearance的样式，常用于IOS下移除原生样式</p>\n<p><strong>26.</strong> <code>&lt;input type=&quot;search&quot;&gt;</code><br><strong>*解释：</strong>使用<code>&lt;input type=&quot;search&quot;&gt;</code>制作搜索框，当在手机上点击搜索框时会弹出一个软键盘，软键盘上的enter按钮会以搜索按钮的形式显示 </p>\n<p><strong>27.</strong> <code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</code><br><strong>解释：</strong>如果网页在IE浏览器上运行，使用最新的edge浏览器渲染网页</p>\n<p><strong>28.</strong> <code>&lt;meta http-equiv=&quot;Cache-Control&quot; content=&quot;no-cache&quot;&gt;</code><br><strong>解释：</strong>Cache-Control表示指定请求和响应遵循的缓存机制，其中no-cache表示不缓存请求的消息或者响应的消息<a href=\"http://blog.csdn.net/m0_38073829/article/details/75453050\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>29.</strong> <code>&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-store&quot;&gt;</code><br><strong>解释：</strong>Cache-Control表示指定请求和响应遵循的缓存机制，其中no-store用于防止重要的信息被无意的发布<a href=\"http://blog.csdn.net/m0_38073829/article/details/75453050\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>30.</strong> <code>&lt;meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot;&gt;</code><br><strong>解释：</strong>Pragme用于定义页面缓存，其中no-cache表示不缓存页面<a href=\"http://blog.csdn.net/m0_38073829/article/details/75453050\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>31.</strong> <code>&lt;link rel=&quot;dns-prefetch&quot; href=&quot;&quot;&gt;</code><br><strong>解释：</strong>预解析技术，当你浏览网页时，浏览器会在加载网页时对网页中的域名进行解析缓存，这样在你单击当前网页中的连接时就无需进行DNS的解析，减少用户等待时间，提高用户体验，<a href=\"http://www.sojson.com/blog/218.html\" target=\"_blank\" rel=\"noopener\">点击此处查看详细介绍</a></p>\n<p><strong>32.</strong> <code>&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot;&gt;</code><br><strong>解释：</strong>iphone的私有标签，它用于给iphone上的safari浏览器顶端的状态栏设置样式</p>\n<p><strong>33.</strong> <code>&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot; /&gt;</code><br><strong>解释：</strong>告诉浏览器不要识别页面上的邮箱地址</p>\n<p><strong>34.</strong> <code>&lt;meta name=&quot;imagemode&quot; content=&quot;force&quot;/&gt;</code><br><strong>解释：</strong>强制显示标签</p>\n<p><strong>35.</strong> <code>&lt;meta name=&quot;theme-color&quot; content=&quot;#BF3030&quot;&gt;</code><br><strong>解释：</strong>使用浏览器访问网页时，改变浏览器上状态栏的背景颜色</p>\n<p><strong>36.</strong> <code>&lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;</code><br><strong>解释：</strong>使得手持设备能正常的渲染移动端页面，使得不识别 viewport 的浏览器能正常渲染移动端页面，比如：黑莓  </p>\n<p><strong>37.</strong> <code>&lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;</code><br><strong>解释：</strong>使得微软的老式浏览器能渲染移动端能正常的渲染移动端页面  </p>\n<p><strong>38.</strong> <code>&lt;meta http-equiv=&quot;cleartype&quot; content=&quot;on&quot;&gt;</code><br><strong>解释：</strong>不使用clearType字体</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://www.xuanfengge.com/css3-webkit-scrollbar.html\" target=\"_blank\" rel=\"noopener\">CSS3自定义滚动条样式 -webkit-scrollbar</a></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/移动Web学习笔记/\">移动Web学习笔记</a>】</p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjjfmmqnk0002jc7uahkyguv6","category_id":"cjjfmmqpu000sjc7u6z1ije6s","_id":"cjjfmmqrr002ijc7ua5z6bfw0"},{"post_id":"cjjfmmqnk0003jc7u0c3cmhv5","category_id":"cjjfmmqpu000sjc7u6z1ije6s","_id":"cjjfmmqrr002kjc7ue4zbi7hc"},{"post_id":"cjjfmmqnk0004jc7ujo1l4h6g","category_id":"cjjfmmqqs000wjc7un7jm4zo2","_id":"cjjfmmqrr002mjc7uam49lcdp"},{"post_id":"cjjfmmqnk0005jc7uroypzqh5","category_id":"cjjfmmqqs000yjc7u81r7awni","_id":"cjjfmmqs7002pjc7u600fclal"},{"post_id":"cjjfmmqnk0006jc7unh9p0gep","category_id":"cjjfmmqqs0010jc7u42i4nbdb","_id":"cjjfmmqs7002rjc7uinjhcxpy"},{"post_id":"cjjfmmqnk0007jc7uanhlzpwo","category_id":"cjjfmmqqs0012jc7ujum0h7ym","_id":"cjjfmmqs7002ujc7u9v3tv5dh"},{"post_id":"cjjfmmqnk0008jc7ucieujomt","category_id":"cjjfmmqqs0014jc7unbf0r0f5","_id":"cjjfmmqs7002wjc7uwe2msu1r"},{"post_id":"cjjfmmqnz0009jc7u05dxhx4o","category_id":"cjjfmmqqs0016jc7uja4jx1j9","_id":"cjjfmmqs7002zjc7u4c69qj09"},{"post_id":"cjjfmmqnz000ajc7uhnvbm2nb","category_id":"cjjfmmqqs0018jc7u2sefbeb8","_id":"cjjfmmqs70031jc7u9z5twsue"},{"post_id":"cjjfmmqnz000fjc7u5w3p46va","category_id":"cjjfmmqr8001ijc7u7uwr3oec","_id":"cjjfmmqs70034jc7ugldh1ebd"},{"post_id":"cjjfmmqnz000gjc7ua3uh43eg","category_id":"cjjfmmqr8001kjc7ujj6a54tm","_id":"cjjfmmqs70036jc7ucv8n5hsy"},{"post_id":"cjjfmmqnz000hjc7uibxjdt11","category_id":"cjjfmmqqs0018jc7u2sefbeb8","_id":"cjjfmmqs70038jc7ub8fro2av"},{"post_id":"cjjfmmqnz000ijc7ud3llrd3r","category_id":"cjjfmmqqs000wjc7un7jm4zo2","_id":"cjjfmmqs7003ajc7uulek8um7"},{"post_id":"cjjfmmqnz000jjc7ujwv41oic","category_id":"cjjfmmqr8001kjc7ujj6a54tm","_id":"cjjfmmqs7003cjc7ujhmu6t29"},{"post_id":"cjjfmmqnz000kjc7ut2rrm223","category_id":"cjjfmmqr8001sjc7uxpb6xtl6","_id":"cjjfmmqs7003ejc7u3vx5jrxs"},{"post_id":"cjjfmmqof000ljc7ualkum4mk","category_id":"cjjfmmqr8001ujc7uvbvqw34w","_id":"cjjfmmqs7003gjc7ubb2y2u6j"},{"post_id":"cjjfmmqof000njc7ukm8qt2sc","category_id":"cjjfmmqr8001kjc7ujj6a54tm","_id":"cjjfmmqs7003ijc7uci88i6oc"},{"post_id":"cjjfmmqof000ojc7u7sk6himh","category_id":"cjjfmmqqs0016jc7uja4jx1j9","_id":"cjjfmmqs7003kjc7ufhzxzlbu"},{"post_id":"cjjfmmqof000qjc7ue56vc3e6","category_id":"cjjfmmqr80022jc7utlupnvdo","_id":"cjjfmmqs7003mjc7utetn3rtl"},{"post_id":"cjjfmmqof000rjc7uvwsy2vfy","category_id":"cjjfmmqr8001sjc7uxpb6xtl6","_id":"cjjfmmqs7003ojc7uhf71yvur"},{"post_id":"cjjfmmqnz000bjc7uyqf4fn9h","category_id":"cjjfmmqqs001ajc7ubxcpi0v8","_id":"cjjfmmqt50044jc7u2u1yeo5s"},{"post_id":"cjjfmmqnz000bjc7uyqf4fn9h","category_id":"cjjfmmqrr002hjc7u70qzvs17","_id":"cjjfmmqt50045jc7ub811nnkg"},{"post_id":"cjjfmmqnz000cjc7umqofvrnc","category_id":"cjjfmmqqs001cjc7uwo16rusw","_id":"cjjfmmqt50046jc7ujpdq2aef"},{"post_id":"cjjfmmqnz000cjc7umqofvrnc","category_id":"cjjfmmqrr002njc7uoeb7wwos","_id":"cjjfmmqt50047jc7uc1qruxh2"},{"post_id":"cjjfmmqnz000djc7u4ysqmkmv","category_id":"cjjfmmqr8001ejc7u5s1rx95i","_id":"cjjfmmqt50048jc7uxjst2tpo"},{"post_id":"cjjfmmqnz000djc7u4ysqmkmv","category_id":"cjjfmmqs7002sjc7uxufg4y2j","_id":"cjjfmmqt50049jc7ul07goz4j"},{"post_id":"cjjfmmqnz000ejc7unwlnzgng","category_id":"cjjfmmqr8001gjc7u869qnjnc","_id":"cjjfmmqt5004ajc7usjxuwn8b"},{"post_id":"cjjfmmqnz000ejc7unwlnzgng","category_id":"cjjfmmqs7002xjc7u76xac34u","_id":"cjjfmmqt5004bjc7uthmud98i"},{"post_id":"cjjfmmqof000mjc7uwuvhdkwf","category_id":"cjjfmmqr8001wjc7u93voort9","_id":"cjjfmmqt5004cjc7udtyxkppc"},{"post_id":"cjjfmmqof000mjc7uwuvhdkwf","category_id":"cjjfmmqs70033jc7u53hidryb","_id":"cjjfmmqt5004djc7ufonl7o7t"},{"post_id":"cjjfmmqof000pjc7uuc1okao6","category_id":"cjjfmmqqs0010jc7u42i4nbdb","_id":"cjjfqnjus0001i07u19i2p7ph"}],"PostTag":[{"post_id":"cjjfmmqnk0002jc7uahkyguv6","tag_id":"cjjfmmqqd000tjc7ua7rkdeq0","_id":"cjjfmmqrr002gjc7ukhcj705t"},{"post_id":"cjjfmmqnk0002jc7uahkyguv6","tag_id":"cjjfmmqqs000vjc7u3eany7ky","_id":"cjjfmmqrr002jjc7utee9z6ti"},{"post_id":"cjjfmmqnk0003jc7u0c3cmhv5","tag_id":"cjjfmmqqd000tjc7ua7rkdeq0","_id":"cjjfmmqrr002ljc7udcdg0y6x"},{"post_id":"cjjfmmqnk0003jc7u0c3cmhv5","tag_id":"cjjfmmqqs000zjc7u5q0h7e87","_id":"cjjfmmqs7002ojc7uk3d0fk6r"},{"post_id":"cjjfmmqnk0004jc7ujo1l4h6g","tag_id":"cjjfmmqqs0011jc7u9bpjxs7f","_id":"cjjfmmqs7002qjc7ua6jfimyn"},{"post_id":"cjjfmmqnk0005jc7uroypzqh5","tag_id":"cjjfmmqqs0013jc7ubf7f71a7","_id":"cjjfmmqs7002tjc7u02z3y158"},{"post_id":"cjjfmmqnk0006jc7unh9p0gep","tag_id":"cjjfmmqqs0015jc7uay5xc5op","_id":"cjjfmmqs7002vjc7us7b1chsb"},{"post_id":"cjjfmmqnk0006jc7unh9p0gep","tag_id":"cjjfmmqqs0017jc7u1xkbzi52","_id":"cjjfmmqs7002yjc7uitkpyq6e"},{"post_id":"cjjfmmqnk0006jc7unh9p0gep","tag_id":"cjjfmmqqs0019jc7u3xpkjsi9","_id":"cjjfmmqs70030jc7uwokywpup"},{"post_id":"cjjfmmqnk0007jc7uanhlzpwo","tag_id":"cjjfmmqqs001bjc7ufp75un0x","_id":"cjjfmmqs70032jc7usvpxrga0"},{"post_id":"cjjfmmqnk0008jc7ucieujomt","tag_id":"cjjfmmqr8001djc7umqy67wte","_id":"cjjfmmqs70035jc7uigxwn8d6"},{"post_id":"cjjfmmqnk0008jc7ucieujomt","tag_id":"cjjfmmqr8001fjc7ublgsuw1w","_id":"cjjfmmqs70037jc7u78tf540i"},{"post_id":"cjjfmmqnz0009jc7u05dxhx4o","tag_id":"cjjfmmqr8001hjc7uc6gn7psc","_id":"cjjfmmqs70039jc7uqaljy2ne"},{"post_id":"cjjfmmqnz000ajc7uhnvbm2nb","tag_id":"cjjfmmqr8001jjc7uaztsqnbo","_id":"cjjfmmqs7003bjc7ubyplwyyk"},{"post_id":"cjjfmmqnz000bjc7uyqf4fn9h","tag_id":"cjjfmmqr8001fjc7ublgsuw1w","_id":"cjjfmmqs7003djc7urd5a5vcg"},{"post_id":"cjjfmmqnz000bjc7uyqf4fn9h","tag_id":"cjjfmmqr8001mjc7u54wrvo33","_id":"cjjfmmqs7003fjc7u2vxsw0s0"},{"post_id":"cjjfmmqnz000cjc7umqofvrnc","tag_id":"cjjfmmqr8001pjc7uo9n3jzya","_id":"cjjfmmqs7003hjc7uvj138v6m"},{"post_id":"cjjfmmqnz000cjc7umqofvrnc","tag_id":"cjjfmmqr8001rjc7u3kil9ja2","_id":"cjjfmmqs7003jjc7ub920sj57"},{"post_id":"cjjfmmqnz000djc7u4ysqmkmv","tag_id":"cjjfmmqr8001tjc7u39rk66l0","_id":"cjjfmmqs7003ljc7uzoalj8s4"},{"post_id":"cjjfmmqnz000djc7u4ysqmkmv","tag_id":"cjjfmmqr8001vjc7utili198l","_id":"cjjfmmqs7003njc7ucjhmmfiv"},{"post_id":"cjjfmmqnz000ejc7unwlnzgng","tag_id":"cjjfmmqr8001xjc7u7tgkhibi","_id":"cjjfmmqs7003pjc7ut154jy6g"},{"post_id":"cjjfmmqnz000ejc7unwlnzgng","tag_id":"cjjfmmqr8001zjc7uxkeij4ze","_id":"cjjfmmqs7003qjc7uq8lqaenu"},{"post_id":"cjjfmmqnz000fjc7u5w3p46va","tag_id":"cjjfmmqr80021jc7up3sulsm8","_id":"cjjfmmqs7003rjc7u267b41l4"},{"post_id":"cjjfmmqnz000gjc7ua3uh43eg","tag_id":"cjjfmmqrn0023jc7u4myz9ivi","_id":"cjjfmmqs7003sjc7u34mvf3ly"},{"post_id":"cjjfmmqnz000hjc7uibxjdt11","tag_id":"cjjfmmqr8001jjc7uaztsqnbo","_id":"cjjfmmqsm003tjc7u38b6czhr"},{"post_id":"cjjfmmqnz000ijc7ud3llrd3r","tag_id":"cjjfmmqqs0011jc7u9bpjxs7f","_id":"cjjfmmqsm003ujc7ughd0dfpl"},{"post_id":"cjjfmmqnz000jjc7ujwv41oic","tag_id":"cjjfmmqrn0023jc7u4myz9ivi","_id":"cjjfmmqsm003vjc7u40dwdql0"},{"post_id":"cjjfmmqnz000kjc7ut2rrm223","tag_id":"cjjfmmqrr0028jc7u8m3y16dy","_id":"cjjfmmqsm003wjc7urdis0b87"},{"post_id":"cjjfmmqof000ljc7ualkum4mk","tag_id":"cjjfmmqrr0029jc7ul80dmq2v","_id":"cjjfmmqsm003xjc7uwhypjj1h"},{"post_id":"cjjfmmqof000mjc7uwuvhdkwf","tag_id":"cjjfmmqrr002ajc7u3qn2m3tl","_id":"cjjfmmqsm003yjc7ub5fd0i5w"},{"post_id":"cjjfmmqof000mjc7uwuvhdkwf","tag_id":"cjjfmmqrr002bjc7ubg2w2jvq","_id":"cjjfmmqsm003zjc7u1eoabj4c"},{"post_id":"cjjfmmqof000njc7ukm8qt2sc","tag_id":"cjjfmmqrn0023jc7u4myz9ivi","_id":"cjjfmmqsm0040jc7uksljzj4r"},{"post_id":"cjjfmmqof000ojc7u7sk6himh","tag_id":"cjjfmmqr8001hjc7uc6gn7psc","_id":"cjjfmmqsm0041jc7ueq0tznbu"},{"post_id":"cjjfmmqof000qjc7ue56vc3e6","tag_id":"cjjfmmqrr002ejc7uoq63zgon","_id":"cjjfmmqsm0042jc7u8g528dhu"},{"post_id":"cjjfmmqof000rjc7uvwsy2vfy","tag_id":"cjjfmmqrr0028jc7u8m3y16dy","_id":"cjjfmmqsm0043jc7uonol2y6i"},{"post_id":"cjjfmmqof000pjc7uuc1okao6","tag_id":"cjjfmmqqs0019jc7u3xpkjsi9","_id":"cjjfqnjur0000i07uxkbpxesq"}],"Tag":[{"name":"切图","_id":"cjjfmmqqd000tjc7ua7rkdeq0"},{"name":"Fireworks","_id":"cjjfmmqqs000vjc7u3eany7ky"},{"name":"Photoshop","_id":"cjjfmmqqs000zjc7u5q0h7e87"},{"name":"Git","_id":"cjjfmmqqs0011jc7u9bpjxs7f"},{"name":"GoJS","_id":"cjjfmmqqs0013jc7ubf7f71a7"},{"name":"SQL","_id":"cjjfmmqqs0015jc7uay5xc5op"},{"name":"SQL Server","_id":"cjjfmmqqs0017jc7u1xkbzi52"},{"name":"数据库","_id":"cjjfmmqqs0019jc7u3xpkjsi9"},{"name":"Java","_id":"cjjfmmqqs001bjc7ufp75un0x"},{"name":"读书笔记","_id":"cjjfmmqr8001djc7umqy67wte"},{"name":"JavaScript","_id":"cjjfmmqr8001fjc7ublgsuw1w"},{"name":"面试","_id":"cjjfmmqr8001hjc7uc6gn7psc"},{"name":"部署","_id":"cjjfmmqr8001jjc7uaztsqnbo"},{"name":"兼容","_id":"cjjfmmqr8001mjc7u54wrvo33"},{"name":"Gulp","_id":"cjjfmmqr8001pjc7uo9n3jzya"},{"name":"前端自动化","_id":"cjjfmmqr8001rjc7u3kil9ja2"},{"name":"预处理CSS","_id":"cjjfmmqr8001tjc7u39rk66l0"},{"name":"Less","_id":"cjjfmmqr8001vjc7utili198l"},{"name":"NVM","_id":"cjjfmmqr8001xjc7u7tgkhibi"},{"name":"Node.js","_id":"cjjfmmqr8001zjc7uxkeij4ze"},{"name":"Vue.js","_id":"cjjfmmqr80021jc7up3sulsm8"},{"name":"CSS","_id":"cjjfmmqrn0023jc7u4myz9ivi"},{"name":"移动Web","_id":"cjjfmmqrr0028jc7u8m3y16dy"},{"name":"正则表达式","_id":"cjjfmmqrr0029jc7ul80dmq2v"},{"name":"WebStrom","_id":"cjjfmmqrr002ajc7u3qn2m3tl"},{"name":"Chrome","_id":"cjjfmmqrr002bjc7ubg2w2jvq"},{"name":"前端","_id":"cjjfmmqrr002ejc7uoq63zgon"}]}}