{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/issues.PNG","path":"images/issues.PNG","modified":1,"renderable":0},{"_id":"source/images/weixin.png","path":"images/weixin.png","modified":1,"renderable":0},{"_id":"source/images/zhifubao.png","path":"images/zhifubao.png","modified":1,"renderable":0},{"_id":"source/images/logo.jpg","path":"images/logo.jpg","modified":1,"renderable":0},{"_id":"themes/raytaylorism/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/weixin_favicon.png","path":"weixin_favicon.png","modified":1,"renderable":1},{"_id":"source/images/crane.jpg","path":"images/crane.jpg","modified":1,"renderable":0},{"_id":"source/images/penguin.jpg","path":"images/penguin.jpg","modified":1,"renderable":0},{"_id":"themes/raytaylorism/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/js/prettify.js","path":"js/prettify.js","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/js/materialize.min.js","path":"js/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/images/side-user-cover.jpg","path":"css/images/side-user-cover.jpg","modified":1,"renderable":1},{"_id":"source/images/sea.jpg","path":"images/sea.jpg","modified":1,"renderable":0},{"_id":"themes/raytaylorism/source/css/lib/font-awesome.min.css","path":"css/lib/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/tranquil-heart.css","path":"css/lib/tranquil-heart.css","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/prettify-tomorrow-night-eighties.css","path":"css/lib/prettify-tomorrow-night-eighties.css","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/materialize.min.css","path":"css/lib/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/FontAwesome.otf","path":"css/font/font-awesome/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.eot","path":"css/font/font-awesome/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff","path":"css/font/font-awesome/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff2","path":"css/font/font-awesome/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.eot","path":"css/font/roboto/Roboto-Bold.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff2","path":"css/font/roboto/Roboto-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff","path":"css/font/roboto/Roboto-Light.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff","path":"css/font/roboto/Roboto-Bold.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff","path":"css/font/roboto/Roboto-Medium.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff2","path":"css/font/roboto/Roboto-Light.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff2","path":"css/font/roboto/Roboto-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff","path":"css/font/roboto/Roboto-Regular.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.eot","path":"css/font/roboto/Roboto-Light.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.ttf","path":"css/font/font-awesome/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.ttf","path":"css/font/roboto/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.ttf","path":"css/font/roboto/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.ttf","path":"css/font/roboto/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.ttf","path":"css/font/roboto/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"source/images/boyaa.png","path":"images/boyaa.png","modified":1,"renderable":0},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.eot","path":"css/font/roboto/Roboto-Medium.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.eot","path":"css/font/roboto/Roboto-Regular.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff2","path":"css/font/roboto/Roboto-Regular.woff2","modified":1,"renderable":1},{"_id":"source/images/goldminer.png","path":"images/goldminer.png","modified":1,"renderable":0},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.svg","path":"css/font/font-awesome/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"2da8323f8c8ccf2fa4de3a91eca4f56652250a36","modified":1493264101070},{"_id":"themes/raytaylorism/Gruntfile.js","hash":"f69b2e716f955c9d5a23ca1b75394098c1494858","modified":1493259570525},{"_id":"themes/raytaylorism/README.md","hash":"22e6879f7391381df4e70fe144ac53369327f907","modified":1493259570526},{"_id":"themes/raytaylorism/log.md","hash":"99d57a50f8f328d1a313b47bb636d0dc5656d813","modified":1493259570543},{"_id":"themes/raytaylorism/LICENSE","hash":"115cd028ae511ac9e3d30eb4933da38136a68513","modified":1493259570525},{"_id":"source/_posts/Photoshop切图.md","hash":"f99c41259c2f7086eefc558bc4467f04d0a1a9e5","modified":1506480689593},{"_id":"source/_posts/《JavaScript高级程序设计》读书笔记.md","hash":"ffa256c3854aa4ef571a63902e7c7ae6eeb9ec88","modified":1494647761273},{"_id":"themes/raytaylorism/_config.yml","hash":"fee4aec492b86281c99690739b8c4f7322608fa7","modified":1493541401613},{"_id":"source/_posts/Fireworks切图.md","hash":"bcdd1de71df74457ddcb6ad021ba0867eecc477c","modified":1506331179100},{"_id":"source/_posts/一些常见的JavaScript兼容性写法.md","hash":"814b01f78b88b54fd535d5c4d0cedf4141eb3045","modified":1493431830145},{"_id":"source/_posts/使用Less.md","hash":"1f814d42813100174c91a621e9fd028cb62ac3b9","modified":1494648248197},{"_id":"source/_posts/使用Gulp.md","hash":"2ac71ef7a829e08f183166d3e47ab29708c95831","modified":1493366682022},{"_id":"source/_posts/使用NVM安装Node.js.md","hash":"149fce52c51698b9a927245c558aab1efcbd2ba4","modified":1493431733514},{"_id":"source/_posts/使用新浪云部署网站.md","hash":"8a9cf2dd8d554cb18c833dab500924a2dbc880f0","modified":1493363144674},{"_id":"source/_posts/一些常见的CSS兼容性写法.md","hash":"e4b9b0113ed110b9f54f097417cb712bdfb9616f","modified":1506409547610},{"_id":"source/_posts/开发中的一些小知识点.md","hash":"f12fd37b9e5bef43cb47f1ee2bac98998b1e7691","modified":1506397806022},{"_id":"source/about/index.md","hash":"b0d0cdd41890fc1f93f27fdeb849da4366e234d9","modified":1493262298582},{"_id":"source/reading/index.md","hash":"ab4ae4fad36f371f60b49973797a115423a784d4","modified":1493259570528},{"_id":"source/_posts/使用GitHub部署网站.md","hash":"f5a127ac28cb5ea2c1c0e7f2dd6c1c7f647b1e98","modified":1506061747245},{"_id":"source/_posts/移动Web学习笔记.md","hash":"d135cf6dcd3e53f5a41e22771d619b5fc1234e44","modified":1504773607818},{"_id":"source/_posts/常见的WebStrom使用技巧.md","hash":"3eb43c922d516dd0e220f905a76545ea2b3726fc","modified":1506330009182},{"_id":"themes/raytaylorism/languages/default.yml","hash":"3628e71f7fb22a3315f73c8226b82f56bcb14b21","modified":1493259570529},{"_id":"themes/raytaylorism/languages/zh-CN.yml","hash":"3399023e16b05696b83494a52044cfb44e8a39ec","modified":1493259570529},{"_id":"themes/raytaylorism/languages/zh-TW.yml","hash":"b514bfb6832c1f33269836fbceb6356ac846386c","modified":1493259570529},{"_id":"source/_posts/常用的Git命令.md","hash":"67da06fd82b7ca35c345727970d33ea0f63789a3","modified":1505290247597},{"_id":"source/images/issues.PNG","hash":"faf8077f6a55496cf67bb4c09f107eb4a3b5a94b","modified":1493280653452},{"_id":"source/images/weixin.png","hash":"42c98b2981d8cc7e7c2e8286ec8beb2cd023473d","modified":1493264101116},{"_id":"themes/raytaylorism/_data/hint.json","hash":"178fe345ea95511364ed70da86186cb834947993","modified":1493259570527},{"_id":"themes/raytaylorism/_data/link.json","hash":"b865125d0440e6717ee3d88d1b518a4ebdb32d61","modified":1493259570527},{"_id":"source/images/zhifubao.png","hash":"26f96b9b276d8de4f41445029cf755bf40d7fd2d","modified":1493264101117},{"_id":"themes/raytaylorism/_data/slider.json","hash":"361373b57cfb5371027af42000bbaec4e03333a3","modified":1493259570528},{"_id":"source/images/logo.jpg","hash":"82e8aa357128a319fd3832e8c07af29b5830c971","modified":1493264101112},{"_id":"themes/raytaylorism/_data/about.json","hash":"ad37c7a373e24ba9fb26630b0e761cabb3431b90","modified":1493259570526},{"_id":"themes/raytaylorism/_data/reading.json","hash":"e8045e22b2d499a5d813320a8c2b1bccdbedd46d","modified":1493259570527},{"_id":"themes/raytaylorism/source/favicon.png","hash":"6fe505919c27f5010a60b365027b6c2e03f8a1b2","modified":1493260507049},{"_id":"themes/raytaylorism/layout/archive.ejs","hash":"0a21af8903e95c6d8bb7554b089ac219e8708ad7","modified":1493259570541},{"_id":"themes/raytaylorism/layout/index.ejs","hash":"50c1e7dab5a065fd10dd3a28fdffa5e3d342de82","modified":1493259570541},{"_id":"themes/raytaylorism/layout/layout.ejs","hash":"43beb54ac81519cf5e88a3a1494649beeb856066","modified":1493259570541},{"_id":"themes/raytaylorism/layout/post.ejs","hash":"8e550fd95ef761909294ed3a4aa428ff0509fbf0","modified":1493259570542},{"_id":"themes/raytaylorism/layout/page.ejs","hash":"90441f114859ce63ef7c7d93d668dbe5939995c2","modified":1493259570542},{"_id":"themes/raytaylorism/source/weixin_favicon.png","hash":"4a8466bd7d8cf4753cab8fb68647b40b91a246ad","modified":1493259570577},{"_id":"themes/raytaylorism/layout/tag.ejs","hash":"42ecab14917abd40c0a38e6ab629f089352a24b1","modified":1493259570543},{"_id":"source/_data/hint.json","hash":"178fe345ea95511364ed70da86186cb834947993","modified":1493259570527},{"_id":"source/_data/link.json","hash":"cc0057e926326e3cb600d6803267a1122fd91c7d","modified":1506476262469},{"_id":"themes/raytaylorism/layout/reading.ejs","hash":"8fa965aa0f11f356c9f5344770cc9fc615577a74","modified":1493259570542},{"_id":"themes/raytaylorism/layout/about.ejs","hash":"599b3bb334b3f88b918e67f7a709287b8effee6d","modified":1493259570541},{"_id":"source/_data/reading.json","hash":"9265f4f8b33675be89f149284bd5c53043401fa2","modified":1493596729036},{"_id":"themes/raytaylorism/_md/about/index.md","hash":"e968783b80dffcfb0966bf6425bc263602375380","modified":1493262162585},{"_id":"themes/raytaylorism/_md/reading/index.md","hash":"ab4ae4fad36f371f60b49973797a115423a784d4","modified":1493259570528},{"_id":"source/_data/about.json","hash":"ac525035b92aadeaafddbdb8ea736871047c2414","modified":1497325322819},{"_id":"source/images/crane.jpg","hash":"663eba84d187d6ecfe98e476694fec2ff343a65e","modified":1493264101111},{"_id":"source/images/penguin.jpg","hash":"b8bf241641b3229851ab5a7e847c5e3b4df865c4","modified":1493264101112},{"_id":"themes/raytaylorism/layout/_partial/after_footer.ejs","hash":"9fafc2cb14cbca89e48335d64ab058b5f256a36e","modified":1493259570530},{"_id":"themes/raytaylorism/layout/_partial/archive.ejs","hash":"68c7db951ffb5323d49d4de74e3b0de7f70fb4c3","modified":1493259570530},{"_id":"themes/raytaylorism/layout/_partial/archive_title.ejs","hash":"dfc6c670702e64abce5fd87e3e2ea43c966ace32","modified":1493259570530},{"_id":"themes/raytaylorism/layout/_partial/article.ejs","hash":"cb0445571d07ef2df5d33b7aeaee8b9f6a4764b7","modified":1493259570530},{"_id":"themes/raytaylorism/layout/_partial/float.ejs","hash":"bba2781f42cd8ea0895749377e6f2cce69cadb6a","modified":1493259570532},{"_id":"themes/raytaylorism/layout/_partial/construction.ejs","hash":"21190b5a0d567ed4ea5d5289459690b72c1452f0","modified":1493259570531},{"_id":"themes/raytaylorism/source/css/style.styl","hash":"a05bcd2543b7bdcd3f725db6d053cd76ccf154be","modified":1493259570573},{"_id":"themes/raytaylorism/source/js/prettify.js","hash":"d592e6f771c2955cea3764d819221b91bc343961","modified":1493259570576},{"_id":"themes/raytaylorism/layout/_partial/menu_drawer.ejs","hash":"028ecbf59089cc4d1907a2d91d8da937f92d321c","modified":1493259570533},{"_id":"themes/raytaylorism/layout/_partial/feature_guide.ejs","hash":"7aefb6bdc65d1e6113cb83190fcd2f29af2c9125","modified":1493259570532},{"_id":"themes/raytaylorism/layout/_partial/pagenav.ejs","hash":"e7ada8faaee878ea4dde267d1b420bb45421670d","modified":1493259570533},{"_id":"source/_data/slider.json","hash":"02f401249608d45f6deee39af54baf90cfb53b2b","modified":1504792194390},{"_id":"themes/raytaylorism/layout/_partial/head.ejs","hash":"7ceea72401426588cd7778f92585ab9487b463da","modified":1493259570533},{"_id":"themes/raytaylorism/layout/_partial/header.ejs","hash":"0616dd744262dd4cc98cd1cabe959643c845141f","modified":1493259570533},{"_id":"themes/raytaylorism/layout/_partial/search.ejs","hash":"0eca40de0d39c1ae52040fcb8c9d7f79afce35dc","modified":1493259570538},{"_id":"themes/raytaylorism/layout/_partial/slider.ejs","hash":"bb7b53f6ca9c852808d955fb074f88112e51ea59","modified":1493259570539},{"_id":"themes/raytaylorism/layout/_partial/footer.ejs","hash":"24885dc1d579db3615cabcb0675b55bd16a0961f","modified":1493259570532},{"_id":"themes/raytaylorism/layout/_widget/blogroll.ejs","hash":"1a6808fa62906e7fb1fac3e16208fa6b1fc8d0ea","modified":1493259570540},{"_id":"themes/raytaylorism/layout/_widget/tagcloud.ejs","hash":"f256f028c247bdcb7927351df89f2284c64b7b6c","modified":1493259570540},{"_id":"themes/raytaylorism/layout/_widget/recent_posts.ejs","hash":"935bfacce10a726eed6cd82fe39d2c6f9cce9e2a","modified":1493259570540},{"_id":"themes/raytaylorism/layout/_widget/tag.ejs","hash":"90e0ba4412285903420ee3b43125a56743edf0c6","modified":1493259570540},{"_id":"themes/raytaylorism/layout/_partial/pagination.ejs","hash":"00de7746cf4ef8c4b67a72e825e5ff236f9d5814","modified":1493259570534},{"_id":"themes/raytaylorism/layout/_partial/side_nav.ejs","hash":"c69c45de069c348bf3906f1bd941920887a85c98","modified":1493259570539},{"_id":"themes/raytaylorism/layout/_widget/category.ejs","hash":"95292eb643be63d98f08e28f759c9b01bbfcb9b8","modified":1493259570540},{"_id":"themes/raytaylorism/source/js/jquery.min.js","hash":"f694238d616f579a0690001f37984af430c19963","modified":1493259570574},{"_id":"themes/raytaylorism/layout/_partial/simple_article.ejs","hash":"6480e101b2f29dddd661410c56516c767d88b79f","modified":1493259570539},{"_id":"themes/raytaylorism/source/css/_partial/archive.styl","hash":"4d48566e9f72b8eac8875b6985885418f56fbafa","modified":1493259570545},{"_id":"themes/raytaylorism/source/css/_partial/comment.styl","hash":"590f1386581181ab588be06e4189861f5a209467","modified":1493259570546},{"_id":"themes/raytaylorism/source/css/_partial/footer.styl","hash":"345e2147c1cec1bf24ab7338a8c929d6716fd730","modified":1493259570546},{"_id":"themes/raytaylorism/source/css/_partial/header.styl","hash":"ebfd0155cda8a0876c36595708f02c294a7c82a0","modified":1493259570546},{"_id":"themes/raytaylorism/source/css/_partial/about.styl","hash":"def183d6908ebcbd59341b09e9f7e06dc277b9ca","modified":1493259570545},{"_id":"themes/raytaylorism/source/css/_partial/index.styl","hash":"ac83523dd14a1fc1fe55f98c84ed84cb03be864b","modified":1493259570547},{"_id":"themes/raytaylorism/source/css/_partial/article.styl","hash":"293e38a8ab9aee346cc8e52421f1519c5a46a667","modified":1493259570546},{"_id":"themes/raytaylorism/source/css/_partial/reading.styl","hash":"f81929fa12212465b02456d0bb3b8263355e3281","modified":1493259570547},{"_id":"themes/raytaylorism/source/css/_partial/search.styl","hash":"f9ca6f5626c795ae73ff7412ff58207b62fd64ac","modified":1493259570548},{"_id":"themes/raytaylorism/source/css/_partial/link_context.styl","hash":"5b23db4dee53cbbe9eef257f4a542823100fde72","modified":1493259570547},{"_id":"themes/raytaylorism/source/css/_partial/slider.styl","hash":"ad757e74b3500aa774636ebbe5bdcee7e52e5ad7","modified":1493259570548},{"_id":"themes/raytaylorism/source/css/_partial/other.styl","hash":"32bf499037a45ad2e0007a9ab3054067adc02506","modified":1493259570547},{"_id":"themes/raytaylorism/source/css/_partial/tablecontents.styl","hash":"e04fa0e7664065077750a7223ae3390cc84a4c56","modified":1493259570549},{"_id":"themes/raytaylorism/source/css/_partial/side_nav.styl","hash":"b239b6b55e87e86d038d6aa821beeb66a9cbaf39","modified":1493259570548},{"_id":"themes/raytaylorism/source/css/_base/layout.styl","hash":"b2f718418de61946504a3f8bf28b75be165913a7","modified":1493259570544},{"_id":"themes/raytaylorism/source/css/_partial/syntax.styl","hash":"f39e7bb08abcc220f7c57fb413e76f4043ab9c35","modified":1493259570548},{"_id":"themes/raytaylorism/source/css/_base/variable.styl","hash":"ce4e056d1bbfb80734d98a6898950e7c0136edf4","modified":1493259570545},{"_id":"themes/raytaylorism/source/js/materialize.min.js","hash":"04fe8bbc9a3165eb7bfb13b7166306ed671268d8","modified":1493259570576},{"_id":"themes/raytaylorism/source/css/images/side-user-cover.jpg","hash":"d8d73a64d6d5af83a27e6af1d4fedef808955ba0","modified":1493259570570},{"_id":"themes/raytaylorism/layout/_partial/plugin/analytics.ejs","hash":"b7dbd8342866929e683e9b013caa7324547ff704","modified":1493259570534},{"_id":"themes/raytaylorism/layout/_partial/plugin/google_code_prettify.ejs","hash":"336f01048440f0c9f7b75f24aafcc3a1ffefd9a0","modified":1493259570535},{"_id":"themes/raytaylorism/layout/_partial/plugin/main_javascript.ejs","hash":"6629eec982aa789767b83e80af12fa40189ac344","modified":1493259570535},{"_id":"themes/raytaylorism/layout/_partial/plugin/mathjax.ejs","hash":"6f6b85a5876ae150d3e5f08e384aff68652c0335","modified":1493259570535},{"_id":"themes/raytaylorism/layout/_partial/plugin/noscript.ejs","hash":"182650c8be93b093997ac4d5fe14af2f835b98d9","modified":1493259570536},{"_id":"themes/raytaylorism/source/css/_base/icons.css","hash":"ab167f1694ffe10c3c51d18a633efd41be121555","modified":1493259570544},{"_id":"themes/raytaylorism/source/css/_base/lib_customize.styl","hash":"e4946dec16d0e96e6f2067a09c275ea84c0b3146","modified":1493259570544},{"_id":"themes/raytaylorism/layout/_partial/plugin/comment - 副本.ejs","hash":"dac44dff1be6a287d78b9a12f9c84f5d80372f95","modified":1493296878472},{"_id":"themes/raytaylorism/layout/_partial/plugin/reward.ejs","hash":"284ab1d5cb4f43eb23b6d7a8aba2477b34abdc00","modified":1493259570536},{"_id":"themes/raytaylorism/layout/_partial/plugin/comment.ejs","hash":"e56cb358a2cd1c0efbca73e0928865d62e4d5f81","modified":1505399833703},{"_id":"source/images/sea.jpg","hash":"eb2b9d7310b523c42cd5c4dc7606022af175373e","modified":1493264101116},{"_id":"themes/raytaylorism/layout/_partial/post/category.ejs","hash":"e17f452079201bd2a5a37bc76b51b132afd04faa","modified":1493259570536},{"_id":"themes/raytaylorism/layout/_partial/post/gallery.ejs","hash":"bd2285802766572736663e61852eb49f6acc744f","modified":1493259570537},{"_id":"themes/raytaylorism/source/css/lib/font-awesome.min.css","hash":"14be7d7ae1894d2cc7c1a8e847df4db42a310b2f","modified":1493259570571},{"_id":"themes/raytaylorism/layout/_partial/post/readtimes.ejs","hash":"c829d0598f9906f663a8ace1c86f2aa6024d642c","modified":1493259570537},{"_id":"themes/raytaylorism/layout/_partial/post/tablecontents.ejs","hash":"a851061909d4e27321d1792a262f55385529fb2d","modified":1493259570537},{"_id":"themes/raytaylorism/layout/_partial/post/prevnext.ejs","hash":"6556eea4fb351639006c16e9831fd72ab46076ba","modified":1493259570537},{"_id":"themes/raytaylorism/layout/_partial/post/tag.ejs","hash":"0f84c1aded9ba1887566d34e7f0d696c015295f0","modified":1493259570538},{"_id":"themes/raytaylorism/layout/_partial/post/title.ejs","hash":"f0733a134b375172a2cec830d7d09bdba33891fe","modified":1493259570538},{"_id":"themes/raytaylorism/layout/_partial/post/time.ejs","hash":"42210d6b5a132f5c18352dcff2983d3fdbe26956","modified":1493259570538},{"_id":"themes/raytaylorism/source/css/lib/tranquil-heart.css","hash":"cb601cf28f7ec08fd1a9700aa755f7cb1645ac4a","modified":1493277663677},{"_id":"themes/raytaylorism/source/css/lib/prettify-tomorrow-night-eighties.css","hash":"e320b2be926124d30998af0e149b7f06303b8f8b","modified":1493259570573},{"_id":"themes/raytaylorism/source/css/lib/materialize.min.css","hash":"457ee5d3d402e87db483182b53b94d90c2d80966","modified":1493342151444},{"_id":"themes/raytaylorism/source/css/font/font-awesome/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1493259570550},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1493259570551},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1493259570557},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1493259570558},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1493259570558},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1493259570561},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1493259570564},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1493259570560},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1493259570566},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1493259570564},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1493259570567},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1493259570569},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1493259570561},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1493259570556},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1493259570560},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1493259570563},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1493259570566},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1493259570569},{"_id":"source/images/boyaa.png","hash":"0917b866bb1450e7abbcdc83fe0df92816c115d6","modified":1493263933936},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1493259570564},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1493259570567},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1493259570570},{"_id":"source/images/goldminer.png","hash":"e465db31988f3ba0b06969fcf150c41e67823a26","modified":1493265053159},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1493259570554}],"Category":[{"name":"切图","_id":"cj82frpjj000438pxo95vgw24"},{"name":"读书笔记","_id":"cj82frpk4000938px0129n47l"},{"name":"JavaScript","_id":"cj82frpkn000l38pxl5qhbazf"},{"name":"预处理CSS","_id":"cj82frpku000p38pxnzxm4ucc"},{"name":"Gulp","_id":"cj82frpkz000t38px71pv59o9"},{"name":"NVM","_id":"cj82frpl1000v38px86g99aqu"},{"name":"部署","_id":"cj82frpl5001038px1s8fyekd"},{"name":"CSS","_id":"cj82frpl7001238pxtxxz2qtw"},{"name":"前端","_id":"cj82frpla001738pxxkpowknn"},{"name":"兼容","parent":"cj82frpkn000l38pxl5qhbazf","_id":"cj82frplh001938pxuox9425m"},{"name":"Less","parent":"cj82frpku000p38pxnzxm4ucc","_id":"cj82frplo001e38pxap4icytp"},{"name":"前端自动化","parent":"cj82frpkz000t38px71pv59o9","_id":"cj82frplp001h38pxfbz3r24w"},{"name":"Node.js","parent":"cj82frpl1000v38px86g99aqu","_id":"cj82frplt001n38pxu4d6e9ww"},{"name":"兼容","parent":"cj82frpl7001238pxtxxz2qtw","_id":"cj82frplw001r38pxua9om5y4"},{"name":"移动Web","_id":"cj82frpn8002a38pxn1lkykei"},{"name":"WebStrom","_id":"cj82frpnd002e38px8wepzhhk"},{"name":"Git","_id":"cj82frpng002i38px62c0n7s9"}],"Data":[{"_id":"link","data":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}}},{"_id":"hint","data":{"new":{"selector":[".menu-reading",".menu-about"]}}},{"_id":"reading","data":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}}},{"_id":"about","data":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]}},{"_id":"slider","data":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}],"Page":[{"title":"关于","layout":"about","_content":"大家好，我是meishadevs。欢迎来到我的个人技术博客。","source":"about/index.md","raw":"title: 关于\nlayout: about\n---\n大家好，我是meishadevs。欢迎来到我的个人技术博客。","date":"2017-04-27T03:04:58.582Z","updated":"2017-04-27T03:04:58.582Z","path":"about/index.html","comments":1,"_id":"cj82frpj9000138pxqm9mbuiw","content":"<p>大家好，我是meishadevs。欢迎来到我的个人技术博客。</p>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"","more":"<p>大家好，我是meishadevs。欢迎来到我的个人技术博客。</p>\n"},{"title":"读书","layout":"reading","_content":"","source":"reading/index.md","raw":"title: 读书\nlayout: reading\n---\n","date":"2017-04-27T02:25:11.372Z","updated":"2017-04-27T02:19:30.528Z","path":"reading/index.html","comments":1,"_id":"cj82frpjg000338pxczd50lrn","content":"","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"","more":""}],"Post":[{"title":"Photoshop切图","date":"2017-03-01T16:00:00.000Z","_content":"\n自己平时总结的一些使用Photoshop切图的方法与技巧。\n<!--more-->\n\n- **将单位改成像素**  \nPhotoshop中默认的单位是厘米，而在切图时需要的单位是像素  \n方法：启动Photoshop——选择编辑——选择首选项——选择单位与标尺——在弹出的单位与标尺设置对话框中将标尺的单位和文字的单位都设置成像素——设置完成后单击确定按钮  \n\n\n- **新建文件的快捷键**  \nCtrl + N\n\n- **撤销操作的快捷键**  \nCtrl + Alt + Z\n\n- **选中某个图层**  \n首先选择移动工具，将鼠标移动到某个图层上，按下Ctrl + 单击鼠标左键(前提是不要勾选自动选择图层)\n\n\n- **使用工具中的其他工具**  \n当工具栏中的工具右下角有一个小三角，表示工具中还有其他的工具，比如将鼠标移到工具下按住鼠标左键会弹出一个下拉菜单，下拉菜单中会展示工具下的其他工具\n\n\n- **矩形选框工具的快捷键**  \nM键\n\n\n- **矩形选框工具与椭圆选框工具之间互相切换的快捷键**  \n选中矩形选框工具后，按Shift + M，可以实现矩形选区工具和椭圆选区工具之间的互相切换\n\n\n- **删除选区的快捷键**  \nCtrl + D\n\n\n- **移动工具的快捷键**  \nV键\n\n\n- **打开或关闭标尺的快捷键**  \nCtrl + R\n\n\n- **打开视图菜单的快捷键**  \n先按一下Alt,再按一下V\n\n\n- **打开新建参考线对话框的快捷方式**  \n先按一下Alt，再按一下V，最后按一下E\n\n\n- **显示/隐藏参考线的快捷键**  \nCtrl + ;\n\n\n- **打开切片工具的快捷键**  \nC\n\n\n- **放大/缩小图片**  \n按住 Ctrl 和 Alt 滚动鼠标的滚轮\n\n\n- **切图方法**  \n选择需要切割的图片所在的图层——将鼠标移到选中的图层上并单击鼠标右键——在弹出的选项中选择转换为智能对象——选择矩形选框工具——使用矩形选框工具选择要切割的图片——复制要切割的图片——新建一个背景透明的图层(此时图层的尺寸会自动调整为选中的图片尺寸)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储\n\n\n\n- **辅助线快速转换为切片的方法**  \n在需要切割的图片上创建四条参考线——选择工具栏中的切片工具——点击状态栏中的基于参考线的切片(此时由参考线围城的矩形都转换为了切片)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储——在弹出的将优化结果存储为对话框中最底下的切片选项中选择选中的切面(切面选项默认选择的是所有切片)——单击Save按钮\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/PhotoShop切图](http://meishadevs.com/blog/Photoshop%E5%88%87%E5%9B%BE/)】\n\n","source":"_posts/Photoshop切图.md","raw":"---\ntitle: Photoshop切图\ndate: 2017-03-02\ncategories:\n\t- 切图\ntags:\n    - 切图\n    - Photoshop\n---\n\n自己平时总结的一些使用Photoshop切图的方法与技巧。\n<!--more-->\n\n- **将单位改成像素**  \nPhotoshop中默认的单位是厘米，而在切图时需要的单位是像素  \n方法：启动Photoshop——选择编辑——选择首选项——选择单位与标尺——在弹出的单位与标尺设置对话框中将标尺的单位和文字的单位都设置成像素——设置完成后单击确定按钮  \n\n\n- **新建文件的快捷键**  \nCtrl + N\n\n- **撤销操作的快捷键**  \nCtrl + Alt + Z\n\n- **选中某个图层**  \n首先选择移动工具，将鼠标移动到某个图层上，按下Ctrl + 单击鼠标左键(前提是不要勾选自动选择图层)\n\n\n- **使用工具中的其他工具**  \n当工具栏中的工具右下角有一个小三角，表示工具中还有其他的工具，比如将鼠标移到工具下按住鼠标左键会弹出一个下拉菜单，下拉菜单中会展示工具下的其他工具\n\n\n- **矩形选框工具的快捷键**  \nM键\n\n\n- **矩形选框工具与椭圆选框工具之间互相切换的快捷键**  \n选中矩形选框工具后，按Shift + M，可以实现矩形选区工具和椭圆选区工具之间的互相切换\n\n\n- **删除选区的快捷键**  \nCtrl + D\n\n\n- **移动工具的快捷键**  \nV键\n\n\n- **打开或关闭标尺的快捷键**  \nCtrl + R\n\n\n- **打开视图菜单的快捷键**  \n先按一下Alt,再按一下V\n\n\n- **打开新建参考线对话框的快捷方式**  \n先按一下Alt，再按一下V，最后按一下E\n\n\n- **显示/隐藏参考线的快捷键**  \nCtrl + ;\n\n\n- **打开切片工具的快捷键**  \nC\n\n\n- **放大/缩小图片**  \n按住 Ctrl 和 Alt 滚动鼠标的滚轮\n\n\n- **切图方法**  \n选择需要切割的图片所在的图层——将鼠标移到选中的图层上并单击鼠标右键——在弹出的选项中选择转换为智能对象——选择矩形选框工具——使用矩形选框工具选择要切割的图片——复制要切割的图片——新建一个背景透明的图层(此时图层的尺寸会自动调整为选中的图片尺寸)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储\n\n\n\n- **辅助线快速转换为切片的方法**  \n在需要切割的图片上创建四条参考线——选择工具栏中的切片工具——点击状态栏中的基于参考线的切片(此时由参考线围城的矩形都转换为了切片)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储——在弹出的将优化结果存储为对话框中最底下的切片选项中选择选中的切面(切面选项默认选择的是所有切片)——单击Save按钮\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/PhotoShop切图](http://meishadevs.com/blog/Photoshop%E5%88%87%E5%9B%BE/)】\n\n","slug":"Photoshop切图","published":1,"updated":"2017-09-27T02:51:29.593Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpiw000038px6j6xf9rx","content":"<p>自己平时总结的一些使用Photoshop切图的方法与技巧。<br><a id=\"more\"></a></p>\n<ul>\n<li><strong>将单位改成像素</strong><br>Photoshop中默认的单位是厘米，而在切图时需要的单位是像素<br>方法：启动Photoshop——选择编辑——选择首选项——选择单位与标尺——在弹出的单位与标尺设置对话框中将标尺的单位和文字的单位都设置成像素——设置完成后单击确定按钮  </li>\n</ul>\n<ul>\n<li><p><strong>新建文件的快捷键</strong><br>Ctrl + N</p>\n</li>\n<li><p><strong>撤销操作的快捷键</strong><br>Ctrl + Alt + Z</p>\n</li>\n<li><p><strong>选中某个图层</strong><br>首先选择移动工具，将鼠标移动到某个图层上，按下Ctrl + 单击鼠标左键(前提是不要勾选自动选择图层)</p>\n</li>\n</ul>\n<ul>\n<li><strong>使用工具中的其他工具</strong><br>当工具栏中的工具右下角有一个小三角，表示工具中还有其他的工具，比如将鼠标移到工具下按住鼠标左键会弹出一个下拉菜单，下拉菜单中会展示工具下的其他工具</li>\n</ul>\n<ul>\n<li><strong>矩形选框工具的快捷键</strong><br>M键</li>\n</ul>\n<ul>\n<li><strong>矩形选框工具与椭圆选框工具之间互相切换的快捷键</strong><br>选中矩形选框工具后，按Shift + M，可以实现矩形选区工具和椭圆选区工具之间的互相切换</li>\n</ul>\n<ul>\n<li><strong>删除选区的快捷键</strong><br>Ctrl + D</li>\n</ul>\n<ul>\n<li><strong>移动工具的快捷键</strong><br>V键</li>\n</ul>\n<ul>\n<li><strong>打开或关闭标尺的快捷键</strong><br>Ctrl + R</li>\n</ul>\n<ul>\n<li><strong>打开视图菜单的快捷键</strong><br>先按一下Alt,再按一下V</li>\n</ul>\n<ul>\n<li><strong>打开新建参考线对话框的快捷方式</strong><br>先按一下Alt，再按一下V，最后按一下E</li>\n</ul>\n<ul>\n<li><strong>显示/隐藏参考线的快捷键</strong><br>Ctrl + ;</li>\n</ul>\n<ul>\n<li><strong>打开切片工具的快捷键</strong><br>C</li>\n</ul>\n<ul>\n<li><strong>放大/缩小图片</strong><br>按住 Ctrl 和 Alt 滚动鼠标的滚轮</li>\n</ul>\n<ul>\n<li><strong>切图方法</strong><br>选择需要切割的图片所在的图层——将鼠标移到选中的图层上并单击鼠标右键——在弹出的选项中选择转换为智能对象——选择矩形选框工具——使用矩形选框工具选择要切割的图片——复制要切割的图片——新建一个背景透明的图层(此时图层的尺寸会自动调整为选中的图片尺寸)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储</li>\n</ul>\n<ul>\n<li><strong>辅助线快速转换为切片的方法</strong><br>在需要切割的图片上创建四条参考线——选择工具栏中的切片工具——点击状态栏中的基于参考线的切片(此时由参考线围城的矩形都转换为了切片)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储——在弹出的将优化结果存储为对话框中最底下的切片选项中选择选中的切面(切面选项默认选择的是所有切片)——单击Save按钮</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Photoshop%E5%88%87%E5%9B%BE/\">http://meishadevs.com/blog/PhotoShop切图</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些使用Photoshop切图的方法与技巧。<br>","more":"</p>\n<ul>\n<li><strong>将单位改成像素</strong><br>Photoshop中默认的单位是厘米，而在切图时需要的单位是像素<br>方法：启动Photoshop——选择编辑——选择首选项——选择单位与标尺——在弹出的单位与标尺设置对话框中将标尺的单位和文字的单位都设置成像素——设置完成后单击确定按钮  </li>\n</ul>\n<ul>\n<li><p><strong>新建文件的快捷键</strong><br>Ctrl + N</p>\n</li>\n<li><p><strong>撤销操作的快捷键</strong><br>Ctrl + Alt + Z</p>\n</li>\n<li><p><strong>选中某个图层</strong><br>首先选择移动工具，将鼠标移动到某个图层上，按下Ctrl + 单击鼠标左键(前提是不要勾选自动选择图层)</p>\n</li>\n</ul>\n<ul>\n<li><strong>使用工具中的其他工具</strong><br>当工具栏中的工具右下角有一个小三角，表示工具中还有其他的工具，比如将鼠标移到工具下按住鼠标左键会弹出一个下拉菜单，下拉菜单中会展示工具下的其他工具</li>\n</ul>\n<ul>\n<li><strong>矩形选框工具的快捷键</strong><br>M键</li>\n</ul>\n<ul>\n<li><strong>矩形选框工具与椭圆选框工具之间互相切换的快捷键</strong><br>选中矩形选框工具后，按Shift + M，可以实现矩形选区工具和椭圆选区工具之间的互相切换</li>\n</ul>\n<ul>\n<li><strong>删除选区的快捷键</strong><br>Ctrl + D</li>\n</ul>\n<ul>\n<li><strong>移动工具的快捷键</strong><br>V键</li>\n</ul>\n<ul>\n<li><strong>打开或关闭标尺的快捷键</strong><br>Ctrl + R</li>\n</ul>\n<ul>\n<li><strong>打开视图菜单的快捷键</strong><br>先按一下Alt,再按一下V</li>\n</ul>\n<ul>\n<li><strong>打开新建参考线对话框的快捷方式</strong><br>先按一下Alt，再按一下V，最后按一下E</li>\n</ul>\n<ul>\n<li><strong>显示/隐藏参考线的快捷键</strong><br>Ctrl + ;</li>\n</ul>\n<ul>\n<li><strong>打开切片工具的快捷键</strong><br>C</li>\n</ul>\n<ul>\n<li><strong>放大/缩小图片</strong><br>按住 Ctrl 和 Alt 滚动鼠标的滚轮</li>\n</ul>\n<ul>\n<li><strong>切图方法</strong><br>选择需要切割的图片所在的图层——将鼠标移到选中的图层上并单击鼠标右键——在弹出的选项中选择转换为智能对象——选择矩形选框工具——使用矩形选框工具选择要切割的图片——复制要切割的图片——新建一个背景透明的图层(此时图层的尺寸会自动调整为选中的图片尺寸)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储</li>\n</ul>\n<ul>\n<li><strong>辅助线快速转换为切片的方法</strong><br>在需要切割的图片上创建四条参考线——选择工具栏中的切片工具——点击状态栏中的基于参考线的切片(此时由参考线围城的矩形都转换为了切片)——选择文件选项下的存储为Web所用格式(photoshop cc中文件选项下没有存储为Web所用格式这个选项，该选项在文件选项下的导出中)——将图片的格式设置为PNG-24——单击存储——在弹出的将优化结果存储为对话框中最底下的切片选项中选择选中的切面(切面选项默认选择的是所有切片)——单击Save按钮</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Photoshop%E5%88%87%E5%9B%BE/\">http://meishadevs.com/blog/PhotoShop切图</a>】</p>\n</blockquote>"},{"title":"《JavaScript高级程序设计》读书笔记","date":"2017-05-04T03:40:36.000Z","_content":"\n最近在做一个电商网站，做到后面坑越挖越大，感觉自己力不从心，所以决定先暂停电商网站项目，好好静下心来看书，在网上看到《JavaScript高级程序设计》是前端必读的书，所以决定先看这本书，以下记录的是阅读时做的笔记。\n<!--more-->\n\n##### kbit/s\n数据传送率的单位.意思是每秒钟多少千字节.比如20Kbit/s就是每秒钟20000个字节.一般上网、下载的速度用这个单位.adsl宽带上网下载速度大概为30-50Kbit/s.\n\n##### JavaScript的组成\n**JavaScript**由**ECMAScript(JavaScript的版本)**、**DOM(文档对象模型)**、**BOM(浏览器对象模型)**三部分组成\n\n##### 开启严格模式的方法\n在js脚本的最顶部添加下面一段代码\n\n\t\"use strict\"\n\n##### 创建全局变量的方法\n**方法1：**在函数外部定义一个变量，在函数内部使用变量\n\n\tvar message;\n\n\tfunction test() {\n\t\tmessage = \"hello world\";\n\t}\n\n\ttest();\n\talert(message);\n\n**方法2：**在函数内部定义变量，并且不写**var**操作符\n\n\tfunction test() {\n\t\tmessage = \"hello world\";\n\t}\n\n\ttest();\n\talert(message);\n\n##### 将十进制转换成二进制的方法\n除二取余，倒序排列。例如将十进制的18转换成二进制  \n**第一步：**计算除二取余  \n![这里写图片描述](http://img.blog.csdn.net/20170503113832828)  \n**第二步：**将余数倒序排列就可以得到18的二进制是10010\n\n##### 将十进制的负数转换成二进制\n负数的二进制是用负数的绝对值的补码表示，以计算-18的二进制为例介绍负数的二进制计算方法  \n**第一步：**计算-18的绝对值 |-18| = 18  \n**第二步：**计算18的二进制 0000 0000 0000 0000 0000 0000 0001 0010  \n**第三步：**计算二进制的反码 1111 1111 1111 1111 1111 1111 1110 1101  \n**第四步：**将反码加1 1111 1111 1111 1111 1111 1111 1110 1110  \n**所以-18的二进制值** 1111 1111 1111 1111 1111 1111 1110 1110，其中第31位表示的是符号位不参与计算，1表示是负数，0表示是正数，位的顺序是从右往左排列的从0开始，也就是所最右边的哪位是第0位，然后往左依次是1、2、3、......位以此类推，最后一位是第31位\n\n##### 计算按位非操作的简便方法\n操作数的负值减1，例如计算25的按位非操作的方法如下\n\n\tvar num1 = 25;\n\tvar num2 = -num1 - 1;\n\n##### 获得变量的基本数据类型\nJavaScript中使用**typeof**关键字获得变量的基本数据类型\n\t\n\t var s = \"Nicholas\";\n    var b = true;\n    var i = 22;\n    var u;\n    var n = null;\n    var o = new Object();\n\n    alert(typeof s);  //string\n    alert(typeof i);  //number\n    alert(typeof b);  //boolean\n    alert(typeof u);  //undefined\n    alert(typeof n);  //object\n    alert(typeof o);  //object\n\n##### 判断变量的引用的数据类型\nJavaScript中使用**instanceof**关键字判断变量的引用数据类型\n\t\n\t var person = new Object();\n    var colors = [];\n    var pattern = new RegExp();\n\n    alert(person instanceof Object);   //变量person是Object类型吗\n    alert(colors instanceof Array);    //变量colors是Array类型吗\n    alert(pattern instanceof RegExp);  //变量pattern是RegExp类型吗\n\n##### JavaScript的基本数据类型\nJavaScript一共有5种基本数据类型，分别是**Undefined**、**Null**、**Boolean**、**Number**和**String**。\n\n##### JavaScript中的引用类型\n常见的引用类型：**Object**、**Array**、**Function**\n\n##### 构造函数\n**构造函数的定义：**构造函数是一种特殊的方法，主要用在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中\n\n**构造函数的特点：**  \n\n- 构造函数的函数名和类名相同\n- 构造函数定义时没有返回值\n- 构造函数只能用于定义对象时初始化对象  \n\n##### 创建Object实例(对象)的两种方式\n**方式1：**使用new操作符后跟Object构造函数\n\t\n\tvar person = new Object();\n    person.name = \"Nicholas\";\n    person.age = 29;\n\n**方式2：**使用对象字面量表示法\n\t\n\t var person = {\n        name : \"Nicholas\",\n        age : 29\n    };\n\n##### 创建数组的方式\n**方式1：**使用Array的构造函数创建数组\n\n\t//创建一个空数组\n    var colors = new Array();\n\n    //创建一个保存20个数据的数组\n    var colors = new Array(20);\n\n    //创建一个保存了3个字符串的数组\n    var colors = new Array(\"red\", \"blue\", \"green\");\n\n**方式2：**使用Array的构造函数创建数组时也可以省略**new**操作符\n\n\t //创建一个空数组\n    var colors = Array();\n\n    //创建一个保存20个数据的数组\n    var colors = Array(20);\n\n    //创建一个包含3个字符串的数组\n    var colors = Array(\"red\", \"blue\", \"green\");\n\n**方式3：**使用数组的字面量创建数组\n\t\n\t //创建一个空数组\n    var colors = [];\n\n    //创建一个包含3个字符串的数组\n    var colors = [\"red\", \"blue\", \"green\"];\n\n##### 栈与队列\n**栈的访问规则：**先进后出  \n**队列的访问规则：**先进先出\n\n##### JavaScript中创建对象的方式\n**方式1：**使用Object创建对象\n\t\n\tvar person = new Object();\n    person.name = \"Nicholas\";\n    person.age = 29;\n    person.job = \"Software Engineer\";\n\n    person.showName = function () {\n        console.log(this.name);\n    }\n\n    person.showAge = function () {\n        console.log(this.age);\n    }\n\n    person.showJob = function () {\n        console.log(this.job);\n    }\n\n**方式2：**用对象字面量语法创建对象\n\t\n\tvar person = {\n        name: \"Nicholas\",\n        age: 29,\n        job: \"Software Engineer\",\n\n        showName: function () {\n            console.log(this.name);\n        },\n\n        showAge: function () {\n            console.log(this.age);\n        },\n\n        showJob: function () {\n            console.log(this.job);\n        }\n    };\n\n**方法3：**用函数封装特定接口创建对象\n\t\n\tfunction createPerson(name, age, job) {\n        var o = new Object();\n        o.name = name;\n        o.age = age;\n        o.job = job;\n\n        o.showName = function () {\n            console.log(this.name);\n        };\n\n        o.showAge = function () {\n            console.log(this.age);\n        };\n\n        o.showJob = function () {\n            console.log(this.job);\n        };\n\n        return o;\n    }\n\n    var person1 = createPerson(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = createPerson(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法4：**使用构造函数创建对象\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n\n        this.showName = function () {\n            console.log(this.name);\n        };\n\n        this.showAge = function () {\n            console.log(this.age);\n        };\n\n        this.showJob = function () {\n            console.log(this.job);\n        }\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法5：**使用构造函数创建对象改进版\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n\n        this.showName = new Function(\"console.log(this.name)\");\n        this.showAge = new Function(\"console.log(this.age)\");\n        this.showJob = new Function(\"console.log(this.job)\");\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法6：**将成员函数放在外面\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n        this.showName = showName;\n        this.showAge = showAge;\n        this.showJob = showJob;\n    }\n\n    function showName() {\n        console.log(this.name);\n    }\n\n    function showAge() {\n        console.log(this.age);\n    }\n\n    function showJob() {\n        console.log(this.job);\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方式7：**使用原型创建对象\n\t\n\t function Person() {\n    }\n\n    Person.prototype.name = \"Nicholas\";\n    Person.prototype.age = 29;\n    Person.prototype.job = \"Software Engineer\";\n\n    Person.prototype.showName = function () {\n        console.log(this.name);\n    }\n\n    Person.prototype.showAge = function () {\n        console.log(this.age);\n    }\n\n    Person.prototype.showJob = function () {\n        console.log(this.job);\n    }\n\n    var person1 = new Person();\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/](http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/)】","source":"_posts/《JavaScript高级程序设计》读书笔记.md","raw":"---\ntitle: 《JavaScript高级程序设计》读书笔记\ncategories:\n  - 读书笔记\ntags:\n  - 读书笔记\n  - JavaScript\ndate: 2017-05-04 11:40:36\n---\n\n最近在做一个电商网站，做到后面坑越挖越大，感觉自己力不从心，所以决定先暂停电商网站项目，好好静下心来看书，在网上看到《JavaScript高级程序设计》是前端必读的书，所以决定先看这本书，以下记录的是阅读时做的笔记。\n<!--more-->\n\n##### kbit/s\n数据传送率的单位.意思是每秒钟多少千字节.比如20Kbit/s就是每秒钟20000个字节.一般上网、下载的速度用这个单位.adsl宽带上网下载速度大概为30-50Kbit/s.\n\n##### JavaScript的组成\n**JavaScript**由**ECMAScript(JavaScript的版本)**、**DOM(文档对象模型)**、**BOM(浏览器对象模型)**三部分组成\n\n##### 开启严格模式的方法\n在js脚本的最顶部添加下面一段代码\n\n\t\"use strict\"\n\n##### 创建全局变量的方法\n**方法1：**在函数外部定义一个变量，在函数内部使用变量\n\n\tvar message;\n\n\tfunction test() {\n\t\tmessage = \"hello world\";\n\t}\n\n\ttest();\n\talert(message);\n\n**方法2：**在函数内部定义变量，并且不写**var**操作符\n\n\tfunction test() {\n\t\tmessage = \"hello world\";\n\t}\n\n\ttest();\n\talert(message);\n\n##### 将十进制转换成二进制的方法\n除二取余，倒序排列。例如将十进制的18转换成二进制  \n**第一步：**计算除二取余  \n![这里写图片描述](http://img.blog.csdn.net/20170503113832828)  \n**第二步：**将余数倒序排列就可以得到18的二进制是10010\n\n##### 将十进制的负数转换成二进制\n负数的二进制是用负数的绝对值的补码表示，以计算-18的二进制为例介绍负数的二进制计算方法  \n**第一步：**计算-18的绝对值 |-18| = 18  \n**第二步：**计算18的二进制 0000 0000 0000 0000 0000 0000 0001 0010  \n**第三步：**计算二进制的反码 1111 1111 1111 1111 1111 1111 1110 1101  \n**第四步：**将反码加1 1111 1111 1111 1111 1111 1111 1110 1110  \n**所以-18的二进制值** 1111 1111 1111 1111 1111 1111 1110 1110，其中第31位表示的是符号位不参与计算，1表示是负数，0表示是正数，位的顺序是从右往左排列的从0开始，也就是所最右边的哪位是第0位，然后往左依次是1、2、3、......位以此类推，最后一位是第31位\n\n##### 计算按位非操作的简便方法\n操作数的负值减1，例如计算25的按位非操作的方法如下\n\n\tvar num1 = 25;\n\tvar num2 = -num1 - 1;\n\n##### 获得变量的基本数据类型\nJavaScript中使用**typeof**关键字获得变量的基本数据类型\n\t\n\t var s = \"Nicholas\";\n    var b = true;\n    var i = 22;\n    var u;\n    var n = null;\n    var o = new Object();\n\n    alert(typeof s);  //string\n    alert(typeof i);  //number\n    alert(typeof b);  //boolean\n    alert(typeof u);  //undefined\n    alert(typeof n);  //object\n    alert(typeof o);  //object\n\n##### 判断变量的引用的数据类型\nJavaScript中使用**instanceof**关键字判断变量的引用数据类型\n\t\n\t var person = new Object();\n    var colors = [];\n    var pattern = new RegExp();\n\n    alert(person instanceof Object);   //变量person是Object类型吗\n    alert(colors instanceof Array);    //变量colors是Array类型吗\n    alert(pattern instanceof RegExp);  //变量pattern是RegExp类型吗\n\n##### JavaScript的基本数据类型\nJavaScript一共有5种基本数据类型，分别是**Undefined**、**Null**、**Boolean**、**Number**和**String**。\n\n##### JavaScript中的引用类型\n常见的引用类型：**Object**、**Array**、**Function**\n\n##### 构造函数\n**构造函数的定义：**构造函数是一种特殊的方法，主要用在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中\n\n**构造函数的特点：**  \n\n- 构造函数的函数名和类名相同\n- 构造函数定义时没有返回值\n- 构造函数只能用于定义对象时初始化对象  \n\n##### 创建Object实例(对象)的两种方式\n**方式1：**使用new操作符后跟Object构造函数\n\t\n\tvar person = new Object();\n    person.name = \"Nicholas\";\n    person.age = 29;\n\n**方式2：**使用对象字面量表示法\n\t\n\t var person = {\n        name : \"Nicholas\",\n        age : 29\n    };\n\n##### 创建数组的方式\n**方式1：**使用Array的构造函数创建数组\n\n\t//创建一个空数组\n    var colors = new Array();\n\n    //创建一个保存20个数据的数组\n    var colors = new Array(20);\n\n    //创建一个保存了3个字符串的数组\n    var colors = new Array(\"red\", \"blue\", \"green\");\n\n**方式2：**使用Array的构造函数创建数组时也可以省略**new**操作符\n\n\t //创建一个空数组\n    var colors = Array();\n\n    //创建一个保存20个数据的数组\n    var colors = Array(20);\n\n    //创建一个包含3个字符串的数组\n    var colors = Array(\"red\", \"blue\", \"green\");\n\n**方式3：**使用数组的字面量创建数组\n\t\n\t //创建一个空数组\n    var colors = [];\n\n    //创建一个包含3个字符串的数组\n    var colors = [\"red\", \"blue\", \"green\"];\n\n##### 栈与队列\n**栈的访问规则：**先进后出  \n**队列的访问规则：**先进先出\n\n##### JavaScript中创建对象的方式\n**方式1：**使用Object创建对象\n\t\n\tvar person = new Object();\n    person.name = \"Nicholas\";\n    person.age = 29;\n    person.job = \"Software Engineer\";\n\n    person.showName = function () {\n        console.log(this.name);\n    }\n\n    person.showAge = function () {\n        console.log(this.age);\n    }\n\n    person.showJob = function () {\n        console.log(this.job);\n    }\n\n**方式2：**用对象字面量语法创建对象\n\t\n\tvar person = {\n        name: \"Nicholas\",\n        age: 29,\n        job: \"Software Engineer\",\n\n        showName: function () {\n            console.log(this.name);\n        },\n\n        showAge: function () {\n            console.log(this.age);\n        },\n\n        showJob: function () {\n            console.log(this.job);\n        }\n    };\n\n**方法3：**用函数封装特定接口创建对象\n\t\n\tfunction createPerson(name, age, job) {\n        var o = new Object();\n        o.name = name;\n        o.age = age;\n        o.job = job;\n\n        o.showName = function () {\n            console.log(this.name);\n        };\n\n        o.showAge = function () {\n            console.log(this.age);\n        };\n\n        o.showJob = function () {\n            console.log(this.job);\n        };\n\n        return o;\n    }\n\n    var person1 = createPerson(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = createPerson(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法4：**使用构造函数创建对象\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n\n        this.showName = function () {\n            console.log(this.name);\n        };\n\n        this.showAge = function () {\n            console.log(this.age);\n        };\n\n        this.showJob = function () {\n            console.log(this.job);\n        }\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法5：**使用构造函数创建对象改进版\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n\n        this.showName = new Function(\"console.log(this.name)\");\n        this.showAge = new Function(\"console.log(this.age)\");\n        this.showJob = new Function(\"console.log(this.job)\");\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方法6：**将成员函数放在外面\n\t\n\tfunction Person(name, age, job) {\n        this.name = name;\n        this.age = age;\n        this.job = job;\n        this.showName = showName;\n        this.showAge = showAge;\n        this.showJob = showJob;\n    }\n\n    function showName() {\n        console.log(this.name);\n    }\n\n    function showAge() {\n        console.log(this.age);\n    }\n\n    function showJob() {\n        console.log(this.job);\n    }\n\n    var person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n    var person2 = new Person(\"Greg\", 27, \"Doctor\");\n    person2.showName();\n    person2.showAge();\n    person2.showJob();\n\n**方式7：**使用原型创建对象\n\t\n\t function Person() {\n    }\n\n    Person.prototype.name = \"Nicholas\";\n    Person.prototype.age = 29;\n    Person.prototype.job = \"Software Engineer\";\n\n    Person.prototype.showName = function () {\n        console.log(this.name);\n    }\n\n    Person.prototype.showAge = function () {\n        console.log(this.age);\n    }\n\n    Person.prototype.showJob = function () {\n        console.log(this.job);\n    }\n\n    var person1 = new Person();\n    person1.showName();\n    person1.showAge();\n    person1.showJob();\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/](http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/)】","slug":"《JavaScript高级程序设计》读书笔记","published":1,"updated":"2017-05-13T03:56:01.273Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpjc000238pxpcl6gswp","content":"<p>最近在做一个电商网站，做到后面坑越挖越大，感觉自己力不从心，所以决定先暂停电商网站项目，好好静下心来看书，在网上看到《JavaScript高级程序设计》是前端必读的书，所以决定先看这本书，以下记录的是阅读时做的笔记。<br><a id=\"more\"></a></p>\n<h5 id=\"kbit-s\"><a href=\"#kbit-s\" class=\"headerlink\" title=\"kbit/s\"></a>kbit/s</h5><p>数据传送率的单位.意思是每秒钟多少千字节.比如20Kbit/s就是每秒钟20000个字节.一般上网、下载的速度用这个单位.adsl宽带上网下载速度大概为30-50Kbit/s.</p>\n<h5 id=\"JavaScript的组成\"><a href=\"#JavaScript的组成\" class=\"headerlink\" title=\"JavaScript的组成\"></a>JavaScript的组成</h5><p><strong>JavaScript</strong>由<strong>ECMAScript(JavaScript的版本)</strong>、<strong>DOM(文档对象模型)</strong>、<strong>BOM(浏览器对象模型)</strong>三部分组成</p>\n<h5 id=\"开启严格模式的方法\"><a href=\"#开启严格模式的方法\" class=\"headerlink\" title=\"开启严格模式的方法\"></a>开启严格模式的方法</h5><p>在js脚本的最顶部添加下面一段代码</p>\n<pre><code>&quot;use strict&quot;\n</code></pre><h5 id=\"创建全局变量的方法\"><a href=\"#创建全局变量的方法\" class=\"headerlink\" title=\"创建全局变量的方法\"></a>创建全局变量的方法</h5><p><strong>方法1：</strong>在函数外部定义一个变量，在函数内部使用变量</p>\n<pre><code>var message;\n\nfunction test() {\n    message = &quot;hello world&quot;;\n}\n\ntest();\nalert(message);\n</code></pre><p><strong>方法2：</strong>在函数内部定义变量，并且不写<strong>var</strong>操作符</p>\n<pre><code>function test() {\n    message = &quot;hello world&quot;;\n}\n\ntest();\nalert(message);\n</code></pre><h5 id=\"将十进制转换成二进制的方法\"><a href=\"#将十进制转换成二进制的方法\" class=\"headerlink\" title=\"将十进制转换成二进制的方法\"></a>将十进制转换成二进制的方法</h5><p>除二取余，倒序排列。例如将十进制的18转换成二进制<br><strong>第一步：</strong>计算除二取余<br><img src=\"http://img.blog.csdn.net/20170503113832828\" alt=\"这里写图片描述\"><br><strong>第二步：</strong>将余数倒序排列就可以得到18的二进制是10010</p>\n<h5 id=\"将十进制的负数转换成二进制\"><a href=\"#将十进制的负数转换成二进制\" class=\"headerlink\" title=\"将十进制的负数转换成二进制\"></a>将十进制的负数转换成二进制</h5><p>负数的二进制是用负数的绝对值的补码表示，以计算-18的二进制为例介绍负数的二进制计算方法<br><strong>第一步：</strong>计算-18的绝对值 |-18| = 18<br><strong>第二步：</strong>计算18的二进制 0000 0000 0000 0000 0000 0000 0001 0010<br><strong>第三步：</strong>计算二进制的反码 1111 1111 1111 1111 1111 1111 1110 1101<br><strong>第四步：</strong>将反码加1 1111 1111 1111 1111 1111 1111 1110 1110<br><strong>所以-18的二进制值</strong> 1111 1111 1111 1111 1111 1111 1110 1110，其中第31位表示的是符号位不参与计算，1表示是负数，0表示是正数，位的顺序是从右往左排列的从0开始，也就是所最右边的哪位是第0位，然后往左依次是1、2、3、……位以此类推，最后一位是第31位</p>\n<h5 id=\"计算按位非操作的简便方法\"><a href=\"#计算按位非操作的简便方法\" class=\"headerlink\" title=\"计算按位非操作的简便方法\"></a>计算按位非操作的简便方法</h5><p>操作数的负值减1，例如计算25的按位非操作的方法如下</p>\n<pre><code>var num1 = 25;\nvar num2 = -num1 - 1;\n</code></pre><h5 id=\"获得变量的基本数据类型\"><a href=\"#获得变量的基本数据类型\" class=\"headerlink\" title=\"获得变量的基本数据类型\"></a>获得变量的基本数据类型</h5><p>JavaScript中使用<strong>typeof</strong>关键字获得变量的基本数据类型</p>\n<pre><code> var s = &quot;Nicholas&quot;;\nvar b = true;\nvar i = 22;\nvar u;\nvar n = null;\nvar o = new Object();\n\nalert(typeof s);  //string\nalert(typeof i);  //number\nalert(typeof b);  //boolean\nalert(typeof u);  //undefined\nalert(typeof n);  //object\nalert(typeof o);  //object\n</code></pre><h5 id=\"判断变量的引用的数据类型\"><a href=\"#判断变量的引用的数据类型\" class=\"headerlink\" title=\"判断变量的引用的数据类型\"></a>判断变量的引用的数据类型</h5><p>JavaScript中使用<strong>instanceof</strong>关键字判断变量的引用数据类型</p>\n<pre><code> var person = new Object();\nvar colors = [];\nvar pattern = new RegExp();\n\nalert(person instanceof Object);   //变量person是Object类型吗\nalert(colors instanceof Array);    //变量colors是Array类型吗\nalert(pattern instanceof RegExp);  //变量pattern是RegExp类型吗\n</code></pre><h5 id=\"JavaScript的基本数据类型\"><a href=\"#JavaScript的基本数据类型\" class=\"headerlink\" title=\"JavaScript的基本数据类型\"></a>JavaScript的基本数据类型</h5><p>JavaScript一共有5种基本数据类型，分别是<strong>Undefined</strong>、<strong>Null</strong>、<strong>Boolean</strong>、<strong>Number</strong>和<strong>String</strong>。</p>\n<h5 id=\"JavaScript中的引用类型\"><a href=\"#JavaScript中的引用类型\" class=\"headerlink\" title=\"JavaScript中的引用类型\"></a>JavaScript中的引用类型</h5><p>常见的引用类型：<strong>Object</strong>、<strong>Array</strong>、<strong>Function</strong></p>\n<h5 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h5><p><strong>构造函数的定义：</strong>构造函数是一种特殊的方法，主要用在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中</p>\n<p><strong>构造函数的特点：</strong>  </p>\n<ul>\n<li>构造函数的函数名和类名相同</li>\n<li>构造函数定义时没有返回值</li>\n<li>构造函数只能用于定义对象时初始化对象  </li>\n</ul>\n<h5 id=\"创建Object实例-对象-的两种方式\"><a href=\"#创建Object实例-对象-的两种方式\" class=\"headerlink\" title=\"创建Object实例(对象)的两种方式\"></a>创建Object实例(对象)的两种方式</h5><p><strong>方式1：</strong>使用new操作符后跟Object构造函数</p>\n<pre><code>var person = new Object();\nperson.name = &quot;Nicholas&quot;;\nperson.age = 29;\n</code></pre><p><strong>方式2：</strong>使用对象字面量表示法</p>\n<pre><code> var person = {\n    name : &quot;Nicholas&quot;,\n    age : 29\n};\n</code></pre><h5 id=\"创建数组的方式\"><a href=\"#创建数组的方式\" class=\"headerlink\" title=\"创建数组的方式\"></a>创建数组的方式</h5><p><strong>方式1：</strong>使用Array的构造函数创建数组</p>\n<pre><code>//创建一个空数组\nvar colors = new Array();\n\n//创建一个保存20个数据的数组\nvar colors = new Array(20);\n\n//创建一个保存了3个字符串的数组\nvar colors = new Array(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;);\n</code></pre><p><strong>方式2：</strong>使用Array的构造函数创建数组时也可以省略<strong>new</strong>操作符</p>\n<pre><code> //创建一个空数组\nvar colors = Array();\n\n//创建一个保存20个数据的数组\nvar colors = Array(20);\n\n//创建一个包含3个字符串的数组\nvar colors = Array(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;);\n</code></pre><p><strong>方式3：</strong>使用数组的字面量创建数组</p>\n<pre><code> //创建一个空数组\nvar colors = [];\n\n//创建一个包含3个字符串的数组\nvar colors = [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;];\n</code></pre><h5 id=\"栈与队列\"><a href=\"#栈与队列\" class=\"headerlink\" title=\"栈与队列\"></a>栈与队列</h5><p><strong>栈的访问规则：</strong>先进后出<br><strong>队列的访问规则：</strong>先进先出</p>\n<h5 id=\"JavaScript中创建对象的方式\"><a href=\"#JavaScript中创建对象的方式\" class=\"headerlink\" title=\"JavaScript中创建对象的方式\"></a>JavaScript中创建对象的方式</h5><p><strong>方式1：</strong>使用Object创建对象</p>\n<pre><code>var person = new Object();\nperson.name = &quot;Nicholas&quot;;\nperson.age = 29;\nperson.job = &quot;Software Engineer&quot;;\n\nperson.showName = function () {\n    console.log(this.name);\n}\n\nperson.showAge = function () {\n    console.log(this.age);\n}\n\nperson.showJob = function () {\n    console.log(this.job);\n}\n</code></pre><p><strong>方式2：</strong>用对象字面量语法创建对象</p>\n<pre><code>var person = {\n    name: &quot;Nicholas&quot;,\n    age: 29,\n    job: &quot;Software Engineer&quot;,\n\n    showName: function () {\n        console.log(this.name);\n    },\n\n    showAge: function () {\n        console.log(this.age);\n    },\n\n    showJob: function () {\n        console.log(this.job);\n    }\n};\n</code></pre><p><strong>方法3：</strong>用函数封装特定接口创建对象</p>\n<pre><code>function createPerson(name, age, job) {\n    var o = new Object();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n\n    o.showName = function () {\n        console.log(this.name);\n    };\n\n    o.showAge = function () {\n        console.log(this.age);\n    };\n\n    o.showJob = function () {\n        console.log(this.job);\n    };\n\n    return o;\n}\n\nvar person1 = createPerson(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = createPerson(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法4：</strong>使用构造函数创建对象</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n\n    this.showName = function () {\n        console.log(this.name);\n    };\n\n    this.showAge = function () {\n        console.log(this.age);\n    };\n\n    this.showJob = function () {\n        console.log(this.job);\n    }\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法5：</strong>使用构造函数创建对象改进版</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n\n    this.showName = new Function(&quot;console.log(this.name)&quot;);\n    this.showAge = new Function(&quot;console.log(this.age)&quot;);\n    this.showJob = new Function(&quot;console.log(this.job)&quot;);\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法6：</strong>将成员函数放在外面</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n    this.showName = showName;\n    this.showAge = showAge;\n    this.showJob = showJob;\n}\n\nfunction showName() {\n    console.log(this.name);\n}\n\nfunction showAge() {\n    console.log(this.age);\n}\n\nfunction showJob() {\n    console.log(this.job);\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方式7：</strong>使用原型创建对象</p>\n<pre><code> function Person() {\n}\n\nPerson.prototype.name = &quot;Nicholas&quot;;\nPerson.prototype.age = 29;\nPerson.prototype.job = &quot;Software Engineer&quot;;\n\nPerson.prototype.showName = function () {\n    console.log(this.name);\n}\n\nPerson.prototype.showAge = function () {\n    console.log(this.age);\n}\n\nPerson.prototype.showJob = function () {\n    console.log(this.job);\n}\n\nvar person1 = new Person();\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/\">http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>最近在做一个电商网站，做到后面坑越挖越大，感觉自己力不从心，所以决定先暂停电商网站项目，好好静下心来看书，在网上看到《JavaScript高级程序设计》是前端必读的书，所以决定先看这本书，以下记录的是阅读时做的笔记。<br>","more":"</p>\n<h5 id=\"kbit-s\"><a href=\"#kbit-s\" class=\"headerlink\" title=\"kbit/s\"></a>kbit/s</h5><p>数据传送率的单位.意思是每秒钟多少千字节.比如20Kbit/s就是每秒钟20000个字节.一般上网、下载的速度用这个单位.adsl宽带上网下载速度大概为30-50Kbit/s.</p>\n<h5 id=\"JavaScript的组成\"><a href=\"#JavaScript的组成\" class=\"headerlink\" title=\"JavaScript的组成\"></a>JavaScript的组成</h5><p><strong>JavaScript</strong>由<strong>ECMAScript(JavaScript的版本)</strong>、<strong>DOM(文档对象模型)</strong>、<strong>BOM(浏览器对象模型)</strong>三部分组成</p>\n<h5 id=\"开启严格模式的方法\"><a href=\"#开启严格模式的方法\" class=\"headerlink\" title=\"开启严格模式的方法\"></a>开启严格模式的方法</h5><p>在js脚本的最顶部添加下面一段代码</p>\n<pre><code>&quot;use strict&quot;\n</code></pre><h5 id=\"创建全局变量的方法\"><a href=\"#创建全局变量的方法\" class=\"headerlink\" title=\"创建全局变量的方法\"></a>创建全局变量的方法</h5><p><strong>方法1：</strong>在函数外部定义一个变量，在函数内部使用变量</p>\n<pre><code>var message;\n\nfunction test() {\n    message = &quot;hello world&quot;;\n}\n\ntest();\nalert(message);\n</code></pre><p><strong>方法2：</strong>在函数内部定义变量，并且不写<strong>var</strong>操作符</p>\n<pre><code>function test() {\n    message = &quot;hello world&quot;;\n}\n\ntest();\nalert(message);\n</code></pre><h5 id=\"将十进制转换成二进制的方法\"><a href=\"#将十进制转换成二进制的方法\" class=\"headerlink\" title=\"将十进制转换成二进制的方法\"></a>将十进制转换成二进制的方法</h5><p>除二取余，倒序排列。例如将十进制的18转换成二进制<br><strong>第一步：</strong>计算除二取余<br><img src=\"http://img.blog.csdn.net/20170503113832828\" alt=\"这里写图片描述\"><br><strong>第二步：</strong>将余数倒序排列就可以得到18的二进制是10010</p>\n<h5 id=\"将十进制的负数转换成二进制\"><a href=\"#将十进制的负数转换成二进制\" class=\"headerlink\" title=\"将十进制的负数转换成二进制\"></a>将十进制的负数转换成二进制</h5><p>负数的二进制是用负数的绝对值的补码表示，以计算-18的二进制为例介绍负数的二进制计算方法<br><strong>第一步：</strong>计算-18的绝对值 |-18| = 18<br><strong>第二步：</strong>计算18的二进制 0000 0000 0000 0000 0000 0000 0001 0010<br><strong>第三步：</strong>计算二进制的反码 1111 1111 1111 1111 1111 1111 1110 1101<br><strong>第四步：</strong>将反码加1 1111 1111 1111 1111 1111 1111 1110 1110<br><strong>所以-18的二进制值</strong> 1111 1111 1111 1111 1111 1111 1110 1110，其中第31位表示的是符号位不参与计算，1表示是负数，0表示是正数，位的顺序是从右往左排列的从0开始，也就是所最右边的哪位是第0位，然后往左依次是1、2、3、……位以此类推，最后一位是第31位</p>\n<h5 id=\"计算按位非操作的简便方法\"><a href=\"#计算按位非操作的简便方法\" class=\"headerlink\" title=\"计算按位非操作的简便方法\"></a>计算按位非操作的简便方法</h5><p>操作数的负值减1，例如计算25的按位非操作的方法如下</p>\n<pre><code>var num1 = 25;\nvar num2 = -num1 - 1;\n</code></pre><h5 id=\"获得变量的基本数据类型\"><a href=\"#获得变量的基本数据类型\" class=\"headerlink\" title=\"获得变量的基本数据类型\"></a>获得变量的基本数据类型</h5><p>JavaScript中使用<strong>typeof</strong>关键字获得变量的基本数据类型</p>\n<pre><code> var s = &quot;Nicholas&quot;;\nvar b = true;\nvar i = 22;\nvar u;\nvar n = null;\nvar o = new Object();\n\nalert(typeof s);  //string\nalert(typeof i);  //number\nalert(typeof b);  //boolean\nalert(typeof u);  //undefined\nalert(typeof n);  //object\nalert(typeof o);  //object\n</code></pre><h5 id=\"判断变量的引用的数据类型\"><a href=\"#判断变量的引用的数据类型\" class=\"headerlink\" title=\"判断变量的引用的数据类型\"></a>判断变量的引用的数据类型</h5><p>JavaScript中使用<strong>instanceof</strong>关键字判断变量的引用数据类型</p>\n<pre><code> var person = new Object();\nvar colors = [];\nvar pattern = new RegExp();\n\nalert(person instanceof Object);   //变量person是Object类型吗\nalert(colors instanceof Array);    //变量colors是Array类型吗\nalert(pattern instanceof RegExp);  //变量pattern是RegExp类型吗\n</code></pre><h5 id=\"JavaScript的基本数据类型\"><a href=\"#JavaScript的基本数据类型\" class=\"headerlink\" title=\"JavaScript的基本数据类型\"></a>JavaScript的基本数据类型</h5><p>JavaScript一共有5种基本数据类型，分别是<strong>Undefined</strong>、<strong>Null</strong>、<strong>Boolean</strong>、<strong>Number</strong>和<strong>String</strong>。</p>\n<h5 id=\"JavaScript中的引用类型\"><a href=\"#JavaScript中的引用类型\" class=\"headerlink\" title=\"JavaScript中的引用类型\"></a>JavaScript中的引用类型</h5><p>常见的引用类型：<strong>Object</strong>、<strong>Array</strong>、<strong>Function</strong></p>\n<h5 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h5><p><strong>构造函数的定义：</strong>构造函数是一种特殊的方法，主要用在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中</p>\n<p><strong>构造函数的特点：</strong>  </p>\n<ul>\n<li>构造函数的函数名和类名相同</li>\n<li>构造函数定义时没有返回值</li>\n<li>构造函数只能用于定义对象时初始化对象  </li>\n</ul>\n<h5 id=\"创建Object实例-对象-的两种方式\"><a href=\"#创建Object实例-对象-的两种方式\" class=\"headerlink\" title=\"创建Object实例(对象)的两种方式\"></a>创建Object实例(对象)的两种方式</h5><p><strong>方式1：</strong>使用new操作符后跟Object构造函数</p>\n<pre><code>var person = new Object();\nperson.name = &quot;Nicholas&quot;;\nperson.age = 29;\n</code></pre><p><strong>方式2：</strong>使用对象字面量表示法</p>\n<pre><code> var person = {\n    name : &quot;Nicholas&quot;,\n    age : 29\n};\n</code></pre><h5 id=\"创建数组的方式\"><a href=\"#创建数组的方式\" class=\"headerlink\" title=\"创建数组的方式\"></a>创建数组的方式</h5><p><strong>方式1：</strong>使用Array的构造函数创建数组</p>\n<pre><code>//创建一个空数组\nvar colors = new Array();\n\n//创建一个保存20个数据的数组\nvar colors = new Array(20);\n\n//创建一个保存了3个字符串的数组\nvar colors = new Array(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;);\n</code></pre><p><strong>方式2：</strong>使用Array的构造函数创建数组时也可以省略<strong>new</strong>操作符</p>\n<pre><code> //创建一个空数组\nvar colors = Array();\n\n//创建一个保存20个数据的数组\nvar colors = Array(20);\n\n//创建一个包含3个字符串的数组\nvar colors = Array(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;);\n</code></pre><p><strong>方式3：</strong>使用数组的字面量创建数组</p>\n<pre><code> //创建一个空数组\nvar colors = [];\n\n//创建一个包含3个字符串的数组\nvar colors = [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;];\n</code></pre><h5 id=\"栈与队列\"><a href=\"#栈与队列\" class=\"headerlink\" title=\"栈与队列\"></a>栈与队列</h5><p><strong>栈的访问规则：</strong>先进后出<br><strong>队列的访问规则：</strong>先进先出</p>\n<h5 id=\"JavaScript中创建对象的方式\"><a href=\"#JavaScript中创建对象的方式\" class=\"headerlink\" title=\"JavaScript中创建对象的方式\"></a>JavaScript中创建对象的方式</h5><p><strong>方式1：</strong>使用Object创建对象</p>\n<pre><code>var person = new Object();\nperson.name = &quot;Nicholas&quot;;\nperson.age = 29;\nperson.job = &quot;Software Engineer&quot;;\n\nperson.showName = function () {\n    console.log(this.name);\n}\n\nperson.showAge = function () {\n    console.log(this.age);\n}\n\nperson.showJob = function () {\n    console.log(this.job);\n}\n</code></pre><p><strong>方式2：</strong>用对象字面量语法创建对象</p>\n<pre><code>var person = {\n    name: &quot;Nicholas&quot;,\n    age: 29,\n    job: &quot;Software Engineer&quot;,\n\n    showName: function () {\n        console.log(this.name);\n    },\n\n    showAge: function () {\n        console.log(this.age);\n    },\n\n    showJob: function () {\n        console.log(this.job);\n    }\n};\n</code></pre><p><strong>方法3：</strong>用函数封装特定接口创建对象</p>\n<pre><code>function createPerson(name, age, job) {\n    var o = new Object();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n\n    o.showName = function () {\n        console.log(this.name);\n    };\n\n    o.showAge = function () {\n        console.log(this.age);\n    };\n\n    o.showJob = function () {\n        console.log(this.job);\n    };\n\n    return o;\n}\n\nvar person1 = createPerson(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = createPerson(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法4：</strong>使用构造函数创建对象</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n\n    this.showName = function () {\n        console.log(this.name);\n    };\n\n    this.showAge = function () {\n        console.log(this.age);\n    };\n\n    this.showJob = function () {\n        console.log(this.job);\n    }\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法5：</strong>使用构造函数创建对象改进版</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n\n    this.showName = new Function(&quot;console.log(this.name)&quot;);\n    this.showAge = new Function(&quot;console.log(this.age)&quot;);\n    this.showJob = new Function(&quot;console.log(this.job)&quot;);\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方法6：</strong>将成员函数放在外面</p>\n<pre><code>function Person(name, age, job) {\n    this.name = name;\n    this.age = age;\n    this.job = job;\n    this.showName = showName;\n    this.showAge = showAge;\n    this.showJob = showJob;\n}\n\nfunction showName() {\n    console.log(this.name);\n}\n\nfunction showAge() {\n    console.log(this.age);\n}\n\nfunction showJob() {\n    console.log(this.job);\n}\n\nvar person1 = new Person(&quot;Nicholas&quot;, 29, &quot;Software Engineer&quot;);\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n\nvar person2 = new Person(&quot;Greg&quot;, 27, &quot;Doctor&quot;);\nperson2.showName();\nperson2.showAge();\nperson2.showJob();\n</code></pre><p><strong>方式7：</strong>使用原型创建对象</p>\n<pre><code> function Person() {\n}\n\nPerson.prototype.name = &quot;Nicholas&quot;;\nPerson.prototype.age = 29;\nPerson.prototype.job = &quot;Software Engineer&quot;;\n\nPerson.prototype.showName = function () {\n    console.log(this.name);\n}\n\nPerson.prototype.showAge = function () {\n    console.log(this.age);\n}\n\nPerson.prototype.showJob = function () {\n    console.log(this.job);\n}\n\nvar person1 = new Person();\nperson1.showName();\nperson1.showAge();\nperson1.showJob();\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/\">http://meishadevs.com/blog/《JavaScript高级程序设计》读书笔记/</a>】</p>\n</blockquote>"},{"title":"Fireworks切图","date":"2017-02-28T16:00:00.000Z","_content":"\n自己平时总结的一些使用Fireworks切图的方法与技巧。\n<!--more-->\n\n- 在互联网中约定每英寸为72像素\n\n\n- **放大或者缩小图片**  \n按住Ctrl键 + 滚动鼠标上的滚轮  \n\n\n- **快速转到移动工具**  \n按住空格键不松开，会自动变成移动工具  \n\n\n- **删除切片的快捷键**  \nDelete键\n\n\n- **缩放的快捷键**  \nCtrl + 加号、Ctrl + 减号、Ctrl + 1 - 6  \n\n\n- **导出切割的图片**  \n选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和图片保存的位置单击保存按钮后可以将图片保存在本地\n\n\n- **取消选区的快捷键**  \nCtrl + D\n\n\n- **撤销操作的快捷键**  \nCtrl + Z\n\n\n- **删除PSD的背景层**  \n使用指针工具(黑色小箭头)选中需要删除的背景层，并且使用快捷键Ctrl + X，或者Delete键可以删除背景层\n\n\n- **调节矩形选框工具的大小等属性的快捷键**  \nCtrl + T\n\n\n- **使用引导线测量距离**  \n选择菜单栏上的视图菜单——在视图菜单项中选择标尺，此时工作区的上边和左边都会显示一个标尺——将鼠标移动到标尺上，按住鼠标左键并往下拉，此时可以拉出一条引导线——重复一次上一个步骤，此时界面上有两条平行的参考线——将鼠标移动到两条参考线中间，按住Shift键，此时会显示两条参考线之间的距离\n\n\n- **裁剪图片**  \n选择工具栏上的裁剪工具——将裁剪工具移动到需要裁剪的图片上——调整裁剪工具在图片上的位置和大小——按下键盘上的Enter键，此时会裁掉裁剪工具覆盖之外的图片区域\n\n\n- **使用选取框工具删除图片的局部区域**  \n选择工具栏上的选取框工具——将选取框工具移动到需要处理的图片上——调整选取框工具在图片上的位置和大小——按下键盘上的Delete键，此时会删除选取框工具覆盖之内的图片区域\n\n\n- **移动切片**  \n在图层上添加了一个切片后，按住Ctrl键，将鼠标移到切片上，按住鼠标左键，拖动鼠标可以移动切片\n\n\n- **显示优化面板**  \n当界面上没有优化面板时候，可以点击点击菜单栏上的窗口菜单，在弹出的下拉列表中勾选优化，就会弹出优化面板\n\n\n- **设置图片的格式**  \n在优化面板中设置图片的导出格式\n\n\n- **PSD图片的切图步骤**  \n选中需要切下来的图片——单击鼠标右键——选择插入矩形切片——在优化面板中设置图片的格式和背景颜色——选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和存储路径——单击保存可以将图片存储在本地\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/Fireworks切图](http://meishadevs.com/blog/Fireworks%E5%88%87%E5%9B%BE/)】","source":"_posts/Fireworks切图.md","raw":"---\ntitle: Fireworks切图\ndate: 2017-03-01 \ncategories:\n\t- 切图\ntags:\n    - 切图\n    - Fireworks\n---\n\n自己平时总结的一些使用Fireworks切图的方法与技巧。\n<!--more-->\n\n- 在互联网中约定每英寸为72像素\n\n\n- **放大或者缩小图片**  \n按住Ctrl键 + 滚动鼠标上的滚轮  \n\n\n- **快速转到移动工具**  \n按住空格键不松开，会自动变成移动工具  \n\n\n- **删除切片的快捷键**  \nDelete键\n\n\n- **缩放的快捷键**  \nCtrl + 加号、Ctrl + 减号、Ctrl + 1 - 6  \n\n\n- **导出切割的图片**  \n选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和图片保存的位置单击保存按钮后可以将图片保存在本地\n\n\n- **取消选区的快捷键**  \nCtrl + D\n\n\n- **撤销操作的快捷键**  \nCtrl + Z\n\n\n- **删除PSD的背景层**  \n使用指针工具(黑色小箭头)选中需要删除的背景层，并且使用快捷键Ctrl + X，或者Delete键可以删除背景层\n\n\n- **调节矩形选框工具的大小等属性的快捷键**  \nCtrl + T\n\n\n- **使用引导线测量距离**  \n选择菜单栏上的视图菜单——在视图菜单项中选择标尺，此时工作区的上边和左边都会显示一个标尺——将鼠标移动到标尺上，按住鼠标左键并往下拉，此时可以拉出一条引导线——重复一次上一个步骤，此时界面上有两条平行的参考线——将鼠标移动到两条参考线中间，按住Shift键，此时会显示两条参考线之间的距离\n\n\n- **裁剪图片**  \n选择工具栏上的裁剪工具——将裁剪工具移动到需要裁剪的图片上——调整裁剪工具在图片上的位置和大小——按下键盘上的Enter键，此时会裁掉裁剪工具覆盖之外的图片区域\n\n\n- **使用选取框工具删除图片的局部区域**  \n选择工具栏上的选取框工具——将选取框工具移动到需要处理的图片上——调整选取框工具在图片上的位置和大小——按下键盘上的Delete键，此时会删除选取框工具覆盖之内的图片区域\n\n\n- **移动切片**  \n在图层上添加了一个切片后，按住Ctrl键，将鼠标移到切片上，按住鼠标左键，拖动鼠标可以移动切片\n\n\n- **显示优化面板**  \n当界面上没有优化面板时候，可以点击点击菜单栏上的窗口菜单，在弹出的下拉列表中勾选优化，就会弹出优化面板\n\n\n- **设置图片的格式**  \n在优化面板中设置图片的导出格式\n\n\n- **PSD图片的切图步骤**  \n选中需要切下来的图片——单击鼠标右键——选择插入矩形切片——在优化面板中设置图片的格式和背景颜色——选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和存储路径——单击保存可以将图片存储在本地\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/Fireworks切图](http://meishadevs.com/blog/Fireworks%E5%88%87%E5%9B%BE/)】","slug":"Fireworks切图","published":1,"updated":"2017-09-25T09:19:39.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpjs000638pxk5nacqam","content":"<p>自己平时总结的一些使用Fireworks切图的方法与技巧。<br><a id=\"more\"></a></p>\n<ul>\n<li>在互联网中约定每英寸为72像素</li>\n</ul>\n<ul>\n<li><strong>放大或者缩小图片</strong><br>按住Ctrl键 + 滚动鼠标上的滚轮  </li>\n</ul>\n<ul>\n<li><strong>快速转到移动工具</strong><br>按住空格键不松开，会自动变成移动工具  </li>\n</ul>\n<ul>\n<li><strong>删除切片的快捷键</strong><br>Delete键</li>\n</ul>\n<ul>\n<li><strong>缩放的快捷键</strong><br>Ctrl + 加号、Ctrl + 减号、Ctrl + 1 - 6  </li>\n</ul>\n<ul>\n<li><strong>导出切割的图片</strong><br>选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和图片保存的位置单击保存按钮后可以将图片保存在本地</li>\n</ul>\n<ul>\n<li><strong>取消选区的快捷键</strong><br>Ctrl + D</li>\n</ul>\n<ul>\n<li><strong>撤销操作的快捷键</strong><br>Ctrl + Z</li>\n</ul>\n<ul>\n<li><strong>删除PSD的背景层</strong><br>使用指针工具(黑色小箭头)选中需要删除的背景层，并且使用快捷键Ctrl + X，或者Delete键可以删除背景层</li>\n</ul>\n<ul>\n<li><strong>调节矩形选框工具的大小等属性的快捷键</strong><br>Ctrl + T</li>\n</ul>\n<ul>\n<li><strong>使用引导线测量距离</strong><br>选择菜单栏上的视图菜单——在视图菜单项中选择标尺，此时工作区的上边和左边都会显示一个标尺——将鼠标移动到标尺上，按住鼠标左键并往下拉，此时可以拉出一条引导线——重复一次上一个步骤，此时界面上有两条平行的参考线——将鼠标移动到两条参考线中间，按住Shift键，此时会显示两条参考线之间的距离</li>\n</ul>\n<ul>\n<li><strong>裁剪图片</strong><br>选择工具栏上的裁剪工具——将裁剪工具移动到需要裁剪的图片上——调整裁剪工具在图片上的位置和大小——按下键盘上的Enter键，此时会裁掉裁剪工具覆盖之外的图片区域</li>\n</ul>\n<ul>\n<li><strong>使用选取框工具删除图片的局部区域</strong><br>选择工具栏上的选取框工具——将选取框工具移动到需要处理的图片上——调整选取框工具在图片上的位置和大小——按下键盘上的Delete键，此时会删除选取框工具覆盖之内的图片区域</li>\n</ul>\n<ul>\n<li><strong>移动切片</strong><br>在图层上添加了一个切片后，按住Ctrl键，将鼠标移到切片上，按住鼠标左键，拖动鼠标可以移动切片</li>\n</ul>\n<ul>\n<li><strong>显示优化面板</strong><br>当界面上没有优化面板时候，可以点击点击菜单栏上的窗口菜单，在弹出的下拉列表中勾选优化，就会弹出优化面板</li>\n</ul>\n<ul>\n<li><strong>设置图片的格式</strong><br>在优化面板中设置图片的导出格式</li>\n</ul>\n<ul>\n<li><strong>PSD图片的切图步骤</strong><br>选中需要切下来的图片——单击鼠标右键——选择插入矩形切片——在优化面板中设置图片的格式和背景颜色——选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和存储路径——单击保存可以将图片存储在本地</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Fireworks%E5%88%87%E5%9B%BE/\">http://meishadevs.com/blog/Fireworks切图</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些使用Fireworks切图的方法与技巧。<br>","more":"</p>\n<ul>\n<li>在互联网中约定每英寸为72像素</li>\n</ul>\n<ul>\n<li><strong>放大或者缩小图片</strong><br>按住Ctrl键 + 滚动鼠标上的滚轮  </li>\n</ul>\n<ul>\n<li><strong>快速转到移动工具</strong><br>按住空格键不松开，会自动变成移动工具  </li>\n</ul>\n<ul>\n<li><strong>删除切片的快捷键</strong><br>Delete键</li>\n</ul>\n<ul>\n<li><strong>缩放的快捷键</strong><br>Ctrl + 加号、Ctrl + 减号、Ctrl + 1 - 6  </li>\n</ul>\n<ul>\n<li><strong>导出切割的图片</strong><br>选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和图片保存的位置单击保存按钮后可以将图片保存在本地</li>\n</ul>\n<ul>\n<li><strong>取消选区的快捷键</strong><br>Ctrl + D</li>\n</ul>\n<ul>\n<li><strong>撤销操作的快捷键</strong><br>Ctrl + Z</li>\n</ul>\n<ul>\n<li><strong>删除PSD的背景层</strong><br>使用指针工具(黑色小箭头)选中需要删除的背景层，并且使用快捷键Ctrl + X，或者Delete键可以删除背景层</li>\n</ul>\n<ul>\n<li><strong>调节矩形选框工具的大小等属性的快捷键</strong><br>Ctrl + T</li>\n</ul>\n<ul>\n<li><strong>使用引导线测量距离</strong><br>选择菜单栏上的视图菜单——在视图菜单项中选择标尺，此时工作区的上边和左边都会显示一个标尺——将鼠标移动到标尺上，按住鼠标左键并往下拉，此时可以拉出一条引导线——重复一次上一个步骤，此时界面上有两条平行的参考线——将鼠标移动到两条参考线中间，按住Shift键，此时会显示两条参考线之间的距离</li>\n</ul>\n<ul>\n<li><strong>裁剪图片</strong><br>选择工具栏上的裁剪工具——将裁剪工具移动到需要裁剪的图片上——调整裁剪工具在图片上的位置和大小——按下键盘上的Enter键，此时会裁掉裁剪工具覆盖之外的图片区域</li>\n</ul>\n<ul>\n<li><strong>使用选取框工具删除图片的局部区域</strong><br>选择工具栏上的选取框工具——将选取框工具移动到需要处理的图片上——调整选取框工具在图片上的位置和大小——按下键盘上的Delete键，此时会删除选取框工具覆盖之内的图片区域</li>\n</ul>\n<ul>\n<li><strong>移动切片</strong><br>在图层上添加了一个切片后，按住Ctrl键，将鼠标移到切片上，按住鼠标左键，拖动鼠标可以移动切片</li>\n</ul>\n<ul>\n<li><strong>显示优化面板</strong><br>当界面上没有优化面板时候，可以点击点击菜单栏上的窗口菜单，在弹出的下拉列表中勾选优化，就会弹出优化面板</li>\n</ul>\n<ul>\n<li><strong>设置图片的格式</strong><br>在优化面板中设置图片的导出格式</li>\n</ul>\n<ul>\n<li><strong>PSD图片的切图步骤</strong><br>选中需要切下来的图片——单击鼠标右键——选择插入矩形切片——在优化面板中设置图片的格式和背景颜色——选中切片——单击鼠标右键——选择导出所选切片——设置图片的名称和存储路径——单击保存可以将图片存储在本地</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/Fireworks%E5%88%87%E5%9B%BE/\">http://meishadevs.com/blog/Fireworks切图</a>】</p>\n</blockquote>"},{"title":"一些常见的JavaScript兼容性写法","date":"2017-03-05T16:00:00.000Z","_content":"\n总结一些常见的JavaScript上的兼容性写法\n<!--more-->\n\n**1.获得事件**\n\n\tvar event = event || window.event;\n\n**2.阻止事件冒泡**\n\n\tvar event = event || window.event;  \n\t//阻止事件冒泡\n\tif(event && event.stopPropagation)\n\t{\n\t   event.stopPropagation();\n\t}\n\telse\n\t{\n\t   event.cancelBubble = true;\n\t}\n\n**3.获得点击的某个对象的id**\n\n\tvar targetId = event.target ? event.target.id : event.srcElement.id;\n\n**4.阻止事件的默认行为**\n\t\n\t//除IE浏览器以外的其他浏览器\n\tif(event.preventDefault)\n\t{\n\t   event.preventDefault();\n\t}\n\t//如果当前的浏览器是IE浏览器\n\telse\n\t{\n\t   event.returnValue = false;\n\t}\n\n**5.获得浏览器的宽度**\n\n\tdocument.documentElement.clientWidth || document.body.clientWidth;\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/一些常见的JavaScript兼容性写法](http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84JavaScript%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/)】","source":"_posts/一些常见的JavaScript兼容性写法.md","raw":"---\ntitle: 一些常见的JavaScript兼容性写法\ndate: 2017-03-06\ncategories:\n\t- JavaScript\n\t- 兼容\ntags:\n    - JavaScript\n    - 兼容\n---\n\n总结一些常见的JavaScript上的兼容性写法\n<!--more-->\n\n**1.获得事件**\n\n\tvar event = event || window.event;\n\n**2.阻止事件冒泡**\n\n\tvar event = event || window.event;  \n\t//阻止事件冒泡\n\tif(event && event.stopPropagation)\n\t{\n\t   event.stopPropagation();\n\t}\n\telse\n\t{\n\t   event.cancelBubble = true;\n\t}\n\n**3.获得点击的某个对象的id**\n\n\tvar targetId = event.target ? event.target.id : event.srcElement.id;\n\n**4.阻止事件的默认行为**\n\t\n\t//除IE浏览器以外的其他浏览器\n\tif(event.preventDefault)\n\t{\n\t   event.preventDefault();\n\t}\n\t//如果当前的浏览器是IE浏览器\n\telse\n\t{\n\t   event.returnValue = false;\n\t}\n\n**5.获得浏览器的宽度**\n\n\tdocument.documentElement.clientWidth || document.body.clientWidth;\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/一些常见的JavaScript兼容性写法](http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84JavaScript%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/)】","slug":"一些常见的JavaScript兼容性写法","published":1,"updated":"2017-04-29T02:10:30.145Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpjv000738pxd3a6qqyo","content":"<p>总结一些常见的JavaScript上的兼容性写法<br><a id=\"more\"></a></p>\n<p><strong>1.获得事件</strong></p>\n<pre><code>var event = event || window.event;\n</code></pre><p><strong>2.阻止事件冒泡</strong></p>\n<pre><code>var event = event || window.event;  \n//阻止事件冒泡\nif(event &amp;&amp; event.stopPropagation)\n{\n   event.stopPropagation();\n}\nelse\n{\n   event.cancelBubble = true;\n}\n</code></pre><p><strong>3.获得点击的某个对象的id</strong></p>\n<pre><code>var targetId = event.target ? event.target.id : event.srcElement.id;\n</code></pre><p><strong>4.阻止事件的默认行为</strong></p>\n<pre><code>//除IE浏览器以外的其他浏览器\nif(event.preventDefault)\n{\n   event.preventDefault();\n}\n//如果当前的浏览器是IE浏览器\nelse\n{\n   event.returnValue = false;\n}\n</code></pre><p><strong>5.获得浏览器的宽度</strong></p>\n<pre><code>document.documentElement.clientWidth || document.body.clientWidth;\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84JavaScript%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/\">http://meishadevs.com/blog/一些常见的JavaScript兼容性写法</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>总结一些常见的JavaScript上的兼容性写法<br>","more":"</p>\n<p><strong>1.获得事件</strong></p>\n<pre><code>var event = event || window.event;\n</code></pre><p><strong>2.阻止事件冒泡</strong></p>\n<pre><code>var event = event || window.event;  \n//阻止事件冒泡\nif(event &amp;&amp; event.stopPropagation)\n{\n   event.stopPropagation();\n}\nelse\n{\n   event.cancelBubble = true;\n}\n</code></pre><p><strong>3.获得点击的某个对象的id</strong></p>\n<pre><code>var targetId = event.target ? event.target.id : event.srcElement.id;\n</code></pre><p><strong>4.阻止事件的默认行为</strong></p>\n<pre><code>//除IE浏览器以外的其他浏览器\nif(event.preventDefault)\n{\n   event.preventDefault();\n}\n//如果当前的浏览器是IE浏览器\nelse\n{\n   event.returnValue = false;\n}\n</code></pre><p><strong>5.获得浏览器的宽度</strong></p>\n<pre><code>document.documentElement.clientWidth || document.body.clientWidth;\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84JavaScript%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/\">http://meishadevs.com/blog/一些常见的JavaScript兼容性写法</a>】</p>\n</blockquote>"},{"title":"使用Less","date":"2017-03-30T16:00:00.000Z","_content":"\n# 为什么要使用预处理CSS\n在使用CSS过程中会遇到一个非常头疼的问题，因为CSS中没有像java/C++或者PHP等程序语言一样有有自己的变量、常量、条件语句以及一些编程语法，只是一行行单纯的属性描述，写起来相当的费事，而且代码难以组织和维护，为了解决这个问题，引入了预处理CSS，预处理CSS可以像Java/C++或者PHP一样用变量，函数等语法描述CSS。\n<!--more-->\n\n# 什么是预处理CSS\nCSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处，预处理CSS编程语言有Les，Sass，styuls。\n\n# 为什么使用Less\nLess是一款比较流行的预处理CSS，支持变量、混合、函数、嵌套、循环等特点。\n\n# 学习Less的常用网站\n**Less官网 [http://lesscss.org/](http://lesscss.org/)**  \n**Less中文网 [http://lesscss.cn/](http://lesscss.cn/)**  \n**w3cplus [http://www.w3cplus.com/css/less](http://www.w3cplus.com/css/less)**  \n\n# 搭建Less开发环境\n### **需要用到的软件**  \n**[Node.js](http://nodejs.cn/)**\n\n### **安装Less**\n**1.特别说明**  \n安装Less之前需要先安装Node.js，安装Node.js的方法可以参考我之前的博客[使用NVM安装Node.js](http://meishaxiaozi.online/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Nodejs/)\n\n**2.执行安装Less的命令**  \n在命令行窗口中执行 `npm install -g less` 命令，可以安装Less，这个过程比较慢，需要翻墙  \n\n### **使用Less**\n**创建Less文件**  \n在一个文件夹下新建一个style.less文件，例如我在E:\\game\\HtmlProject\\less下创建了一个style.less文件\n![这里写图片描述](http://img.blog.csdn.net/20170326102025941)\n\n**向在文件中写入Less代码**\n向style.less文件中写入下面的Less代码\n\n\t//定义一个变量，用于存放一个颜色\n\t@mainColor: #e92322;\n\t\n\t/* 创建一个body标签的样式 */\n\tbody {\n\t\n\t  /*设置body的背景颜色*/\n\t  background-color: @mainColor;\n\t}\n\n**将Less文件编译成CSS文件**\n打开命令行，并且进入到style.less所在的目录下执行`lessc style.less`命令将Less文件编译成CSS文件，生成的CSS文件会显示在命令行中\n![这里写图片描述](http://img.blog.csdn.net/20170326103159306)\n\n**将编译生成的CSS文件保存在本地**\n在命令行中执行`lessc style.less > style.css`命令后，会先在style.less文件的同级目录下创建一个style.css文件，并且将编译生成的CSS代码保存在style.css文件中\n![这里写图片描述](http://img.blog.csdn.net/20170326103704105)\n\n**查看style.css中的代码**\n打开style.css文件后，可以看到style.css中的CSS代码和在命令行中的代码一样\n![这里写图片描述](http://img.blog.csdn.net/20170326104523338)\n\n**压缩CSS**\n在开发中，为了减少网络请求资源的大小，通常需要压缩CSS文件，Less中提供了一个压缩CSS的插件，先执行`npm install -g less-plugin-clean-css`命令安装插件，然后执行`lessc style.less --clean-css=\"--s1 --advanced --compatibility=ie8\" > style.min.css`命令，执行该命令后首先会将Less代码编译成CSS代码，然后会压缩CSS代码，最后会创建一个style.min.css文件，并且将压缩后的CSS代码保存到style.min.css文件中\n\n**压缩后的CSS代码**\n压缩后的CSS代码中删掉了注释和空格，换行等无意义的数据 \n`body{background-color:#e92322}`\n\n\n# Less中的一些其他用法\n\n**Less中实现标签嵌套**\n下面的Less代码中container下面存在多重嵌套的标签\n\n\t//定义变量，记录container的宽度\n\t@width: 1000px;\n\t\n\t//定义变量，记录container的高度\n\t@height: 2000px;\n\t\n\t//创建变量，记录div的颜色\n\t@mainColor: #f0f9f0;\n\t\n\t/* 嵌套的用法 */ \n\t.container {\n\t  width: @width;\n\t  height: @height;\n\t  background-color: #ff0;\n\t\n\t  .row {\n\t    height: 200px;\n\t\n\t    div {\n\t      border-left: 1px solid @mainColor;\n\t\n\t       > a {\n\t        color: red;\n\t\n\t        &:hover {\n\t          color: green;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n编译生成的CSS代码如下\n![这里写图片描述](http://img.blog.csdn.net/20170326111954541)\n\n**Less中使用函数**\n在下面的代码中body，header，footer标签都要设置border-radius属性，为了减少代码量可以创建一个setRadius函数，让这三个标签都通过调用setRadius函数设置border-radius属性大大的减少了代码量，提高了开发效率\n\n\t/**\n\t * 为标签设置border-radius属性\n\t * @radius 标签的半径\n\t * @return 没有返回值\n\t */\n\t.setRadius(@radius: 5px) {\n\t  -moz-border-radius: @radius;\n\t  -webkit-border-radius: @radius;\n\t  border-radius: @radius;\n\t}\n\t\n\theader {\n\t\n\t\t//给header标签设置border-radius属性\n\t\t.setRadius;\n\t}\n\t\n\tfooter {\n\t\t//给footer标签设置border-radius属性\n\t\t.setRadius(10px);\n\t}\n\t\n\tbody {\n\t\t//给body标签设置border-radius属性\n\t\t.setRadius(15px);\n\t}\n\n执行结果\n![这里写图片描述](http://img.blog.csdn.net/20170326114125041)\n\n**合并less文件**\n在开发中使用less文件的合并功能是一个非常高效且很适合团队开发的方式，比如在一个团队中有三个成员，A成员负责开发页面的header部分，A成员可以建立一个header.less文件，B成员负责开发页面中的banner部分，B成员可以创建一个banner.less文件，C成员负责开发页面中的footer部分，C成员可以建议一个footer.less文件，开发完成后可以将header.less、banner.less、footer.less合并在一个CSS文件中\n假定header.less中代码如下\n\n\t#header {\n\t\tbackground-color: red;\n\t}\n\nbanner.less中的代码\n\n\t#banner {\n\t\tbackground-color: green;\n\t}\n\nfooter.less中的代码\n\n\t#footer {\n\t\tbackground-color: blue;\n\t}\n\n将这三个less文件中的代码合并到style.less中\n\n\t//引入header.less文件\n\t@import url('header.less');\n\t\n\t//引入banner.less文件\n\t@import url('banner.less');\n\t\n\t//引入footer.less文件\n\t@import url('footer.less');\n\n编译index.less文件，编译结果如下，可以看到三个less文件中的代码都编译成了CSS文件，并且放在一起\n![这里写图片描述](http://img.blog.csdn.net/20170326120411756)\n\n# 在网页中直接使用Less\n\n## 为什么要在网页中直接使用Less\n如果按照上面介绍的方法使用Less，需要每次使用Less写完一点样式后就将Less编译成CSS文件，再在html中引入CSS，总是重复这个操作大大降低了开发效率，为了解决这个问题，可以通过一点简单的配置，可以实现在网页中直接运行\n## 配置在网页中直接运行Less的环境\n**下载less.js-2.5.1文件**\n通过[https://pan.baidu.com/s/1pLM3j6r](https://pan.baidu.com/s/1pLM3j6r)下载less.js-2.5.1.zip文件\n![这里写图片描述](http://img.blog.csdn.net/20170327105805389)\n\n**创建项目**\n创建一个项目。并且将less.js-2.5.1.zip解压到项目目录下\n\n**创建Less文件**\n在项目目录下创建一个main.less文件，并在向main.less中添加如下代码\n\n\t//创建变量，用于设置body的宽度\n\t@width: 1024px;\n\t\n\t//创建变量，用于设置body的高度\n\t@height: 1000px;\n\t\n\t//创建变量，用于设置body的背景颜色\n\t@backgroundColor: #f5f5f5;\n\t\n\tbody {\n\t  width: @width;\n\t  height: @height;\n\t  margin: 0;\n\t  padding: 50px;\n\t  background-color: @backgroundColor;\n\t}\n\n**创建HTML文件**\n在项目目录下创建一个index.html文件，并且向index.html中添加如下代码\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t\n\t<head>\n\t  <meta charset=\"UTF-8\">\n\t  <title>测试网页中直接使用less文件的效果</title>\n\t  <link rel=\"stylesheet/less\" href=\"main.less\">\n\t</head>\n\t\n\t<body>\n\t\n\t  <script src=\"less.js-2.5.1\\dist\\less.min.js\"></script>\n\t</body>\n\t\n\t</html>\n\n**运行项目**\n使用HTTP请求的方式在浏览器中运行index.html文件，WebStrom中点击运行按钮后会自动以HTTP请求的方式在浏览器中运行index.html文件，此时查看console控制台，当console控制台中展示下面的信息，表示项目运行成功\n![这里写图片描述](http://img.blog.csdn.net/20170327110802691)\n\n**查看元素信息**\n在Elements模块下可以看到为body元素设置了CSS样式，表示Less文件在网页中运行成功\n![这里写图片描述](http://img.blog.csdn.net/20170327111130924)\n\n## 特别说明\n这种方法只能用于开发测试中，开发完成后需要将Less编译成CSS\n\n## 使用Less做的一个小项目\n使用Less实现博雅互动首页 [https://github.com/meishadevs/boyaa](https://github.com/meishadevs/boyaa)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用Less](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/)】","source":"_posts/使用Less.md","raw":"---\ntitle: 使用Less\ndate: 2017-03-31\ncategories:\n\t- 预处理CSS\n\t- Less\ntags:\n\t- 预处理CSS\n\t- Less\n---\n\n# 为什么要使用预处理CSS\n在使用CSS过程中会遇到一个非常头疼的问题，因为CSS中没有像java/C++或者PHP等程序语言一样有有自己的变量、常量、条件语句以及一些编程语法，只是一行行单纯的属性描述，写起来相当的费事，而且代码难以组织和维护，为了解决这个问题，引入了预处理CSS，预处理CSS可以像Java/C++或者PHP一样用变量，函数等语法描述CSS。\n<!--more-->\n\n# 什么是预处理CSS\nCSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处，预处理CSS编程语言有Les，Sass，styuls。\n\n# 为什么使用Less\nLess是一款比较流行的预处理CSS，支持变量、混合、函数、嵌套、循环等特点。\n\n# 学习Less的常用网站\n**Less官网 [http://lesscss.org/](http://lesscss.org/)**  \n**Less中文网 [http://lesscss.cn/](http://lesscss.cn/)**  \n**w3cplus [http://www.w3cplus.com/css/less](http://www.w3cplus.com/css/less)**  \n\n# 搭建Less开发环境\n### **需要用到的软件**  \n**[Node.js](http://nodejs.cn/)**\n\n### **安装Less**\n**1.特别说明**  \n安装Less之前需要先安装Node.js，安装Node.js的方法可以参考我之前的博客[使用NVM安装Node.js](http://meishaxiaozi.online/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Nodejs/)\n\n**2.执行安装Less的命令**  \n在命令行窗口中执行 `npm install -g less` 命令，可以安装Less，这个过程比较慢，需要翻墙  \n\n### **使用Less**\n**创建Less文件**  \n在一个文件夹下新建一个style.less文件，例如我在E:\\game\\HtmlProject\\less下创建了一个style.less文件\n![这里写图片描述](http://img.blog.csdn.net/20170326102025941)\n\n**向在文件中写入Less代码**\n向style.less文件中写入下面的Less代码\n\n\t//定义一个变量，用于存放一个颜色\n\t@mainColor: #e92322;\n\t\n\t/* 创建一个body标签的样式 */\n\tbody {\n\t\n\t  /*设置body的背景颜色*/\n\t  background-color: @mainColor;\n\t}\n\n**将Less文件编译成CSS文件**\n打开命令行，并且进入到style.less所在的目录下执行`lessc style.less`命令将Less文件编译成CSS文件，生成的CSS文件会显示在命令行中\n![这里写图片描述](http://img.blog.csdn.net/20170326103159306)\n\n**将编译生成的CSS文件保存在本地**\n在命令行中执行`lessc style.less > style.css`命令后，会先在style.less文件的同级目录下创建一个style.css文件，并且将编译生成的CSS代码保存在style.css文件中\n![这里写图片描述](http://img.blog.csdn.net/20170326103704105)\n\n**查看style.css中的代码**\n打开style.css文件后，可以看到style.css中的CSS代码和在命令行中的代码一样\n![这里写图片描述](http://img.blog.csdn.net/20170326104523338)\n\n**压缩CSS**\n在开发中，为了减少网络请求资源的大小，通常需要压缩CSS文件，Less中提供了一个压缩CSS的插件，先执行`npm install -g less-plugin-clean-css`命令安装插件，然后执行`lessc style.less --clean-css=\"--s1 --advanced --compatibility=ie8\" > style.min.css`命令，执行该命令后首先会将Less代码编译成CSS代码，然后会压缩CSS代码，最后会创建一个style.min.css文件，并且将压缩后的CSS代码保存到style.min.css文件中\n\n**压缩后的CSS代码**\n压缩后的CSS代码中删掉了注释和空格，换行等无意义的数据 \n`body{background-color:#e92322}`\n\n\n# Less中的一些其他用法\n\n**Less中实现标签嵌套**\n下面的Less代码中container下面存在多重嵌套的标签\n\n\t//定义变量，记录container的宽度\n\t@width: 1000px;\n\t\n\t//定义变量，记录container的高度\n\t@height: 2000px;\n\t\n\t//创建变量，记录div的颜色\n\t@mainColor: #f0f9f0;\n\t\n\t/* 嵌套的用法 */ \n\t.container {\n\t  width: @width;\n\t  height: @height;\n\t  background-color: #ff0;\n\t\n\t  .row {\n\t    height: 200px;\n\t\n\t    div {\n\t      border-left: 1px solid @mainColor;\n\t\n\t       > a {\n\t        color: red;\n\t\n\t        &:hover {\n\t          color: green;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n编译生成的CSS代码如下\n![这里写图片描述](http://img.blog.csdn.net/20170326111954541)\n\n**Less中使用函数**\n在下面的代码中body，header，footer标签都要设置border-radius属性，为了减少代码量可以创建一个setRadius函数，让这三个标签都通过调用setRadius函数设置border-radius属性大大的减少了代码量，提高了开发效率\n\n\t/**\n\t * 为标签设置border-radius属性\n\t * @radius 标签的半径\n\t * @return 没有返回值\n\t */\n\t.setRadius(@radius: 5px) {\n\t  -moz-border-radius: @radius;\n\t  -webkit-border-radius: @radius;\n\t  border-radius: @radius;\n\t}\n\t\n\theader {\n\t\n\t\t//给header标签设置border-radius属性\n\t\t.setRadius;\n\t}\n\t\n\tfooter {\n\t\t//给footer标签设置border-radius属性\n\t\t.setRadius(10px);\n\t}\n\t\n\tbody {\n\t\t//给body标签设置border-radius属性\n\t\t.setRadius(15px);\n\t}\n\n执行结果\n![这里写图片描述](http://img.blog.csdn.net/20170326114125041)\n\n**合并less文件**\n在开发中使用less文件的合并功能是一个非常高效且很适合团队开发的方式，比如在一个团队中有三个成员，A成员负责开发页面的header部分，A成员可以建立一个header.less文件，B成员负责开发页面中的banner部分，B成员可以创建一个banner.less文件，C成员负责开发页面中的footer部分，C成员可以建议一个footer.less文件，开发完成后可以将header.less、banner.less、footer.less合并在一个CSS文件中\n假定header.less中代码如下\n\n\t#header {\n\t\tbackground-color: red;\n\t}\n\nbanner.less中的代码\n\n\t#banner {\n\t\tbackground-color: green;\n\t}\n\nfooter.less中的代码\n\n\t#footer {\n\t\tbackground-color: blue;\n\t}\n\n将这三个less文件中的代码合并到style.less中\n\n\t//引入header.less文件\n\t@import url('header.less');\n\t\n\t//引入banner.less文件\n\t@import url('banner.less');\n\t\n\t//引入footer.less文件\n\t@import url('footer.less');\n\n编译index.less文件，编译结果如下，可以看到三个less文件中的代码都编译成了CSS文件，并且放在一起\n![这里写图片描述](http://img.blog.csdn.net/20170326120411756)\n\n# 在网页中直接使用Less\n\n## 为什么要在网页中直接使用Less\n如果按照上面介绍的方法使用Less，需要每次使用Less写完一点样式后就将Less编译成CSS文件，再在html中引入CSS，总是重复这个操作大大降低了开发效率，为了解决这个问题，可以通过一点简单的配置，可以实现在网页中直接运行\n## 配置在网页中直接运行Less的环境\n**下载less.js-2.5.1文件**\n通过[https://pan.baidu.com/s/1pLM3j6r](https://pan.baidu.com/s/1pLM3j6r)下载less.js-2.5.1.zip文件\n![这里写图片描述](http://img.blog.csdn.net/20170327105805389)\n\n**创建项目**\n创建一个项目。并且将less.js-2.5.1.zip解压到项目目录下\n\n**创建Less文件**\n在项目目录下创建一个main.less文件，并在向main.less中添加如下代码\n\n\t//创建变量，用于设置body的宽度\n\t@width: 1024px;\n\t\n\t//创建变量，用于设置body的高度\n\t@height: 1000px;\n\t\n\t//创建变量，用于设置body的背景颜色\n\t@backgroundColor: #f5f5f5;\n\t\n\tbody {\n\t  width: @width;\n\t  height: @height;\n\t  margin: 0;\n\t  padding: 50px;\n\t  background-color: @backgroundColor;\n\t}\n\n**创建HTML文件**\n在项目目录下创建一个index.html文件，并且向index.html中添加如下代码\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t\n\t<head>\n\t  <meta charset=\"UTF-8\">\n\t  <title>测试网页中直接使用less文件的效果</title>\n\t  <link rel=\"stylesheet/less\" href=\"main.less\">\n\t</head>\n\t\n\t<body>\n\t\n\t  <script src=\"less.js-2.5.1\\dist\\less.min.js\"></script>\n\t</body>\n\t\n\t</html>\n\n**运行项目**\n使用HTTP请求的方式在浏览器中运行index.html文件，WebStrom中点击运行按钮后会自动以HTTP请求的方式在浏览器中运行index.html文件，此时查看console控制台，当console控制台中展示下面的信息，表示项目运行成功\n![这里写图片描述](http://img.blog.csdn.net/20170327110802691)\n\n**查看元素信息**\n在Elements模块下可以看到为body元素设置了CSS样式，表示Less文件在网页中运行成功\n![这里写图片描述](http://img.blog.csdn.net/20170327111130924)\n\n## 特别说明\n这种方法只能用于开发测试中，开发完成后需要将Less编译成CSS\n\n## 使用Less做的一个小项目\n使用Less实现博雅互动首页 [https://github.com/meishadevs/boyaa](https://github.com/meishadevs/boyaa)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用Less](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/)】","slug":"使用Less","published":1,"updated":"2017-05-13T04:04:08.197Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpjy000838pxemzgypmp","content":"<h1 id=\"为什么要使用预处理CSS\"><a href=\"#为什么要使用预处理CSS\" class=\"headerlink\" title=\"为什么要使用预处理CSS\"></a>为什么要使用预处理CSS</h1><p>在使用CSS过程中会遇到一个非常头疼的问题，因为CSS中没有像java/C++或者PHP等程序语言一样有有自己的变量、常量、条件语句以及一些编程语法，只是一行行单纯的属性描述，写起来相当的费事，而且代码难以组织和维护，为了解决这个问题，引入了预处理CSS，预处理CSS可以像Java/C++或者PHP一样用变量，函数等语法描述CSS。<br><a id=\"more\"></a></p>\n<h1 id=\"什么是预处理CSS\"><a href=\"#什么是预处理CSS\" class=\"headerlink\" title=\"什么是预处理CSS\"></a>什么是预处理CSS</h1><p>CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处，预处理CSS编程语言有Les，Sass，styuls。</p>\n<h1 id=\"为什么使用Less\"><a href=\"#为什么使用Less\" class=\"headerlink\" title=\"为什么使用Less\"></a>为什么使用Less</h1><p>Less是一款比较流行的预处理CSS，支持变量、混合、函数、嵌套、循环等特点。</p>\n<h1 id=\"学习Less的常用网站\"><a href=\"#学习Less的常用网站\" class=\"headerlink\" title=\"学习Less的常用网站\"></a>学习Less的常用网站</h1><p><strong>Less官网 <a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"external\">http://lesscss.org/</a></strong><br><strong>Less中文网 <a href=\"http://lesscss.cn/\" target=\"_blank\" rel=\"external\">http://lesscss.cn/</a></strong><br><strong>w3cplus <a href=\"http://www.w3cplus.com/css/less\" target=\"_blank\" rel=\"external\">http://www.w3cplus.com/css/less</a></strong>  </p>\n<h1 id=\"搭建Less开发环境\"><a href=\"#搭建Less开发环境\" class=\"headerlink\" title=\"搭建Less开发环境\"></a>搭建Less开发环境</h1><h3 id=\"需要用到的软件\"><a href=\"#需要用到的软件\" class=\"headerlink\" title=\"需要用到的软件\"></a><strong>需要用到的软件</strong></h3><p><strong><a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"external\">Node.js</a></strong></p>\n<h3 id=\"安装Less\"><a href=\"#安装Less\" class=\"headerlink\" title=\"安装Less\"></a><strong>安装Less</strong></h3><p><strong>1.特别说明</strong><br>安装Less之前需要先安装Node.js，安装Node.js的方法可以参考我之前的博客<a href=\"http://meishaxiaozi.online/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Nodejs/\" target=\"_blank\" rel=\"external\">使用NVM安装Node.js</a></p>\n<p><strong>2.执行安装Less的命令</strong><br>在命令行窗口中执行 <code>npm install -g less</code> 命令，可以安装Less，这个过程比较慢，需要翻墙  </p>\n<h3 id=\"使用Less\"><a href=\"#使用Less\" class=\"headerlink\" title=\"使用Less\"></a><strong>使用Less</strong></h3><p><strong>创建Less文件</strong><br>在一个文件夹下新建一个style.less文件，例如我在E:\\game\\HtmlProject\\less下创建了一个style.less文件<br><img src=\"http://img.blog.csdn.net/20170326102025941\" alt=\"这里写图片描述\"></p>\n<p><strong>向在文件中写入Less代码</strong><br>向style.less文件中写入下面的Less代码</p>\n<pre><code>//定义一个变量，用于存放一个颜色\n@mainColor: #e92322;\n\n/* 创建一个body标签的样式 */\nbody {\n\n  /*设置body的背景颜色*/\n  background-color: @mainColor;\n}\n</code></pre><p><strong>将Less文件编译成CSS文件</strong><br>打开命令行，并且进入到style.less所在的目录下执行<code>lessc style.less</code>命令将Less文件编译成CSS文件，生成的CSS文件会显示在命令行中<br><img src=\"http://img.blog.csdn.net/20170326103159306\" alt=\"这里写图片描述\"></p>\n<p><strong>将编译生成的CSS文件保存在本地</strong><br>在命令行中执行<code>lessc style.less &gt; style.css</code>命令后，会先在style.less文件的同级目录下创建一个style.css文件，并且将编译生成的CSS代码保存在style.css文件中<br><img src=\"http://img.blog.csdn.net/20170326103704105\" alt=\"这里写图片描述\"></p>\n<p><strong>查看style.css中的代码</strong><br>打开style.css文件后，可以看到style.css中的CSS代码和在命令行中的代码一样<br><img src=\"http://img.blog.csdn.net/20170326104523338\" alt=\"这里写图片描述\"></p>\n<p><strong>压缩CSS</strong><br>在开发中，为了减少网络请求资源的大小，通常需要压缩CSS文件，Less中提供了一个压缩CSS的插件，先执行<code>npm install -g less-plugin-clean-css</code>命令安装插件，然后执行<code>lessc style.less --clean-css=&quot;--s1 --advanced --compatibility=ie8&quot; &gt; style.min.css</code>命令，执行该命令后首先会将Less代码编译成CSS代码，然后会压缩CSS代码，最后会创建一个style.min.css文件，并且将压缩后的CSS代码保存到style.min.css文件中</p>\n<p><strong>压缩后的CSS代码</strong><br>压缩后的CSS代码中删掉了注释和空格，换行等无意义的数据<br><code>body{background-color:#e92322}</code></p>\n<h1 id=\"Less中的一些其他用法\"><a href=\"#Less中的一些其他用法\" class=\"headerlink\" title=\"Less中的一些其他用法\"></a>Less中的一些其他用法</h1><p><strong>Less中实现标签嵌套</strong><br>下面的Less代码中container下面存在多重嵌套的标签</p>\n<pre><code>//定义变量，记录container的宽度\n@width: 1000px;\n\n//定义变量，记录container的高度\n@height: 2000px;\n\n//创建变量，记录div的颜色\n@mainColor: #f0f9f0;\n\n/* 嵌套的用法 */ \n.container {\n  width: @width;\n  height: @height;\n  background-color: #ff0;\n\n  .row {\n    height: 200px;\n\n    div {\n      border-left: 1px solid @mainColor;\n\n       &gt; a {\n        color: red;\n\n        &amp;:hover {\n          color: green;\n        }\n      }\n    }\n  }\n}\n</code></pre><p>编译生成的CSS代码如下<br><img src=\"http://img.blog.csdn.net/20170326111954541\" alt=\"这里写图片描述\"></p>\n<p><strong>Less中使用函数</strong><br>在下面的代码中body，header，footer标签都要设置border-radius属性，为了减少代码量可以创建一个setRadius函数，让这三个标签都通过调用setRadius函数设置border-radius属性大大的减少了代码量，提高了开发效率</p>\n<pre><code>/**\n * 为标签设置border-radius属性\n * @radius 标签的半径\n * @return 没有返回值\n */\n.setRadius(@radius: 5px) {\n  -moz-border-radius: @radius;\n  -webkit-border-radius: @radius;\n  border-radius: @radius;\n}\n\nheader {\n\n    //给header标签设置border-radius属性\n    .setRadius;\n}\n\nfooter {\n    //给footer标签设置border-radius属性\n    .setRadius(10px);\n}\n\nbody {\n    //给body标签设置border-radius属性\n    .setRadius(15px);\n}\n</code></pre><p>执行结果<br><img src=\"http://img.blog.csdn.net/20170326114125041\" alt=\"这里写图片描述\"></p>\n<p><strong>合并less文件</strong><br>在开发中使用less文件的合并功能是一个非常高效且很适合团队开发的方式，比如在一个团队中有三个成员，A成员负责开发页面的header部分，A成员可以建立一个header.less文件，B成员负责开发页面中的banner部分，B成员可以创建一个banner.less文件，C成员负责开发页面中的footer部分，C成员可以建议一个footer.less文件，开发完成后可以将header.less、banner.less、footer.less合并在一个CSS文件中<br>假定header.less中代码如下</p>\n<pre><code>#header {\n    background-color: red;\n}\n</code></pre><p>banner.less中的代码</p>\n<pre><code>#banner {\n    background-color: green;\n}\n</code></pre><p>footer.less中的代码</p>\n<pre><code>#footer {\n    background-color: blue;\n}\n</code></pre><p>将这三个less文件中的代码合并到style.less中</p>\n<pre><code>//引入header.less文件\n@import url(&apos;header.less&apos;);\n\n//引入banner.less文件\n@import url(&apos;banner.less&apos;);\n\n//引入footer.less文件\n@import url(&apos;footer.less&apos;);\n</code></pre><p>编译index.less文件，编译结果如下，可以看到三个less文件中的代码都编译成了CSS文件，并且放在一起<br><img src=\"http://img.blog.csdn.net/20170326120411756\" alt=\"这里写图片描述\"></p>\n<h1 id=\"在网页中直接使用Less\"><a href=\"#在网页中直接使用Less\" class=\"headerlink\" title=\"在网页中直接使用Less\"></a>在网页中直接使用Less</h1><h2 id=\"为什么要在网页中直接使用Less\"><a href=\"#为什么要在网页中直接使用Less\" class=\"headerlink\" title=\"为什么要在网页中直接使用Less\"></a>为什么要在网页中直接使用Less</h2><p>如果按照上面介绍的方法使用Less，需要每次使用Less写完一点样式后就将Less编译成CSS文件，再在html中引入CSS，总是重复这个操作大大降低了开发效率，为了解决这个问题，可以通过一点简单的配置，可以实现在网页中直接运行</p>\n<h2 id=\"配置在网页中直接运行Less的环境\"><a href=\"#配置在网页中直接运行Less的环境\" class=\"headerlink\" title=\"配置在网页中直接运行Less的环境\"></a>配置在网页中直接运行Less的环境</h2><p><strong>下载less.js-2.5.1文件</strong><br>通过<a href=\"https://pan.baidu.com/s/1pLM3j6r\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1pLM3j6r</a>下载less.js-2.5.1.zip文件<br><img src=\"http://img.blog.csdn.net/20170327105805389\" alt=\"这里写图片描述\"></p>\n<p><strong>创建项目</strong><br>创建一个项目。并且将less.js-2.5.1.zip解压到项目目录下</p>\n<p><strong>创建Less文件</strong><br>在项目目录下创建一个main.less文件，并在向main.less中添加如下代码</p>\n<pre><code>//创建变量，用于设置body的宽度\n@width: 1024px;\n\n//创建变量，用于设置body的高度\n@height: 1000px;\n\n//创建变量，用于设置body的背景颜色\n@backgroundColor: #f5f5f5;\n\nbody {\n  width: @width;\n  height: @height;\n  margin: 0;\n  padding: 50px;\n  background-color: @backgroundColor;\n}\n</code></pre><p><strong>创建HTML文件</strong><br>在项目目录下创建一个index.html文件，并且向index.html中添加如下代码</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;title&gt;测试网页中直接使用less文件的效果&lt;/title&gt;\n  &lt;link rel=&quot;stylesheet/less&quot; href=&quot;main.less&quot;&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;script src=&quot;less.js-2.5.1\\dist\\less.min.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre><p><strong>运行项目</strong><br>使用HTTP请求的方式在浏览器中运行index.html文件，WebStrom中点击运行按钮后会自动以HTTP请求的方式在浏览器中运行index.html文件，此时查看console控制台，当console控制台中展示下面的信息，表示项目运行成功<br><img src=\"http://img.blog.csdn.net/20170327110802691\" alt=\"这里写图片描述\"></p>\n<p><strong>查看元素信息</strong><br>在Elements模块下可以看到为body元素设置了CSS样式，表示Less文件在网页中运行成功<br><img src=\"http://img.blog.csdn.net/20170327111130924\" alt=\"这里写图片描述\"></p>\n<h2 id=\"特别说明\"><a href=\"#特别说明\" class=\"headerlink\" title=\"特别说明\"></a>特别说明</h2><p>这种方法只能用于开发测试中，开发完成后需要将Less编译成CSS</p>\n<h2 id=\"使用Less做的一个小项目\"><a href=\"#使用Less做的一个小项目\" class=\"headerlink\" title=\"使用Less做的一个小项目\"></a>使用Less做的一个小项目</h2><p>使用Less实现博雅互动首页 <a href=\"https://github.com/meishadevs/boyaa\" target=\"_blank\" rel=\"external\">https://github.com/meishadevs/boyaa</a></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/\">http://meishadevs.com/blog/使用Less</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<h1 id=\"为什么要使用预处理CSS\"><a href=\"#为什么要使用预处理CSS\" class=\"headerlink\" title=\"为什么要使用预处理CSS\"></a>为什么要使用预处理CSS</h1><p>在使用CSS过程中会遇到一个非常头疼的问题，因为CSS中没有像java/C++或者PHP等程序语言一样有有自己的变量、常量、条件语句以及一些编程语法，只是一行行单纯的属性描述，写起来相当的费事，而且代码难以组织和维护，为了解决这个问题，引入了预处理CSS，预处理CSS可以像Java/C++或者PHP一样用变量，函数等语法描述CSS。<br>","more":"</p>\n<h1 id=\"什么是预处理CSS\"><a href=\"#什么是预处理CSS\" class=\"headerlink\" title=\"什么是预处理CSS\"></a>什么是预处理CSS</h1><p>CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS预处理器为CSS增加一些编程的特性，无需考虑浏览器的兼容性问题，例如你可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处，预处理CSS编程语言有Les，Sass，styuls。</p>\n<h1 id=\"为什么使用Less\"><a href=\"#为什么使用Less\" class=\"headerlink\" title=\"为什么使用Less\"></a>为什么使用Less</h1><p>Less是一款比较流行的预处理CSS，支持变量、混合、函数、嵌套、循环等特点。</p>\n<h1 id=\"学习Less的常用网站\"><a href=\"#学习Less的常用网站\" class=\"headerlink\" title=\"学习Less的常用网站\"></a>学习Less的常用网站</h1><p><strong>Less官网 <a href=\"http://lesscss.org/\">http://lesscss.org/</a></strong><br><strong>Less中文网 <a href=\"http://lesscss.cn/\">http://lesscss.cn/</a></strong><br><strong>w3cplus <a href=\"http://www.w3cplus.com/css/less\">http://www.w3cplus.com/css/less</a></strong>  </p>\n<h1 id=\"搭建Less开发环境\"><a href=\"#搭建Less开发环境\" class=\"headerlink\" title=\"搭建Less开发环境\"></a>搭建Less开发环境</h1><h3 id=\"需要用到的软件\"><a href=\"#需要用到的软件\" class=\"headerlink\" title=\"需要用到的软件\"></a><strong>需要用到的软件</strong></h3><p><strong><a href=\"http://nodejs.cn/\">Node.js</a></strong></p>\n<h3 id=\"安装Less\"><a href=\"#安装Less\" class=\"headerlink\" title=\"安装Less\"></a><strong>安装Less</strong></h3><p><strong>1.特别说明</strong><br>安装Less之前需要先安装Node.js，安装Node.js的方法可以参考我之前的博客<a href=\"http://meishaxiaozi.online/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Nodejs/\">使用NVM安装Node.js</a></p>\n<p><strong>2.执行安装Less的命令</strong><br>在命令行窗口中执行 <code>npm install -g less</code> 命令，可以安装Less，这个过程比较慢，需要翻墙  </p>\n<h3 id=\"使用Less\"><a href=\"#使用Less\" class=\"headerlink\" title=\"使用Less\"></a><strong>使用Less</strong></h3><p><strong>创建Less文件</strong><br>在一个文件夹下新建一个style.less文件，例如我在E:\\game\\HtmlProject\\less下创建了一个style.less文件<br><img src=\"http://img.blog.csdn.net/20170326102025941\" alt=\"这里写图片描述\"></p>\n<p><strong>向在文件中写入Less代码</strong><br>向style.less文件中写入下面的Less代码</p>\n<pre><code>//定义一个变量，用于存放一个颜色\n@mainColor: #e92322;\n\n/* 创建一个body标签的样式 */\nbody {\n\n  /*设置body的背景颜色*/\n  background-color: @mainColor;\n}\n</code></pre><p><strong>将Less文件编译成CSS文件</strong><br>打开命令行，并且进入到style.less所在的目录下执行<code>lessc style.less</code>命令将Less文件编译成CSS文件，生成的CSS文件会显示在命令行中<br><img src=\"http://img.blog.csdn.net/20170326103159306\" alt=\"这里写图片描述\"></p>\n<p><strong>将编译生成的CSS文件保存在本地</strong><br>在命令行中执行<code>lessc style.less &gt; style.css</code>命令后，会先在style.less文件的同级目录下创建一个style.css文件，并且将编译生成的CSS代码保存在style.css文件中<br><img src=\"http://img.blog.csdn.net/20170326103704105\" alt=\"这里写图片描述\"></p>\n<p><strong>查看style.css中的代码</strong><br>打开style.css文件后，可以看到style.css中的CSS代码和在命令行中的代码一样<br><img src=\"http://img.blog.csdn.net/20170326104523338\" alt=\"这里写图片描述\"></p>\n<p><strong>压缩CSS</strong><br>在开发中，为了减少网络请求资源的大小，通常需要压缩CSS文件，Less中提供了一个压缩CSS的插件，先执行<code>npm install -g less-plugin-clean-css</code>命令安装插件，然后执行<code>lessc style.less --clean-css=&quot;--s1 --advanced --compatibility=ie8&quot; &gt; style.min.css</code>命令，执行该命令后首先会将Less代码编译成CSS代码，然后会压缩CSS代码，最后会创建一个style.min.css文件，并且将压缩后的CSS代码保存到style.min.css文件中</p>\n<p><strong>压缩后的CSS代码</strong><br>压缩后的CSS代码中删掉了注释和空格，换行等无意义的数据<br><code>body{background-color:#e92322}</code></p>\n<h1 id=\"Less中的一些其他用法\"><a href=\"#Less中的一些其他用法\" class=\"headerlink\" title=\"Less中的一些其他用法\"></a>Less中的一些其他用法</h1><p><strong>Less中实现标签嵌套</strong><br>下面的Less代码中container下面存在多重嵌套的标签</p>\n<pre><code>//定义变量，记录container的宽度\n@width: 1000px;\n\n//定义变量，记录container的高度\n@height: 2000px;\n\n//创建变量，记录div的颜色\n@mainColor: #f0f9f0;\n\n/* 嵌套的用法 */ \n.container {\n  width: @width;\n  height: @height;\n  background-color: #ff0;\n\n  .row {\n    height: 200px;\n\n    div {\n      border-left: 1px solid @mainColor;\n\n       &gt; a {\n        color: red;\n\n        &amp;:hover {\n          color: green;\n        }\n      }\n    }\n  }\n}\n</code></pre><p>编译生成的CSS代码如下<br><img src=\"http://img.blog.csdn.net/20170326111954541\" alt=\"这里写图片描述\"></p>\n<p><strong>Less中使用函数</strong><br>在下面的代码中body，header，footer标签都要设置border-radius属性，为了减少代码量可以创建一个setRadius函数，让这三个标签都通过调用setRadius函数设置border-radius属性大大的减少了代码量，提高了开发效率</p>\n<pre><code>/**\n * 为标签设置border-radius属性\n * @radius 标签的半径\n * @return 没有返回值\n */\n.setRadius(@radius: 5px) {\n  -moz-border-radius: @radius;\n  -webkit-border-radius: @radius;\n  border-radius: @radius;\n}\n\nheader {\n\n    //给header标签设置border-radius属性\n    .setRadius;\n}\n\nfooter {\n    //给footer标签设置border-radius属性\n    .setRadius(10px);\n}\n\nbody {\n    //给body标签设置border-radius属性\n    .setRadius(15px);\n}\n</code></pre><p>执行结果<br><img src=\"http://img.blog.csdn.net/20170326114125041\" alt=\"这里写图片描述\"></p>\n<p><strong>合并less文件</strong><br>在开发中使用less文件的合并功能是一个非常高效且很适合团队开发的方式，比如在一个团队中有三个成员，A成员负责开发页面的header部分，A成员可以建立一个header.less文件，B成员负责开发页面中的banner部分，B成员可以创建一个banner.less文件，C成员负责开发页面中的footer部分，C成员可以建议一个footer.less文件，开发完成后可以将header.less、banner.less、footer.less合并在一个CSS文件中<br>假定header.less中代码如下</p>\n<pre><code>#header {\n    background-color: red;\n}\n</code></pre><p>banner.less中的代码</p>\n<pre><code>#banner {\n    background-color: green;\n}\n</code></pre><p>footer.less中的代码</p>\n<pre><code>#footer {\n    background-color: blue;\n}\n</code></pre><p>将这三个less文件中的代码合并到style.less中</p>\n<pre><code>//引入header.less文件\n@import url(&apos;header.less&apos;);\n\n//引入banner.less文件\n@import url(&apos;banner.less&apos;);\n\n//引入footer.less文件\n@import url(&apos;footer.less&apos;);\n</code></pre><p>编译index.less文件，编译结果如下，可以看到三个less文件中的代码都编译成了CSS文件，并且放在一起<br><img src=\"http://img.blog.csdn.net/20170326120411756\" alt=\"这里写图片描述\"></p>\n<h1 id=\"在网页中直接使用Less\"><a href=\"#在网页中直接使用Less\" class=\"headerlink\" title=\"在网页中直接使用Less\"></a>在网页中直接使用Less</h1><h2 id=\"为什么要在网页中直接使用Less\"><a href=\"#为什么要在网页中直接使用Less\" class=\"headerlink\" title=\"为什么要在网页中直接使用Less\"></a>为什么要在网页中直接使用Less</h2><p>如果按照上面介绍的方法使用Less，需要每次使用Less写完一点样式后就将Less编译成CSS文件，再在html中引入CSS，总是重复这个操作大大降低了开发效率，为了解决这个问题，可以通过一点简单的配置，可以实现在网页中直接运行</p>\n<h2 id=\"配置在网页中直接运行Less的环境\"><a href=\"#配置在网页中直接运行Less的环境\" class=\"headerlink\" title=\"配置在网页中直接运行Less的环境\"></a>配置在网页中直接运行Less的环境</h2><p><strong>下载less.js-2.5.1文件</strong><br>通过<a href=\"https://pan.baidu.com/s/1pLM3j6r\">https://pan.baidu.com/s/1pLM3j6r</a>下载less.js-2.5.1.zip文件<br><img src=\"http://img.blog.csdn.net/20170327105805389\" alt=\"这里写图片描述\"></p>\n<p><strong>创建项目</strong><br>创建一个项目。并且将less.js-2.5.1.zip解压到项目目录下</p>\n<p><strong>创建Less文件</strong><br>在项目目录下创建一个main.less文件，并在向main.less中添加如下代码</p>\n<pre><code>//创建变量，用于设置body的宽度\n@width: 1024px;\n\n//创建变量，用于设置body的高度\n@height: 1000px;\n\n//创建变量，用于设置body的背景颜色\n@backgroundColor: #f5f5f5;\n\nbody {\n  width: @width;\n  height: @height;\n  margin: 0;\n  padding: 50px;\n  background-color: @backgroundColor;\n}\n</code></pre><p><strong>创建HTML文件</strong><br>在项目目录下创建一个index.html文件，并且向index.html中添加如下代码</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;title&gt;测试网页中直接使用less文件的效果&lt;/title&gt;\n  &lt;link rel=&quot;stylesheet/less&quot; href=&quot;main.less&quot;&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;script src=&quot;less.js-2.5.1\\dist\\less.min.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre><p><strong>运行项目</strong><br>使用HTTP请求的方式在浏览器中运行index.html文件，WebStrom中点击运行按钮后会自动以HTTP请求的方式在浏览器中运行index.html文件，此时查看console控制台，当console控制台中展示下面的信息，表示项目运行成功<br><img src=\"http://img.blog.csdn.net/20170327110802691\" alt=\"这里写图片描述\"></p>\n<p><strong>查看元素信息</strong><br>在Elements模块下可以看到为body元素设置了CSS样式，表示Less文件在网页中运行成功<br><img src=\"http://img.blog.csdn.net/20170327111130924\" alt=\"这里写图片描述\"></p>\n<h2 id=\"特别说明\"><a href=\"#特别说明\" class=\"headerlink\" title=\"特别说明\"></a>特别说明</h2><p>这种方法只能用于开发测试中，开发完成后需要将Less编译成CSS</p>\n<h2 id=\"使用Less做的一个小项目\"><a href=\"#使用Less做的一个小项目\" class=\"headerlink\" title=\"使用Less做的一个小项目\"></a>使用Less做的一个小项目</h2><p>使用Less实现博雅互动首页 <a href=\"https://github.com/meishadevs/boyaa\">https://github.com/meishadevs/boyaa</a></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/\">http://meishadevs.com/blog/使用Less</a>】</p>\n</blockquote>"},{"title":"使用Gulp","date":"2017-04-14T16:00:00.000Z","_content":"\n# 为什么要使用Gulp\n在前端开发中通常需要做，预处理语言的编译、js文件的压缩、css文件的压缩、图片的压缩等一系列工作，而使用Gulp可以自动化的完成这些工作，从而提高网站的开发效率，在我的博客[使用Less](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/)中介绍了将Less文件编译成CSS文件的方法，仔细观察可以看到如果按照博客中介绍的方法，在编译多个Less文件或者编译不同文件夹下的Less文件时需要多次执行Less文件编译命令，而使用Gulp可以一次性完成这些操作。\n<!-- more -->\n\n# Gulp是什么\nGulp是一个可以自动化完成我们开发过程中大量的重复工作的工具，使用Gulp可以自动化的完成如，预处理语言的编译、js文件的压缩、css文件的压缩、html文件的压缩、图片体积优化等工作。\n\n# Gulp的特性\n- **易于使用** 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理\n- **构建快速** 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作\n- **插件高质** Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作\n- **易于学习** 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道\n\n# Gulp的常用网站\n- **Gulp官方网站：**[http://gulpjs.com/](http://gulpjs.com/)  \n- **Gulp中文网：**[http://www.gulpjs.com.cn/](http://www.gulpjs.com.cn/)\n- **Gulp插件地址：**[http://gulpjs.com/plugins/](http://gulpjs.com/plugins/)\n- **Gulp官方API：**[https://github.com/gulpjs/gulp/blob/master/docs/API.md](https://github.com/gulpjs/gulp/blob/master/docs/API.md)\n- **Gulp中文API：**[http://www.gulpjs.com.cn/docs/api/](http://www.gulpjs.com.cn/docs/api/)\n\n# Gulp的安装与使用\n\n### **安装Gulp**\n**1. 全局安装Gulp**  \n\n\tnpm install --global gulp\n\n**2. 创建一个code文件夹，并且进入到code文件夹下**  \n下面的命令是在Git bash中运行的，运行这几条命令，需要安装Git，没有安装Git的可以在电脑上自己手动创建一个code文件夹，并且进入code文件夹下  \n\n\tmkdir code (创建code文件夹)\n\tcd code (进入code文件夹下)\n\n**3.执行下面的命令创建package.json文件**  \n\n\tnpm init\n\n在命令行中运行`npm init`命令的时候会出现下图所示的要求用户输入name、version等值，当不清楚这些值的含义的时候，一直按回车键，会自动使用默认值\n![这里写图片描述](http://img.blog.csdn.net/20170416094616628)\n\n**4.完成这些操作后会在code文件中会生成一个package.json文件**\n![这里写图片描述](http://img.blog.csdn.net/20170416094708660)\n\n**5.打开package.json文件可以看到package.json中记录了一些当前项目的信息**  \n**name:** 项目的名称  \n**version:** 项目的版本  \n**description:** 项目的描述信息  \n**main:** 项目的入口函数  \n**scripts:** scripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令  \n**author:** 项目的作者  \n**license:** 项目的许可证  \n**devDependencies:** 项目依赖的插件  \n**repository:** 项目资源库\n\n**6.在命令行中执行下面的命令，安装Gulp**  \n\n\tnpm install --save-dev gulp\n\n**7.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\nGulp主文件用于注册任务 \n\t\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t/**\n\t * 注册一个任务\n\t * @param 任务名称\n\t * @param 自动执行的函数\n\t */\n\tgulp.task('say', function() {\n\t\tconsole.log(\"hello world !\");\n\t});\n\n**8.使用gulp**  \n打开命令行，并且在命令行中执行`gulp say`命令，可以看到在控制台中输出了一句\"say hello\"表示Gulp安装成功\n![](http://img.blog.csdn.net/20170416101457184)\n\n### 使用Gulp实现一个文件拷贝任务\n下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的**Gulp的安装与使用**中的内容\n\n**1.创建一个src文件夹，并且在src文件夹下创建一个index.html文件**  \n在Git Bash中执行下面的命令创建一个src文件夹，并在src文件夹下创建一个index.htmll文件，没有安装Git的可以手动创建\n\n\tmkdir src (创建src文件夹)\n\tcd src (进入到src文件夹中)\n\ttouch index.html (创建index.html文件)\n\n**2.向index.html中添加HTML代码**\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Document</title>\n\t</head>\n\t<body>\n\t   <h1>这是一个简单的web页面</h1>\t\t\n\t</body>\n\t</html>\n\n**3.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t//文件拷贝任务\n\tgulp.task('copy', function() {\n\t\n\t\t//获取src目录下的index.html文件\n\t\tgulp.src('src/index.html')\n\t\n\t\t//将index.html拷贝到dist目录中\n\t\t.pipe(gulp.dest('dist/'));\n\t});\n\n**4.在命令行中执行文件拷贝任务，将src目录下的index.html文件拷贝到dist目录下**  \n\n\tgulp copy\n\n文件拷贝命令执行完成后可以看到在code目录下自动创建了一个dist文件夹，并且在dist文件夹下自动创建了一个index.html文件，表示文件拷贝任务运行成功\n![这里写图片描述](http://img.blog.csdn.net/20170416110116584)\n\n**5.自动执行文件拷贝任务**\n在这个文件拷贝任务中，有一个非常大的弊端，就是每次更新index.html中的代码的时候，都要在命令行中执行一次`gulp copy`命令，这样做做了重复性操作，也不符合使用Gulp实现自动化的特点，为了改成自动化执行文件拷贝命令，可以修改gulpfile.js中的代码\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t//文件拷贝任务\n\tgulp.task('copy', function() {\n\t\n\t\t//获取src目录下的index.html文件\n\t\tgulp.src('src/index.html')\n\t\n\t\t//将index.html拷贝到dist目录中\n\t\t.pipe(gulp.dest('dist/'));\n\t});\n\t\n\t//监视copy任务\n\tgulp.task('dist', function() {\n\t\n\t\t//当src目录下的index.html文件发生变化的时候\n\t\t//执行copy任务\n\t\tgulp.watch('src/index.html', ['copy']);\n\t});\n\n**6.修改好gulpfile.js中的代码后在命令行中执行下面的命令**\n\n\tgulp dist\n\n**6.此时只要修改src文件夹的index.html文件,修改完成后只要一保存，HTML代码就能同时同步到dist文件夹下的index.html中**\n![这里写图片描述](http://img.blog.csdn.net/20170416113431492)\n\n### 使用Gulp实现自动将Less编译成CSS\n下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的**Gulp的安装与使用**中的内容\n\n**1.安装gulp-less插件**\n\t\n\tnpm install gulp-less --save-dev\n\n**2.创建Less文件**  \n在Git Bash中执行下面的命令创建一个less文件夹，并且在less文件夹下创建一个style.less文件，在没有安装Git Bash的情况下可以手动创建\n\t\n\tmkdir less (创建less文件夹)\n\tcd less (进入less文件夹)\n\ttouch style.less (创建style.less文件)\n\n**3.向style.less中添加一段简单的Less代码**\n\t\n\t@primary-color: #fff;\n\n\tbody {\n\t\tbackground-color: @primary-color;\n\t\n\t\t.container {\n\t\t\twidth: 1028px;\n\t\n\t\t\t.row {\n\t\t\t\tpadding: 0 15px;\n\t\t\t}\n\t\t}\n\t}\n\n**4.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\tvar less = require('gulp-less');\n\t\n\t//创建一个将Less编译成CSS的任务\n\tgulp.task('less', function() {\n\t\tgulp.src('less/*.less')\n\t\t.pipe(less())\n\t\t.pipe(gulp.dest('css/'));\n\t});\n\t\n\t//监视less任务\n\t//当less文件发生变化的时候，会自动将Less转换成CSS\n\tgulp.task('watchLess', function() {\n\t\tgulp.watch('./less/*.less', ['less']);\n\t});\n\n**5.在命令行中执行下面的命令，启动将Less文件编译成CSS文件的任务**\n\t\n\tgulp watchLess\n\n**5.修改less文件夹下的style.less**\n打开less文件夹下的style.less文件，并且修改style.less文件，当保存后会自动将style.less文件编译成css文件，并且会自动创建一个css目录，在css目录下自动创建一个style.css文件用于存储生成的CSS代码\n![这里写图片描述](http://img.blog.csdn.net/20170417204103113)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用Gulp](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Gulp/)】","source":"_posts/使用Gulp.md","raw":"---\ntitle:  使用Gulp\ndate: 2017-04-15\ncategories:\n\t- Gulp\n\t- 前端自动化\ntags:\n\t- Gulp\n\t- 前端自动化\n---\n\n# 为什么要使用Gulp\n在前端开发中通常需要做，预处理语言的编译、js文件的压缩、css文件的压缩、图片的压缩等一系列工作，而使用Gulp可以自动化的完成这些工作，从而提高网站的开发效率，在我的博客[使用Less](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/)中介绍了将Less文件编译成CSS文件的方法，仔细观察可以看到如果按照博客中介绍的方法，在编译多个Less文件或者编译不同文件夹下的Less文件时需要多次执行Less文件编译命令，而使用Gulp可以一次性完成这些操作。\n<!-- more -->\n\n# Gulp是什么\nGulp是一个可以自动化完成我们开发过程中大量的重复工作的工具，使用Gulp可以自动化的完成如，预处理语言的编译、js文件的压缩、css文件的压缩、html文件的压缩、图片体积优化等工作。\n\n# Gulp的特性\n- **易于使用** 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理\n- **构建快速** 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作\n- **插件高质** Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作\n- **易于学习** 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道\n\n# Gulp的常用网站\n- **Gulp官方网站：**[http://gulpjs.com/](http://gulpjs.com/)  \n- **Gulp中文网：**[http://www.gulpjs.com.cn/](http://www.gulpjs.com.cn/)\n- **Gulp插件地址：**[http://gulpjs.com/plugins/](http://gulpjs.com/plugins/)\n- **Gulp官方API：**[https://github.com/gulpjs/gulp/blob/master/docs/API.md](https://github.com/gulpjs/gulp/blob/master/docs/API.md)\n- **Gulp中文API：**[http://www.gulpjs.com.cn/docs/api/](http://www.gulpjs.com.cn/docs/api/)\n\n# Gulp的安装与使用\n\n### **安装Gulp**\n**1. 全局安装Gulp**  \n\n\tnpm install --global gulp\n\n**2. 创建一个code文件夹，并且进入到code文件夹下**  \n下面的命令是在Git bash中运行的，运行这几条命令，需要安装Git，没有安装Git的可以在电脑上自己手动创建一个code文件夹，并且进入code文件夹下  \n\n\tmkdir code (创建code文件夹)\n\tcd code (进入code文件夹下)\n\n**3.执行下面的命令创建package.json文件**  \n\n\tnpm init\n\n在命令行中运行`npm init`命令的时候会出现下图所示的要求用户输入name、version等值，当不清楚这些值的含义的时候，一直按回车键，会自动使用默认值\n![这里写图片描述](http://img.blog.csdn.net/20170416094616628)\n\n**4.完成这些操作后会在code文件中会生成一个package.json文件**\n![这里写图片描述](http://img.blog.csdn.net/20170416094708660)\n\n**5.打开package.json文件可以看到package.json中记录了一些当前项目的信息**  \n**name:** 项目的名称  \n**version:** 项目的版本  \n**description:** 项目的描述信息  \n**main:** 项目的入口函数  \n**scripts:** scripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令  \n**author:** 项目的作者  \n**license:** 项目的许可证  \n**devDependencies:** 项目依赖的插件  \n**repository:** 项目资源库\n\n**6.在命令行中执行下面的命令，安装Gulp**  \n\n\tnpm install --save-dev gulp\n\n**7.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\nGulp主文件用于注册任务 \n\t\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t/**\n\t * 注册一个任务\n\t * @param 任务名称\n\t * @param 自动执行的函数\n\t */\n\tgulp.task('say', function() {\n\t\tconsole.log(\"hello world !\");\n\t});\n\n**8.使用gulp**  \n打开命令行，并且在命令行中执行`gulp say`命令，可以看到在控制台中输出了一句\"say hello\"表示Gulp安装成功\n![](http://img.blog.csdn.net/20170416101457184)\n\n### 使用Gulp实现一个文件拷贝任务\n下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的**Gulp的安装与使用**中的内容\n\n**1.创建一个src文件夹，并且在src文件夹下创建一个index.html文件**  \n在Git Bash中执行下面的命令创建一个src文件夹，并在src文件夹下创建一个index.htmll文件，没有安装Git的可以手动创建\n\n\tmkdir src (创建src文件夹)\n\tcd src (进入到src文件夹中)\n\ttouch index.html (创建index.html文件)\n\n**2.向index.html中添加HTML代码**\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Document</title>\n\t</head>\n\t<body>\n\t   <h1>这是一个简单的web页面</h1>\t\t\n\t</body>\n\t</html>\n\n**3.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t//文件拷贝任务\n\tgulp.task('copy', function() {\n\t\n\t\t//获取src目录下的index.html文件\n\t\tgulp.src('src/index.html')\n\t\n\t\t//将index.html拷贝到dist目录中\n\t\t.pipe(gulp.dest('dist/'));\n\t});\n\n**4.在命令行中执行文件拷贝任务，将src目录下的index.html文件拷贝到dist目录下**  \n\n\tgulp copy\n\n文件拷贝命令执行完成后可以看到在code目录下自动创建了一个dist文件夹，并且在dist文件夹下自动创建了一个index.html文件，表示文件拷贝任务运行成功\n![这里写图片描述](http://img.blog.csdn.net/20170416110116584)\n\n**5.自动执行文件拷贝任务**\n在这个文件拷贝任务中，有一个非常大的弊端，就是每次更新index.html中的代码的时候，都要在命令行中执行一次`gulp copy`命令，这样做做了重复性操作，也不符合使用Gulp实现自动化的特点，为了改成自动化执行文件拷贝命令，可以修改gulpfile.js中的代码\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\t\n\t//文件拷贝任务\n\tgulp.task('copy', function() {\n\t\n\t\t//获取src目录下的index.html文件\n\t\tgulp.src('src/index.html')\n\t\n\t\t//将index.html拷贝到dist目录中\n\t\t.pipe(gulp.dest('dist/'));\n\t});\n\t\n\t//监视copy任务\n\tgulp.task('dist', function() {\n\t\n\t\t//当src目录下的index.html文件发生变化的时候\n\t\t//执行copy任务\n\t\tgulp.watch('src/index.html', ['copy']);\n\t});\n\n**6.修改好gulpfile.js中的代码后在命令行中执行下面的命令**\n\n\tgulp dist\n\n**6.此时只要修改src文件夹的index.html文件,修改完成后只要一保存，HTML代码就能同时同步到dist文件夹下的index.html中**\n![这里写图片描述](http://img.blog.csdn.net/20170416113431492)\n\n### 使用Gulp实现自动将Less编译成CSS\n下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的**Gulp的安装与使用**中的内容\n\n**1.安装gulp-less插件**\n\t\n\tnpm install gulp-less --save-dev\n\n**2.创建Less文件**  \n在Git Bash中执行下面的命令创建一个less文件夹，并且在less文件夹下创建一个style.less文件，在没有安装Git Bash的情况下可以手动创建\n\t\n\tmkdir less (创建less文件夹)\n\tcd less (进入less文件夹)\n\ttouch style.less (创建style.less文件)\n\n**3.向style.less中添加一段简单的Less代码**\n\t\n\t@primary-color: #fff;\n\n\tbody {\n\t\tbackground-color: @primary-color;\n\t\n\t\t.container {\n\t\t\twidth: 1028px;\n\t\n\t\t\t.row {\n\t\t\t\tpadding: 0 15px;\n\t\t\t}\n\t\t}\n\t}\n\n**4.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码**\n\n\t//载入gulp模块\n\tvar gulp = require('gulp');\n\tvar less = require('gulp-less');\n\t\n\t//创建一个将Less编译成CSS的任务\n\tgulp.task('less', function() {\n\t\tgulp.src('less/*.less')\n\t\t.pipe(less())\n\t\t.pipe(gulp.dest('css/'));\n\t});\n\t\n\t//监视less任务\n\t//当less文件发生变化的时候，会自动将Less转换成CSS\n\tgulp.task('watchLess', function() {\n\t\tgulp.watch('./less/*.less', ['less']);\n\t});\n\n**5.在命令行中执行下面的命令，启动将Less文件编译成CSS文件的任务**\n\t\n\tgulp watchLess\n\n**5.修改less文件夹下的style.less**\n打开less文件夹下的style.less文件，并且修改style.less文件，当保存后会自动将style.less文件编译成css文件，并且会自动创建一个css目录，在css目录下自动创建一个style.css文件用于存储生成的CSS代码\n![这里写图片描述](http://img.blog.csdn.net/20170417204103113)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用Gulp](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Gulp/)】","slug":"使用Gulp","published":1,"updated":"2017-04-28T08:04:42.022Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpk7000b38pxosj116rs","content":"<h1 id=\"为什么要使用Gulp\"><a href=\"#为什么要使用Gulp\" class=\"headerlink\" title=\"为什么要使用Gulp\"></a>为什么要使用Gulp</h1><p>在前端开发中通常需要做，预处理语言的编译、js文件的压缩、css文件的压缩、图片的压缩等一系列工作，而使用Gulp可以自动化的完成这些工作，从而提高网站的开发效率，在我的博客<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/\">使用Less</a>中介绍了将Less文件编译成CSS文件的方法，仔细观察可以看到如果按照博客中介绍的方法，在编译多个Less文件或者编译不同文件夹下的Less文件时需要多次执行Less文件编译命令，而使用Gulp可以一次性完成这些操作。<br><a id=\"more\"></a></p>\n<h1 id=\"Gulp是什么\"><a href=\"#Gulp是什么\" class=\"headerlink\" title=\"Gulp是什么\"></a>Gulp是什么</h1><p>Gulp是一个可以自动化完成我们开发过程中大量的重复工作的工具，使用Gulp可以自动化的完成如，预处理语言的编译、js文件的压缩、css文件的压缩、html文件的压缩、图片体积优化等工作。</p>\n<h1 id=\"Gulp的特性\"><a href=\"#Gulp的特性\" class=\"headerlink\" title=\"Gulp的特性\"></a>Gulp的特性</h1><ul>\n<li><strong>易于使用</strong> 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理</li>\n<li><strong>构建快速</strong> 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作</li>\n<li><strong>插件高质</strong> Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作</li>\n<li><strong>易于学习</strong> 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道</li>\n</ul>\n<h1 id=\"Gulp的常用网站\"><a href=\"#Gulp的常用网站\" class=\"headerlink\" title=\"Gulp的常用网站\"></a>Gulp的常用网站</h1><ul>\n<li><strong>Gulp官方网站：</strong><a href=\"http://gulpjs.com/\" target=\"_blank\" rel=\"external\">http://gulpjs.com/</a>  </li>\n<li><strong>Gulp中文网：</strong><a href=\"http://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"external\">http://www.gulpjs.com.cn/</a></li>\n<li><strong>Gulp插件地址：</strong><a href=\"http://gulpjs.com/plugins/\" target=\"_blank\" rel=\"external\">http://gulpjs.com/plugins/</a></li>\n<li><strong>Gulp官方API：</strong><a href=\"https://github.com/gulpjs/gulp/blob/master/docs/API.md\" target=\"_blank\" rel=\"external\">https://github.com/gulpjs/gulp/blob/master/docs/API.md</a></li>\n<li><strong>Gulp中文API：</strong><a href=\"http://www.gulpjs.com.cn/docs/api/\" target=\"_blank\" rel=\"external\">http://www.gulpjs.com.cn/docs/api/</a></li>\n</ul>\n<h1 id=\"Gulp的安装与使用\"><a href=\"#Gulp的安装与使用\" class=\"headerlink\" title=\"Gulp的安装与使用\"></a>Gulp的安装与使用</h1><h3 id=\"安装Gulp\"><a href=\"#安装Gulp\" class=\"headerlink\" title=\"安装Gulp\"></a><strong>安装Gulp</strong></h3><p><strong>1. 全局安装Gulp</strong>  </p>\n<pre><code>npm install --global gulp\n</code></pre><p><strong>2. 创建一个code文件夹，并且进入到code文件夹下</strong><br>下面的命令是在Git bash中运行的，运行这几条命令，需要安装Git，没有安装Git的可以在电脑上自己手动创建一个code文件夹，并且进入code文件夹下  </p>\n<pre><code>mkdir code (创建code文件夹)\ncd code (进入code文件夹下)\n</code></pre><p><strong>3.执行下面的命令创建package.json文件</strong>  </p>\n<pre><code>npm init\n</code></pre><p>在命令行中运行<code>npm init</code>命令的时候会出现下图所示的要求用户输入name、version等值，当不清楚这些值的含义的时候，一直按回车键，会自动使用默认值<br><img src=\"http://img.blog.csdn.net/20170416094616628\" alt=\"这里写图片描述\"></p>\n<p><strong>4.完成这些操作后会在code文件中会生成一个package.json文件</strong><br><img src=\"http://img.blog.csdn.net/20170416094708660\" alt=\"这里写图片描述\"></p>\n<p><strong>5.打开package.json文件可以看到package.json中记录了一些当前项目的信息</strong><br><strong>name:</strong> 项目的名称<br><strong>version:</strong> 项目的版本<br><strong>description:</strong> 项目的描述信息<br><strong>main:</strong> 项目的入口函数<br><strong>scripts:</strong> scripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令<br><strong>author:</strong> 项目的作者<br><strong>license:</strong> 项目的许可证<br><strong>devDependencies:</strong> 项目依赖的插件<br><strong>repository:</strong> 项目资源库</p>\n<p><strong>6.在命令行中执行下面的命令，安装Gulp</strong>  </p>\n<pre><code>npm install --save-dev gulp\n</code></pre><p><strong>7.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong><br>Gulp主文件用于注册任务 </p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n/**\n * 注册一个任务\n * @param 任务名称\n * @param 自动执行的函数\n */\ngulp.task(&apos;say&apos;, function() {\n    console.log(&quot;hello world !&quot;);\n});\n</code></pre><p><strong>8.使用gulp</strong><br>打开命令行，并且在命令行中执行<code>gulp say</code>命令，可以看到在控制台中输出了一句”say hello”表示Gulp安装成功<br><img src=\"http://img.blog.csdn.net/20170416101457184\" alt=\"\"></p>\n<h3 id=\"使用Gulp实现一个文件拷贝任务\"><a href=\"#使用Gulp实现一个文件拷贝任务\" class=\"headerlink\" title=\"使用Gulp实现一个文件拷贝任务\"></a>使用Gulp实现一个文件拷贝任务</h3><p>下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的<strong>Gulp的安装与使用</strong>中的内容</p>\n<p><strong>1.创建一个src文件夹，并且在src文件夹下创建一个index.html文件</strong><br>在Git Bash中执行下面的命令创建一个src文件夹，并在src文件夹下创建一个index.htmll文件，没有安装Git的可以手动创建</p>\n<pre><code>mkdir src (创建src文件夹)\ncd src (进入到src文件夹中)\ntouch index.html (创建index.html文件)\n</code></pre><p><strong>2.向index.html中添加HTML代码</strong></p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;h1&gt;这是一个简单的web页面&lt;/h1&gt;        \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p><strong>3.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong></p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n//文件拷贝任务\ngulp.task(&apos;copy&apos;, function() {\n\n    //获取src目录下的index.html文件\n    gulp.src(&apos;src/index.html&apos;)\n\n    //将index.html拷贝到dist目录中\n    .pipe(gulp.dest(&apos;dist/&apos;));\n});\n</code></pre><p><strong>4.在命令行中执行文件拷贝任务，将src目录下的index.html文件拷贝到dist目录下</strong>  </p>\n<pre><code>gulp copy\n</code></pre><p>文件拷贝命令执行完成后可以看到在code目录下自动创建了一个dist文件夹，并且在dist文件夹下自动创建了一个index.html文件，表示文件拷贝任务运行成功<br><img src=\"http://img.blog.csdn.net/20170416110116584\" alt=\"这里写图片描述\"></p>\n<p><strong>5.自动执行文件拷贝任务</strong><br>在这个文件拷贝任务中，有一个非常大的弊端，就是每次更新index.html中的代码的时候，都要在命令行中执行一次<code>gulp copy</code>命令，这样做做了重复性操作，也不符合使用Gulp实现自动化的特点，为了改成自动化执行文件拷贝命令，可以修改gulpfile.js中的代码</p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n//文件拷贝任务\ngulp.task(&apos;copy&apos;, function() {\n\n    //获取src目录下的index.html文件\n    gulp.src(&apos;src/index.html&apos;)\n\n    //将index.html拷贝到dist目录中\n    .pipe(gulp.dest(&apos;dist/&apos;));\n});\n\n//监视copy任务\ngulp.task(&apos;dist&apos;, function() {\n\n    //当src目录下的index.html文件发生变化的时候\n    //执行copy任务\n    gulp.watch(&apos;src/index.html&apos;, [&apos;copy&apos;]);\n});\n</code></pre><p><strong>6.修改好gulpfile.js中的代码后在命令行中执行下面的命令</strong></p>\n<pre><code>gulp dist\n</code></pre><p><strong>6.此时只要修改src文件夹的index.html文件,修改完成后只要一保存，HTML代码就能同时同步到dist文件夹下的index.html中</strong><br><img src=\"http://img.blog.csdn.net/20170416113431492\" alt=\"这里写图片描述\"></p>\n<h3 id=\"使用Gulp实现自动将Less编译成CSS\"><a href=\"#使用Gulp实现自动将Less编译成CSS\" class=\"headerlink\" title=\"使用Gulp实现自动将Less编译成CSS\"></a>使用Gulp实现自动将Less编译成CSS</h3><p>下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的<strong>Gulp的安装与使用</strong>中的内容</p>\n<p><strong>1.安装gulp-less插件</strong></p>\n<pre><code>npm install gulp-less --save-dev\n</code></pre><p><strong>2.创建Less文件</strong><br>在Git Bash中执行下面的命令创建一个less文件夹，并且在less文件夹下创建一个style.less文件，在没有安装Git Bash的情况下可以手动创建</p>\n<pre><code>mkdir less (创建less文件夹)\ncd less (进入less文件夹)\ntouch style.less (创建style.less文件)\n</code></pre><p><strong>3.向style.less中添加一段简单的Less代码</strong></p>\n<pre><code>@primary-color: #fff;\n\nbody {\n    background-color: @primary-color;\n\n    .container {\n        width: 1028px;\n\n        .row {\n            padding: 0 15px;\n        }\n    }\n}\n</code></pre><p><strong>4.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong></p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\nvar less = require(&apos;gulp-less&apos;);\n\n//创建一个将Less编译成CSS的任务\ngulp.task(&apos;less&apos;, function() {\n    gulp.src(&apos;less/*.less&apos;)\n    .pipe(less())\n    .pipe(gulp.dest(&apos;css/&apos;));\n});\n\n//监视less任务\n//当less文件发生变化的时候，会自动将Less转换成CSS\ngulp.task(&apos;watchLess&apos;, function() {\n    gulp.watch(&apos;./less/*.less&apos;, [&apos;less&apos;]);\n});\n</code></pre><p><strong>5.在命令行中执行下面的命令，启动将Less文件编译成CSS文件的任务</strong></p>\n<pre><code>gulp watchLess\n</code></pre><p><strong>5.修改less文件夹下的style.less</strong><br>打开less文件夹下的style.less文件，并且修改style.less文件，当保存后会自动将style.less文件编译成css文件，并且会自动创建一个css目录，在css目录下自动创建一个style.css文件用于存储生成的CSS代码<br><img src=\"http://img.blog.csdn.net/20170417204103113\" alt=\"这里写图片描述\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Gulp/\">http://meishadevs.com/blog/使用Gulp</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<h1 id=\"为什么要使用Gulp\"><a href=\"#为什么要使用Gulp\" class=\"headerlink\" title=\"为什么要使用Gulp\"></a>为什么要使用Gulp</h1><p>在前端开发中通常需要做，预处理语言的编译、js文件的压缩、css文件的压缩、图片的压缩等一系列工作，而使用Gulp可以自动化的完成这些工作，从而提高网站的开发效率，在我的博客<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Less/\">使用Less</a>中介绍了将Less文件编译成CSS文件的方法，仔细观察可以看到如果按照博客中介绍的方法，在编译多个Less文件或者编译不同文件夹下的Less文件时需要多次执行Less文件编译命令，而使用Gulp可以一次性完成这些操作。<br>","more":"</p>\n<h1 id=\"Gulp是什么\"><a href=\"#Gulp是什么\" class=\"headerlink\" title=\"Gulp是什么\"></a>Gulp是什么</h1><p>Gulp是一个可以自动化完成我们开发过程中大量的重复工作的工具，使用Gulp可以自动化的完成如，预处理语言的编译、js文件的压缩、css文件的压缩、html文件的压缩、图片体积优化等工作。</p>\n<h1 id=\"Gulp的特性\"><a href=\"#Gulp的特性\" class=\"headerlink\" title=\"Gulp的特性\"></a>Gulp的特性</h1><ul>\n<li><strong>易于使用</strong> 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理</li>\n<li><strong>构建快速</strong> 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作</li>\n<li><strong>插件高质</strong> Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作</li>\n<li><strong>易于学习</strong> 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道</li>\n</ul>\n<h1 id=\"Gulp的常用网站\"><a href=\"#Gulp的常用网站\" class=\"headerlink\" title=\"Gulp的常用网站\"></a>Gulp的常用网站</h1><ul>\n<li><strong>Gulp官方网站：</strong><a href=\"http://gulpjs.com/\">http://gulpjs.com/</a>  </li>\n<li><strong>Gulp中文网：</strong><a href=\"http://www.gulpjs.com.cn/\">http://www.gulpjs.com.cn/</a></li>\n<li><strong>Gulp插件地址：</strong><a href=\"http://gulpjs.com/plugins/\">http://gulpjs.com/plugins/</a></li>\n<li><strong>Gulp官方API：</strong><a href=\"https://github.com/gulpjs/gulp/blob/master/docs/API.md\">https://github.com/gulpjs/gulp/blob/master/docs/API.md</a></li>\n<li><strong>Gulp中文API：</strong><a href=\"http://www.gulpjs.com.cn/docs/api/\">http://www.gulpjs.com.cn/docs/api/</a></li>\n</ul>\n<h1 id=\"Gulp的安装与使用\"><a href=\"#Gulp的安装与使用\" class=\"headerlink\" title=\"Gulp的安装与使用\"></a>Gulp的安装与使用</h1><h3 id=\"安装Gulp\"><a href=\"#安装Gulp\" class=\"headerlink\" title=\"安装Gulp\"></a><strong>安装Gulp</strong></h3><p><strong>1. 全局安装Gulp</strong>  </p>\n<pre><code>npm install --global gulp\n</code></pre><p><strong>2. 创建一个code文件夹，并且进入到code文件夹下</strong><br>下面的命令是在Git bash中运行的，运行这几条命令，需要安装Git，没有安装Git的可以在电脑上自己手动创建一个code文件夹，并且进入code文件夹下  </p>\n<pre><code>mkdir code (创建code文件夹)\ncd code (进入code文件夹下)\n</code></pre><p><strong>3.执行下面的命令创建package.json文件</strong>  </p>\n<pre><code>npm init\n</code></pre><p>在命令行中运行<code>npm init</code>命令的时候会出现下图所示的要求用户输入name、version等值，当不清楚这些值的含义的时候，一直按回车键，会自动使用默认值<br><img src=\"http://img.blog.csdn.net/20170416094616628\" alt=\"这里写图片描述\"></p>\n<p><strong>4.完成这些操作后会在code文件中会生成一个package.json文件</strong><br><img src=\"http://img.blog.csdn.net/20170416094708660\" alt=\"这里写图片描述\"></p>\n<p><strong>5.打开package.json文件可以看到package.json中记录了一些当前项目的信息</strong><br><strong>name:</strong> 项目的名称<br><strong>version:</strong> 项目的版本<br><strong>description:</strong> 项目的描述信息<br><strong>main:</strong> 项目的入口函数<br><strong>scripts:</strong> scripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令<br><strong>author:</strong> 项目的作者<br><strong>license:</strong> 项目的许可证<br><strong>devDependencies:</strong> 项目依赖的插件<br><strong>repository:</strong> 项目资源库</p>\n<p><strong>6.在命令行中执行下面的命令，安装Gulp</strong>  </p>\n<pre><code>npm install --save-dev gulp\n</code></pre><p><strong>7.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong><br>Gulp主文件用于注册任务 </p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n/**\n * 注册一个任务\n * @param 任务名称\n * @param 自动执行的函数\n */\ngulp.task(&apos;say&apos;, function() {\n    console.log(&quot;hello world !&quot;);\n});\n</code></pre><p><strong>8.使用gulp</strong><br>打开命令行，并且在命令行中执行<code>gulp say</code>命令，可以看到在控制台中输出了一句”say hello”表示Gulp安装成功<br><img src=\"http://img.blog.csdn.net/20170416101457184\" alt=\"\"></p>\n<h3 id=\"使用Gulp实现一个文件拷贝任务\"><a href=\"#使用Gulp实现一个文件拷贝任务\" class=\"headerlink\" title=\"使用Gulp实现一个文件拷贝任务\"></a>使用Gulp实现一个文件拷贝任务</h3><p>下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的<strong>Gulp的安装与使用</strong>中的内容</p>\n<p><strong>1.创建一个src文件夹，并且在src文件夹下创建一个index.html文件</strong><br>在Git Bash中执行下面的命令创建一个src文件夹，并在src文件夹下创建一个index.htmll文件，没有安装Git的可以手动创建</p>\n<pre><code>mkdir src (创建src文件夹)\ncd src (进入到src文件夹中)\ntouch index.html (创建index.html文件)\n</code></pre><p><strong>2.向index.html中添加HTML代码</strong></p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;h1&gt;这是一个简单的web页面&lt;/h1&gt;        \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p><strong>3.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong></p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n//文件拷贝任务\ngulp.task(&apos;copy&apos;, function() {\n\n    //获取src目录下的index.html文件\n    gulp.src(&apos;src/index.html&apos;)\n\n    //将index.html拷贝到dist目录中\n    .pipe(gulp.dest(&apos;dist/&apos;));\n});\n</code></pre><p><strong>4.在命令行中执行文件拷贝任务，将src目录下的index.html文件拷贝到dist目录下</strong>  </p>\n<pre><code>gulp copy\n</code></pre><p>文件拷贝命令执行完成后可以看到在code目录下自动创建了一个dist文件夹，并且在dist文件夹下自动创建了一个index.html文件，表示文件拷贝任务运行成功<br><img src=\"http://img.blog.csdn.net/20170416110116584\" alt=\"这里写图片描述\"></p>\n<p><strong>5.自动执行文件拷贝任务</strong><br>在这个文件拷贝任务中，有一个非常大的弊端，就是每次更新index.html中的代码的时候，都要在命令行中执行一次<code>gulp copy</code>命令，这样做做了重复性操作，也不符合使用Gulp实现自动化的特点，为了改成自动化执行文件拷贝命令，可以修改gulpfile.js中的代码</p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\n\n//文件拷贝任务\ngulp.task(&apos;copy&apos;, function() {\n\n    //获取src目录下的index.html文件\n    gulp.src(&apos;src/index.html&apos;)\n\n    //将index.html拷贝到dist目录中\n    .pipe(gulp.dest(&apos;dist/&apos;));\n});\n\n//监视copy任务\ngulp.task(&apos;dist&apos;, function() {\n\n    //当src目录下的index.html文件发生变化的时候\n    //执行copy任务\n    gulp.watch(&apos;src/index.html&apos;, [&apos;copy&apos;]);\n});\n</code></pre><p><strong>6.修改好gulpfile.js中的代码后在命令行中执行下面的命令</strong></p>\n<pre><code>gulp dist\n</code></pre><p><strong>6.此时只要修改src文件夹的index.html文件,修改完成后只要一保存，HTML代码就能同时同步到dist文件夹下的index.html中</strong><br><img src=\"http://img.blog.csdn.net/20170416113431492\" alt=\"这里写图片描述\"></p>\n<h3 id=\"使用Gulp实现自动将Less编译成CSS\"><a href=\"#使用Gulp实现自动将Less编译成CSS\" class=\"headerlink\" title=\"使用Gulp实现自动将Less编译成CSS\"></a>使用Gulp实现自动将Less编译成CSS</h3><p>下面的操作都是在项目中安装了Gulp的情况下进行的，没有安装Gulp可以看前面的<strong>Gulp的安装与使用</strong>中的内容</p>\n<p><strong>1.安装gulp-less插件</strong></p>\n<pre><code>npm install gulp-less --save-dev\n</code></pre><p><strong>2.创建Less文件</strong><br>在Git Bash中执行下面的命令创建一个less文件夹，并且在less文件夹下创建一个style.less文件，在没有安装Git Bash的情况下可以手动创建</p>\n<pre><code>mkdir less (创建less文件夹)\ncd less (进入less文件夹)\ntouch style.less (创建style.less文件)\n</code></pre><p><strong>3.向style.less中添加一段简单的Less代码</strong></p>\n<pre><code>@primary-color: #fff;\n\nbody {\n    background-color: @primary-color;\n\n    .container {\n        width: 1028px;\n\n        .row {\n            padding: 0 15px;\n        }\n    }\n}\n</code></pre><p><strong>4.创建一个Gulp的主文件gulpfile.js，并且在gulpfile.js中添加下面的代码</strong></p>\n<pre><code>//载入gulp模块\nvar gulp = require(&apos;gulp&apos;);\nvar less = require(&apos;gulp-less&apos;);\n\n//创建一个将Less编译成CSS的任务\ngulp.task(&apos;less&apos;, function() {\n    gulp.src(&apos;less/*.less&apos;)\n    .pipe(less())\n    .pipe(gulp.dest(&apos;css/&apos;));\n});\n\n//监视less任务\n//当less文件发生变化的时候，会自动将Less转换成CSS\ngulp.task(&apos;watchLess&apos;, function() {\n    gulp.watch(&apos;./less/*.less&apos;, [&apos;less&apos;]);\n});\n</code></pre><p><strong>5.在命令行中执行下面的命令，启动将Less文件编译成CSS文件的任务</strong></p>\n<pre><code>gulp watchLess\n</code></pre><p><strong>5.修改less文件夹下的style.less</strong><br>打开less文件夹下的style.less文件，并且修改style.less文件，当保存后会自动将style.less文件编译成css文件，并且会自动创建一个css目录，在css目录下自动创建一个style.css文件用于存储生成的CSS代码<br><img src=\"http://img.blog.csdn.net/20170417204103113\" alt=\"这里写图片描述\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8Gulp/\">http://meishadevs.com/blog/使用Gulp</a>】</p>\n</blockquote>"},{"title":"使用NVM安装Node.js","date":"2017-03-10T16:00:00.000Z","_content":"## 为什么使用NVM安装Node.js\n方便管理Node.js的版本，使用NVM可以很轻松的实现不同Node.js版本之间的切换。\n<!--more-->\n\n## 需要准备的工具\n在[https://pan.baidu.com/s/1gfxajPT](https://pan.baidu.com/s/1gfxajPT)中下载NVM安装包，通过我提供的地址下载的NVM安装包中包含了Node.js，不需要再下载Node.js\n\n##  安装步骤\n**1.下载NVM安装包**\n将NVM安装包下载下来后放在一个没有空格的全英文路径下，我将NVM放在F:\\develop下面\n![](http://img.blog.csdn.net/20170311184329294)  \n\n**2.解压NVM.zip文件 **\n将nvm.zip文件解压到当前目录下\n![这里写图片描述](http://img.blog.csdn.net/20170311222822917)\n\n**3.打开nvm文件夹**\n打开nvm文件夹后，可以看到nvm文件夹中有如下图所示的文件\n![这里写图片描述](http://img.blog.csdn.net/20170311224908864)\n\n**4.建立settings.txt文件**\n在nvm文件夹下新建一个settings.txt文件，并且在settings.txt文件中添加下图所示的内容\n**内容介绍:**\n **root: F:\\develop\\nvm** nvm所在的目录\n **path: F:\\develop\\nodejs** node.js所在的目录\n **arch: 64 ** 当前的操作系统是64位**(诺操作系统是32位此处arch的值应该设为32)**\n **proxy: none** 设置代理服务器，此处不需要设置代理服务器，所以设为none\n![这里写图片描述](http://img.blog.csdn.net/20170313214811350)\n\n**5.配置环境变量**\n在环境变量中创建下面的环境变量\n\n\tnvm所在的目录\n\tNVM_HOME = F:\\develop\\nvm \n\t\n\tNode.js所在的目录\n\tNVM_SYMLINK = F:\\develop\\nodejs\n\n将这两个环境变量添加到path中\n\n\t%NVM_HOME%;%NVM_SYMLINK%;\n\n**6.判断nvm环境变量是否配置成功**\n打开命令行窗口，在命令行窗口中输入`nvm`命令，当命令行窗口中显示下图中的提示信息，表示nvm环境变量配置成功\n![这里写图片描述](http://img.blog.csdn.net/20170313221236424)\n\n**7.在命令行窗口中显示NVM中的Node.js**\n打开命令行窗口，并且输入`nvm ls`命令，命令的执行结果如下图所示，其中图中的5.6.0和4.3.0表示nvm中存在的Node.js的版本\n![这里写图片描述](http://img.blog.csdn.net/20170313223355075)\n\n**8.使用Node.js**\n在命令行中输入`nvm use 5.6.0`表示使用版本为5.6.0的Node.js\n![这里写图片描述](http://img.blog.csdn.net/20170313223835156)\n\n**9.查看当前正在使用的Node.js的版本**\n输入`nvm ls`命令可以查看当前正在使用的Node.js的版本，星号在那个版本号上就表示当前正在使用的是那个版本的Node.js\n![这里写图片描述](http://img.blog.csdn.net/20170313224246892)\n\n**10.查看Node.js是否安装**\n打开文件管理器，转到F:\\develop目录下，可以看到目录中多了一个node.js的快捷方式，表示node.js已经安装成功，其中这个目录是由第4步中的path值设置而来的\n![这里写图片描述](http://img.blog.csdn.net/20170313224921253)\n\n**11.检测Node.js的版本**\n在命令行中执行`node -v`命令可以查看当前Node.js的版本\n![这里写图片描述](http://img.blog.csdn.net/20170313225245161)\n\n**12.在命令行中运行javaScript代码**\n打开命令行，输入`node`命令会进入一个命令行版的代码编辑界面，在命令行中输入一段简单的代码，当输入`console.log(\"Hello World !\");`并且按下回车后，就可以通过Node.js在命令行中执行这段简单的js代码\n![这里写图片描述](http://img.blog.csdn.net/20170313230627715)\n\n**13.在命令行中运行本地文件中的js代码**\n在F:\\develop下创建一个hello.js文件并且在文件中添加一段简单的代码`console.log(\"hello worl !\");`,打开命令行，并且进入F:\\develop目录下，执行`node hello.js`命令便可以运行hello.js中的代码\n![这里写图片描述](http://img.blog.csdn.net/20170313231516719)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用NVM安装Node.js](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/)】","source":"_posts/使用NVM安装Node.js.md","raw":"---\ntitle: 使用NVM安装Node.js\ndate: 2017-03-11\ncategories:\n\t- NVM\n\t- Node.js\ntags:\n\t- NVM\n\t- Node.js\n---\n## 为什么使用NVM安装Node.js\n方便管理Node.js的版本，使用NVM可以很轻松的实现不同Node.js版本之间的切换。\n<!--more-->\n\n## 需要准备的工具\n在[https://pan.baidu.com/s/1gfxajPT](https://pan.baidu.com/s/1gfxajPT)中下载NVM安装包，通过我提供的地址下载的NVM安装包中包含了Node.js，不需要再下载Node.js\n\n##  安装步骤\n**1.下载NVM安装包**\n将NVM安装包下载下来后放在一个没有空格的全英文路径下，我将NVM放在F:\\develop下面\n![](http://img.blog.csdn.net/20170311184329294)  \n\n**2.解压NVM.zip文件 **\n将nvm.zip文件解压到当前目录下\n![这里写图片描述](http://img.blog.csdn.net/20170311222822917)\n\n**3.打开nvm文件夹**\n打开nvm文件夹后，可以看到nvm文件夹中有如下图所示的文件\n![这里写图片描述](http://img.blog.csdn.net/20170311224908864)\n\n**4.建立settings.txt文件**\n在nvm文件夹下新建一个settings.txt文件，并且在settings.txt文件中添加下图所示的内容\n**内容介绍:**\n **root: F:\\develop\\nvm** nvm所在的目录\n **path: F:\\develop\\nodejs** node.js所在的目录\n **arch: 64 ** 当前的操作系统是64位**(诺操作系统是32位此处arch的值应该设为32)**\n **proxy: none** 设置代理服务器，此处不需要设置代理服务器，所以设为none\n![这里写图片描述](http://img.blog.csdn.net/20170313214811350)\n\n**5.配置环境变量**\n在环境变量中创建下面的环境变量\n\n\tnvm所在的目录\n\tNVM_HOME = F:\\develop\\nvm \n\t\n\tNode.js所在的目录\n\tNVM_SYMLINK = F:\\develop\\nodejs\n\n将这两个环境变量添加到path中\n\n\t%NVM_HOME%;%NVM_SYMLINK%;\n\n**6.判断nvm环境变量是否配置成功**\n打开命令行窗口，在命令行窗口中输入`nvm`命令，当命令行窗口中显示下图中的提示信息，表示nvm环境变量配置成功\n![这里写图片描述](http://img.blog.csdn.net/20170313221236424)\n\n**7.在命令行窗口中显示NVM中的Node.js**\n打开命令行窗口，并且输入`nvm ls`命令，命令的执行结果如下图所示，其中图中的5.6.0和4.3.0表示nvm中存在的Node.js的版本\n![这里写图片描述](http://img.blog.csdn.net/20170313223355075)\n\n**8.使用Node.js**\n在命令行中输入`nvm use 5.6.0`表示使用版本为5.6.0的Node.js\n![这里写图片描述](http://img.blog.csdn.net/20170313223835156)\n\n**9.查看当前正在使用的Node.js的版本**\n输入`nvm ls`命令可以查看当前正在使用的Node.js的版本，星号在那个版本号上就表示当前正在使用的是那个版本的Node.js\n![这里写图片描述](http://img.blog.csdn.net/20170313224246892)\n\n**10.查看Node.js是否安装**\n打开文件管理器，转到F:\\develop目录下，可以看到目录中多了一个node.js的快捷方式，表示node.js已经安装成功，其中这个目录是由第4步中的path值设置而来的\n![这里写图片描述](http://img.blog.csdn.net/20170313224921253)\n\n**11.检测Node.js的版本**\n在命令行中执行`node -v`命令可以查看当前Node.js的版本\n![这里写图片描述](http://img.blog.csdn.net/20170313225245161)\n\n**12.在命令行中运行javaScript代码**\n打开命令行，输入`node`命令会进入一个命令行版的代码编辑界面，在命令行中输入一段简单的代码，当输入`console.log(\"Hello World !\");`并且按下回车后，就可以通过Node.js在命令行中执行这段简单的js代码\n![这里写图片描述](http://img.blog.csdn.net/20170313230627715)\n\n**13.在命令行中运行本地文件中的js代码**\n在F:\\develop下创建一个hello.js文件并且在文件中添加一段简单的代码`console.log(\"hello worl !\");`,打开命令行，并且进入F:\\develop目录下，执行`node hello.js`命令便可以运行hello.js中的代码\n![这里写图片描述](http://img.blog.csdn.net/20170313231516719)\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用NVM安装Node.js](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/)】","slug":"使用NVM安装Node.js","published":1,"updated":"2017-04-29T02:08:53.514Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpka000d38pxetectt1h","content":"<h2 id=\"为什么使用NVM安装Node-js\"><a href=\"#为什么使用NVM安装Node-js\" class=\"headerlink\" title=\"为什么使用NVM安装Node.js\"></a>为什么使用NVM安装Node.js</h2><p>方便管理Node.js的版本，使用NVM可以很轻松的实现不同Node.js版本之间的切换。<br><a id=\"more\"></a></p>\n<h2 id=\"需要准备的工具\"><a href=\"#需要准备的工具\" class=\"headerlink\" title=\"需要准备的工具\"></a>需要准备的工具</h2><p>在<a href=\"https://pan.baidu.com/s/1gfxajPT\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1gfxajPT</a>中下载NVM安装包，通过我提供的地址下载的NVM安装包中包含了Node.js，不需要再下载Node.js</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><p><strong>1.下载NVM安装包</strong><br>将NVM安装包下载下来后放在一个没有空格的全英文路径下，我将NVM放在F:\\develop下面<br><img src=\"http://img.blog.csdn.net/20170311184329294\" alt=\"\">  </p>\n<p><strong>2.解压NVM.zip文件 </strong><br>将nvm.zip文件解压到当前目录下<br><img src=\"http://img.blog.csdn.net/20170311222822917\" alt=\"这里写图片描述\"></p>\n<p><strong>3.打开nvm文件夹</strong><br>打开nvm文件夹后，可以看到nvm文件夹中有如下图所示的文件<br><img src=\"http://img.blog.csdn.net/20170311224908864\" alt=\"这里写图片描述\"></p>\n<p><strong>4.建立settings.txt文件</strong><br>在nvm文件夹下新建一个settings.txt文件，并且在settings.txt文件中添加下图所示的内容<br><strong>内容介绍:</strong><br> <strong>root: F:\\develop\\nvm</strong> nvm所在的目录<br> <strong>path: F:\\develop\\nodejs</strong> node.js所在的目录<br> <strong>arch: 64 </strong> 当前的操作系统是64位<strong>(诺操作系统是32位此处arch的值应该设为32)</strong><br> <strong>proxy: none</strong> 设置代理服务器，此处不需要设置代理服务器，所以设为none<br><img src=\"http://img.blog.csdn.net/20170313214811350\" alt=\"这里写图片描述\"></p>\n<p><strong>5.配置环境变量</strong><br>在环境变量中创建下面的环境变量</p>\n<pre><code>nvm所在的目录\nNVM_HOME = F:\\develop\\nvm \n\nNode.js所在的目录\nNVM_SYMLINK = F:\\develop\\nodejs\n</code></pre><p>将这两个环境变量添加到path中</p>\n<pre><code>%NVM_HOME%;%NVM_SYMLINK%;\n</code></pre><p><strong>6.判断nvm环境变量是否配置成功</strong><br>打开命令行窗口，在命令行窗口中输入<code>nvm</code>命令，当命令行窗口中显示下图中的提示信息，表示nvm环境变量配置成功<br><img src=\"http://img.blog.csdn.net/20170313221236424\" alt=\"这里写图片描述\"></p>\n<p><strong>7.在命令行窗口中显示NVM中的Node.js</strong><br>打开命令行窗口，并且输入<code>nvm ls</code>命令，命令的执行结果如下图所示，其中图中的5.6.0和4.3.0表示nvm中存在的Node.js的版本<br><img src=\"http://img.blog.csdn.net/20170313223355075\" alt=\"这里写图片描述\"></p>\n<p><strong>8.使用Node.js</strong><br>在命令行中输入<code>nvm use 5.6.0</code>表示使用版本为5.6.0的Node.js<br><img src=\"http://img.blog.csdn.net/20170313223835156\" alt=\"这里写图片描述\"></p>\n<p><strong>9.查看当前正在使用的Node.js的版本</strong><br>输入<code>nvm ls</code>命令可以查看当前正在使用的Node.js的版本，星号在那个版本号上就表示当前正在使用的是那个版本的Node.js<br><img src=\"http://img.blog.csdn.net/20170313224246892\" alt=\"这里写图片描述\"></p>\n<p><strong>10.查看Node.js是否安装</strong><br>打开文件管理器，转到F:\\develop目录下，可以看到目录中多了一个node.js的快捷方式，表示node.js已经安装成功，其中这个目录是由第4步中的path值设置而来的<br><img src=\"http://img.blog.csdn.net/20170313224921253\" alt=\"这里写图片描述\"></p>\n<p><strong>11.检测Node.js的版本</strong><br>在命令行中执行<code>node -v</code>命令可以查看当前Node.js的版本<br><img src=\"http://img.blog.csdn.net/20170313225245161\" alt=\"这里写图片描述\"></p>\n<p><strong>12.在命令行中运行javaScript代码</strong><br>打开命令行，输入<code>node</code>命令会进入一个命令行版的代码编辑界面，在命令行中输入一段简单的代码，当输入<code>console.log(&quot;Hello World !&quot;);</code>并且按下回车后，就可以通过Node.js在命令行中执行这段简单的js代码<br><img src=\"http://img.blog.csdn.net/20170313230627715\" alt=\"这里写图片描述\"></p>\n<p><strong>13.在命令行中运行本地文件中的js代码</strong><br>在F:\\develop下创建一个hello.js文件并且在文件中添加一段简单的代码<code>console.log(&quot;hello worl !&quot;);</code>,打开命令行，并且进入F:\\develop目录下，执行<code>node hello.js</code>命令便可以运行hello.js中的代码<br><img src=\"http://img.blog.csdn.net/20170313231516719\" alt=\"这里写图片描述\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/\">http://meishadevs.com/blog/使用NVM安装Node.js</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<h2 id=\"为什么使用NVM安装Node-js\"><a href=\"#为什么使用NVM安装Node-js\" class=\"headerlink\" title=\"为什么使用NVM安装Node.js\"></a>为什么使用NVM安装Node.js</h2><p>方便管理Node.js的版本，使用NVM可以很轻松的实现不同Node.js版本之间的切换。<br>","more":"</p>\n<h2 id=\"需要准备的工具\"><a href=\"#需要准备的工具\" class=\"headerlink\" title=\"需要准备的工具\"></a>需要准备的工具</h2><p>在<a href=\"https://pan.baidu.com/s/1gfxajPT\">https://pan.baidu.com/s/1gfxajPT</a>中下载NVM安装包，通过我提供的地址下载的NVM安装包中包含了Node.js，不需要再下载Node.js</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><p><strong>1.下载NVM安装包</strong><br>将NVM安装包下载下来后放在一个没有空格的全英文路径下，我将NVM放在F:\\develop下面<br><img src=\"http://img.blog.csdn.net/20170311184329294\" alt=\"\">  </p>\n<p><strong>2.解压NVM.zip文件 </strong><br>将nvm.zip文件解压到当前目录下<br><img src=\"http://img.blog.csdn.net/20170311222822917\" alt=\"这里写图片描述\"></p>\n<p><strong>3.打开nvm文件夹</strong><br>打开nvm文件夹后，可以看到nvm文件夹中有如下图所示的文件<br><img src=\"http://img.blog.csdn.net/20170311224908864\" alt=\"这里写图片描述\"></p>\n<p><strong>4.建立settings.txt文件</strong><br>在nvm文件夹下新建一个settings.txt文件，并且在settings.txt文件中添加下图所示的内容<br><strong>内容介绍:</strong><br> <strong>root: F:\\develop\\nvm</strong> nvm所在的目录<br> <strong>path: F:\\develop\\nodejs</strong> node.js所在的目录<br> <strong>arch: 64 </strong> 当前的操作系统是64位<strong>(诺操作系统是32位此处arch的值应该设为32)</strong><br> <strong>proxy: none</strong> 设置代理服务器，此处不需要设置代理服务器，所以设为none<br><img src=\"http://img.blog.csdn.net/20170313214811350\" alt=\"这里写图片描述\"></p>\n<p><strong>5.配置环境变量</strong><br>在环境变量中创建下面的环境变量</p>\n<pre><code>nvm所在的目录\nNVM_HOME = F:\\develop\\nvm \n\nNode.js所在的目录\nNVM_SYMLINK = F:\\develop\\nodejs\n</code></pre><p>将这两个环境变量添加到path中</p>\n<pre><code>%NVM_HOME%;%NVM_SYMLINK%;\n</code></pre><p><strong>6.判断nvm环境变量是否配置成功</strong><br>打开命令行窗口，在命令行窗口中输入<code>nvm</code>命令，当命令行窗口中显示下图中的提示信息，表示nvm环境变量配置成功<br><img src=\"http://img.blog.csdn.net/20170313221236424\" alt=\"这里写图片描述\"></p>\n<p><strong>7.在命令行窗口中显示NVM中的Node.js</strong><br>打开命令行窗口，并且输入<code>nvm ls</code>命令，命令的执行结果如下图所示，其中图中的5.6.0和4.3.0表示nvm中存在的Node.js的版本<br><img src=\"http://img.blog.csdn.net/20170313223355075\" alt=\"这里写图片描述\"></p>\n<p><strong>8.使用Node.js</strong><br>在命令行中输入<code>nvm use 5.6.0</code>表示使用版本为5.6.0的Node.js<br><img src=\"http://img.blog.csdn.net/20170313223835156\" alt=\"这里写图片描述\"></p>\n<p><strong>9.查看当前正在使用的Node.js的版本</strong><br>输入<code>nvm ls</code>命令可以查看当前正在使用的Node.js的版本，星号在那个版本号上就表示当前正在使用的是那个版本的Node.js<br><img src=\"http://img.blog.csdn.net/20170313224246892\" alt=\"这里写图片描述\"></p>\n<p><strong>10.查看Node.js是否安装</strong><br>打开文件管理器，转到F:\\develop目录下，可以看到目录中多了一个node.js的快捷方式，表示node.js已经安装成功，其中这个目录是由第4步中的path值设置而来的<br><img src=\"http://img.blog.csdn.net/20170313224921253\" alt=\"这里写图片描述\"></p>\n<p><strong>11.检测Node.js的版本</strong><br>在命令行中执行<code>node -v</code>命令可以查看当前Node.js的版本<br><img src=\"http://img.blog.csdn.net/20170313225245161\" alt=\"这里写图片描述\"></p>\n<p><strong>12.在命令行中运行javaScript代码</strong><br>打开命令行，输入<code>node</code>命令会进入一个命令行版的代码编辑界面，在命令行中输入一段简单的代码，当输入<code>console.log(&quot;Hello World !&quot;);</code>并且按下回车后，就可以通过Node.js在命令行中执行这段简单的js代码<br><img src=\"http://img.blog.csdn.net/20170313230627715\" alt=\"这里写图片描述\"></p>\n<p><strong>13.在命令行中运行本地文件中的js代码</strong><br>在F:\\develop下创建一个hello.js文件并且在文件中添加一段简单的代码<code>console.log(&quot;hello worl !&quot;);</code>,打开命令行，并且进入F:\\develop目录下，执行<code>node hello.js</code>命令便可以运行hello.js中的代码<br><img src=\"http://img.blog.csdn.net/20170313231516719\" alt=\"这里写图片描述\"></p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8NVM%E5%AE%89%E8%A3%85Node.js/\">http://meishadevs.com/blog/使用NVM安装Node.js</a>】</p>\n</blockquote>"},{"title":"使用新浪云部署网站","date":"2017-03-06T16:00:00.000Z","_content":"\n当我们做好一个网站后，肯定是第一时间想让周围的朋友和同学看看，顺便可以炫耀一下自己的技术 ，要部署网站肯定要用到服务器，而为了部署一个几M的网站去买一个服务器，有点不划算，幸运的是新浪云提供了一个比较好的解决方案。\n<!--more-->\n\n## 下面将详细的介绍使用新浪云部署网站的过程\n\n**第一步：**输入[http://www.sinacloud.com/](http://www.sinacloud.com/)进入新浪云官网  \n\n**第二步：**进入新浪云官网后，首先需要一个新浪云账号，如果你有新浪微博可以直接使用新浪微登录新浪云，没有新浪微博的可以在新浪云官网注册一个新浪云账号\n![](http://img.blog.csdn.net/20161224104219130)\n\n注册好新浪云账号 后会进入下图所示的用户中心界面\n![](http://img.blog.csdn.net/20161224133828862)\n\n**第三步：**单击云应用SEA下的立即创建\n![](http://img.blog.csdn.net/20161225194615092)\n\n点击立即创建后会跳转到下图所示的云应用SEA创建界面\n![](http://img.blog.csdn.net/20161225195629095)\n\n**第四步：**单击创建新应用按钮\n![](http://img.blog.csdn.net/20161225195913268)\n\n单击创建应用后会自动进入下图所示的应用创建界面\n![](http://img.blog.csdn.net/20161225201200923)\n\n**第五步：**补全应用界面的信息，并且单击创建应用\n![](http://img.blog.csdn.net/20161225201916652)\n\n**第六步：**单击创建应用按钮会进入下图所示的应用管理界面\n![](http://img.blog.csdn.net/20161225202141435)\n\n**第七步：**选择存储与CDN服务下的Storage\n![](http://img.blog.csdn.net/20161225202539077)\n\n**第八步：**选择创建Bucket\n![](http://img.blog.csdn.net/20161225202725641)\n\n**第九步：**设置Bucket的名称，设置完成后单击创建\n![](http://img.blog.csdn.net/20161225203020434)\n\n此时可以看到在Bucket界面上创建好了一个名称为boyaa的Bucket，这正是我们刚才创建的Bucket\n![](http://img.blog.csdn.net/20161225203302676)\n\n**第十步：**选单击boyaa可以看到里面什么也没有，因为我们刚刚创建好，并没有向boyaa中添加任何文件\n![](http://img.blog.csdn.net/20161225204144304)\n\n可以看到界面上也出现了一个上传文件的按钮，虽然可以通过单击这个按钮将网站的文件上传到boyaa中，但是直接通过单击这个上传文件按钮上传网站会出现一些莫名其妙的bug，新浪云也不推荐这样做，而是提供了一个第三方工具Cyberduck，并且提供了Cyberduck的下载地址和详细的说明文档  \n**Cyberduck的下载地址：**[https://cyberduck.io/](https://cyberduck.io/)  \n**说明文档的地址：**[http://www.sinacloud.com/doc/sae/php/storage.html#ftp](http://www.sinacloud.com/doc/sae/php/storage.html#ftp)\n\n安装好Cyberduck就可以使用Cyberduck上传网站到刚刚创建好的Bucket中\n\n## 使用Cyberduck上传网站\n**第一步：**打开Cyberduck\n![](http://img.blog.csdn.net/20161225205223713)\n\n**第二步：**选择新建链接\n![](http://img.blog.csdn.net/20161225205439090)\n\n**第三步：**选在弹出的链接服务器对话框中输入以下信息：\n**服务器类型:**Swift(OpenStack Storage)  \n**服务器URL：**auth.sinas3.com  \n**服务器的端口号：**443  \n**Access Key：**输入框中输入正确的Access Key  \n**Secret key：**输入框中输入正确的Secret Key\n\n**注：**选其中的Access Key和Secret key可以通过进入刚刚创建的应用的总览页面中获得\n![](http://img.blog.csdn.net/20161225211050849)\n\n**第四步：**选输入完链接服务器的信息后，单击链接按钮，链接到服务器，单击完链接按钮后会弹出下图所示的Tenant Nam输入界面，不用输入Tenant Nam直接单击Login按钮\n![](http://img.blog.csdn.net/20161225211524006)\n\n**第五步：**等到使用Cyberduck链接上服务器后，Cyberduck会跳转到下图所示的界面，在界面中可以看到我们刚刚创建好的一个Bucket项目boyaa\n![](http://img.blog.csdn.net/20161225211943197)\n\n当上传窗口按照下图所示在不断刷新上传进度，表示正在上传网站文件\n![](http://img.blog.csdn.net/20161225213226624)\n\n当上传窗口提示文件已上传完成，表示网站成功的上传到了Bucket项目boyaa上\n![](http://img.blog.csdn.net/20161225213432474)\n\n此时在Cyberduck上可以看到网站文件已经成功的上传到了boyaa文件夹中\n![](http://img.blog.csdn.net/20161225213717604)\n\n**第六步：**单转到网页上的boyaa页面，可以看到，网站文件已经成功的上传到了boyaa上\n![](http://img.blog.csdn.net/20161225214004049)\n\n网站成功的打开了，将网站的域名发给你的同学或者朋友，他们就可以成功的访问你得网站了\n![](http://img.blog.csdn.net/20161225214552631)\n\n我的这个网站的域名为[http://mywebapp1-boyaa.stor.sinaapp.com/index.html](http://mywebapp1-boyaa.stor.sinaapp.com/index.html)\n网通过观察网站的域名可知部署在新浪云上的网站的域名格式为:\n应用名称 + “-“ + Bucket名称 + “sinaapp.com” + 网站的html文件名称\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用新浪云部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)】","source":"_posts/使用新浪云部署网站.md","raw":"---\ntitle: 使用新浪云部署网站\ndate: 2017-03-07\ncategories:\n\t- 部署\ntags:\n\t- 部署\n---\n\n当我们做好一个网站后，肯定是第一时间想让周围的朋友和同学看看，顺便可以炫耀一下自己的技术 ，要部署网站肯定要用到服务器，而为了部署一个几M的网站去买一个服务器，有点不划算，幸运的是新浪云提供了一个比较好的解决方案。\n<!--more-->\n\n## 下面将详细的介绍使用新浪云部署网站的过程\n\n**第一步：**输入[http://www.sinacloud.com/](http://www.sinacloud.com/)进入新浪云官网  \n\n**第二步：**进入新浪云官网后，首先需要一个新浪云账号，如果你有新浪微博可以直接使用新浪微登录新浪云，没有新浪微博的可以在新浪云官网注册一个新浪云账号\n![](http://img.blog.csdn.net/20161224104219130)\n\n注册好新浪云账号 后会进入下图所示的用户中心界面\n![](http://img.blog.csdn.net/20161224133828862)\n\n**第三步：**单击云应用SEA下的立即创建\n![](http://img.blog.csdn.net/20161225194615092)\n\n点击立即创建后会跳转到下图所示的云应用SEA创建界面\n![](http://img.blog.csdn.net/20161225195629095)\n\n**第四步：**单击创建新应用按钮\n![](http://img.blog.csdn.net/20161225195913268)\n\n单击创建应用后会自动进入下图所示的应用创建界面\n![](http://img.blog.csdn.net/20161225201200923)\n\n**第五步：**补全应用界面的信息，并且单击创建应用\n![](http://img.blog.csdn.net/20161225201916652)\n\n**第六步：**单击创建应用按钮会进入下图所示的应用管理界面\n![](http://img.blog.csdn.net/20161225202141435)\n\n**第七步：**选择存储与CDN服务下的Storage\n![](http://img.blog.csdn.net/20161225202539077)\n\n**第八步：**选择创建Bucket\n![](http://img.blog.csdn.net/20161225202725641)\n\n**第九步：**设置Bucket的名称，设置完成后单击创建\n![](http://img.blog.csdn.net/20161225203020434)\n\n此时可以看到在Bucket界面上创建好了一个名称为boyaa的Bucket，这正是我们刚才创建的Bucket\n![](http://img.blog.csdn.net/20161225203302676)\n\n**第十步：**选单击boyaa可以看到里面什么也没有，因为我们刚刚创建好，并没有向boyaa中添加任何文件\n![](http://img.blog.csdn.net/20161225204144304)\n\n可以看到界面上也出现了一个上传文件的按钮，虽然可以通过单击这个按钮将网站的文件上传到boyaa中，但是直接通过单击这个上传文件按钮上传网站会出现一些莫名其妙的bug，新浪云也不推荐这样做，而是提供了一个第三方工具Cyberduck，并且提供了Cyberduck的下载地址和详细的说明文档  \n**Cyberduck的下载地址：**[https://cyberduck.io/](https://cyberduck.io/)  \n**说明文档的地址：**[http://www.sinacloud.com/doc/sae/php/storage.html#ftp](http://www.sinacloud.com/doc/sae/php/storage.html#ftp)\n\n安装好Cyberduck就可以使用Cyberduck上传网站到刚刚创建好的Bucket中\n\n## 使用Cyberduck上传网站\n**第一步：**打开Cyberduck\n![](http://img.blog.csdn.net/20161225205223713)\n\n**第二步：**选择新建链接\n![](http://img.blog.csdn.net/20161225205439090)\n\n**第三步：**选在弹出的链接服务器对话框中输入以下信息：\n**服务器类型:**Swift(OpenStack Storage)  \n**服务器URL：**auth.sinas3.com  \n**服务器的端口号：**443  \n**Access Key：**输入框中输入正确的Access Key  \n**Secret key：**输入框中输入正确的Secret Key\n\n**注：**选其中的Access Key和Secret key可以通过进入刚刚创建的应用的总览页面中获得\n![](http://img.blog.csdn.net/20161225211050849)\n\n**第四步：**选输入完链接服务器的信息后，单击链接按钮，链接到服务器，单击完链接按钮后会弹出下图所示的Tenant Nam输入界面，不用输入Tenant Nam直接单击Login按钮\n![](http://img.blog.csdn.net/20161225211524006)\n\n**第五步：**等到使用Cyberduck链接上服务器后，Cyberduck会跳转到下图所示的界面，在界面中可以看到我们刚刚创建好的一个Bucket项目boyaa\n![](http://img.blog.csdn.net/20161225211943197)\n\n当上传窗口按照下图所示在不断刷新上传进度，表示正在上传网站文件\n![](http://img.blog.csdn.net/20161225213226624)\n\n当上传窗口提示文件已上传完成，表示网站成功的上传到了Bucket项目boyaa上\n![](http://img.blog.csdn.net/20161225213432474)\n\n此时在Cyberduck上可以看到网站文件已经成功的上传到了boyaa文件夹中\n![](http://img.blog.csdn.net/20161225213717604)\n\n**第六步：**单转到网页上的boyaa页面，可以看到，网站文件已经成功的上传到了boyaa上\n![](http://img.blog.csdn.net/20161225214004049)\n\n网站成功的打开了，将网站的域名发给你的同学或者朋友，他们就可以成功的访问你得网站了\n![](http://img.blog.csdn.net/20161225214552631)\n\n我的这个网站的域名为[http://mywebapp1-boyaa.stor.sinaapp.com/index.html](http://mywebapp1-boyaa.stor.sinaapp.com/index.html)\n网通过观察网站的域名可知部署在新浪云上的网站的域名格式为:\n应用名称 + “-“ + Bucket名称 + “sinaapp.com” + 网站的html文件名称\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用新浪云部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)】","slug":"使用新浪云部署网站","published":1,"updated":"2017-04-28T07:05:44.674Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpkg000g38pxou4g0wy0","content":"<p>当我们做好一个网站后，肯定是第一时间想让周围的朋友和同学看看，顺便可以炫耀一下自己的技术 ，要部署网站肯定要用到服务器，而为了部署一个几M的网站去买一个服务器，有点不划算，幸运的是新浪云提供了一个比较好的解决方案。<br><a id=\"more\"></a></p>\n<h2 id=\"下面将详细的介绍使用新浪云部署网站的过程\"><a href=\"#下面将详细的介绍使用新浪云部署网站的过程\" class=\"headerlink\" title=\"下面将详细的介绍使用新浪云部署网站的过程\"></a>下面将详细的介绍使用新浪云部署网站的过程</h2><p><strong>第一步：</strong>输入<a href=\"http://www.sinacloud.com/\" target=\"_blank\" rel=\"external\">http://www.sinacloud.com/</a>进入新浪云官网  </p>\n<p><strong>第二步：</strong>进入新浪云官网后，首先需要一个新浪云账号，如果你有新浪微博可以直接使用新浪微登录新浪云，没有新浪微博的可以在新浪云官网注册一个新浪云账号<br><img src=\"http://img.blog.csdn.net/20161224104219130\" alt=\"\"></p>\n<p>注册好新浪云账号 后会进入下图所示的用户中心界面<br><img src=\"http://img.blog.csdn.net/20161224133828862\" alt=\"\"></p>\n<p><strong>第三步：</strong>单击云应用SEA下的立即创建<br><img src=\"http://img.blog.csdn.net/20161225194615092\" alt=\"\"></p>\n<p>点击立即创建后会跳转到下图所示的云应用SEA创建界面<br><img src=\"http://img.blog.csdn.net/20161225195629095\" alt=\"\"></p>\n<p><strong>第四步：</strong>单击创建新应用按钮<br><img src=\"http://img.blog.csdn.net/20161225195913268\" alt=\"\"></p>\n<p>单击创建应用后会自动进入下图所示的应用创建界面<br><img src=\"http://img.blog.csdn.net/20161225201200923\" alt=\"\"></p>\n<p><strong>第五步：</strong>补全应用界面的信息，并且单击创建应用<br><img src=\"http://img.blog.csdn.net/20161225201916652\" alt=\"\"></p>\n<p><strong>第六步：</strong>单击创建应用按钮会进入下图所示的应用管理界面<br><img src=\"http://img.blog.csdn.net/20161225202141435\" alt=\"\"></p>\n<p><strong>第七步：</strong>选择存储与CDN服务下的Storage<br><img src=\"http://img.blog.csdn.net/20161225202539077\" alt=\"\"></p>\n<p><strong>第八步：</strong>选择创建Bucket<br><img src=\"http://img.blog.csdn.net/20161225202725641\" alt=\"\"></p>\n<p><strong>第九步：</strong>设置Bucket的名称，设置完成后单击创建<br><img src=\"http://img.blog.csdn.net/20161225203020434\" alt=\"\"></p>\n<p>此时可以看到在Bucket界面上创建好了一个名称为boyaa的Bucket，这正是我们刚才创建的Bucket<br><img src=\"http://img.blog.csdn.net/20161225203302676\" alt=\"\"></p>\n<p><strong>第十步：</strong>选单击boyaa可以看到里面什么也没有，因为我们刚刚创建好，并没有向boyaa中添加任何文件<br><img src=\"http://img.blog.csdn.net/20161225204144304\" alt=\"\"></p>\n<p>可以看到界面上也出现了一个上传文件的按钮，虽然可以通过单击这个按钮将网站的文件上传到boyaa中，但是直接通过单击这个上传文件按钮上传网站会出现一些莫名其妙的bug，新浪云也不推荐这样做，而是提供了一个第三方工具Cyberduck，并且提供了Cyberduck的下载地址和详细的说明文档<br><strong>Cyberduck的下载地址：</strong><a href=\"https://cyberduck.io/\" target=\"_blank\" rel=\"external\">https://cyberduck.io/</a><br><strong>说明文档的地址：</strong><a href=\"http://www.sinacloud.com/doc/sae/php/storage.html#ftp\" target=\"_blank\" rel=\"external\">http://www.sinacloud.com/doc/sae/php/storage.html#ftp</a></p>\n<p>安装好Cyberduck就可以使用Cyberduck上传网站到刚刚创建好的Bucket中</p>\n<h2 id=\"使用Cyberduck上传网站\"><a href=\"#使用Cyberduck上传网站\" class=\"headerlink\" title=\"使用Cyberduck上传网站\"></a>使用Cyberduck上传网站</h2><p><strong>第一步：</strong>打开Cyberduck<br><img src=\"http://img.blog.csdn.net/20161225205223713\" alt=\"\"></p>\n<p><strong>第二步：</strong>选择新建链接<br><img src=\"http://img.blog.csdn.net/20161225205439090\" alt=\"\"></p>\n<p><strong>第三步：</strong>选在弹出的链接服务器对话框中输入以下信息：<br><strong>服务器类型:</strong>Swift(OpenStack Storage)<br><strong>服务器URL：</strong>auth.sinas3.com<br><strong>服务器的端口号：</strong>443<br><strong>Access Key：</strong>输入框中输入正确的Access Key<br><strong>Secret key：</strong>输入框中输入正确的Secret Key</p>\n<p><strong>注：</strong>选其中的Access Key和Secret key可以通过进入刚刚创建的应用的总览页面中获得<br><img src=\"http://img.blog.csdn.net/20161225211050849\" alt=\"\"></p>\n<p><strong>第四步：</strong>选输入完链接服务器的信息后，单击链接按钮，链接到服务器，单击完链接按钮后会弹出下图所示的Tenant Nam输入界面，不用输入Tenant Nam直接单击Login按钮<br><img src=\"http://img.blog.csdn.net/20161225211524006\" alt=\"\"></p>\n<p><strong>第五步：</strong>等到使用Cyberduck链接上服务器后，Cyberduck会跳转到下图所示的界面，在界面中可以看到我们刚刚创建好的一个Bucket项目boyaa<br><img src=\"http://img.blog.csdn.net/20161225211943197\" alt=\"\"></p>\n<p>当上传窗口按照下图所示在不断刷新上传进度，表示正在上传网站文件<br><img src=\"http://img.blog.csdn.net/20161225213226624\" alt=\"\"></p>\n<p>当上传窗口提示文件已上传完成，表示网站成功的上传到了Bucket项目boyaa上<br><img src=\"http://img.blog.csdn.net/20161225213432474\" alt=\"\"></p>\n<p>此时在Cyberduck上可以看到网站文件已经成功的上传到了boyaa文件夹中<br><img src=\"http://img.blog.csdn.net/20161225213717604\" alt=\"\"></p>\n<p><strong>第六步：</strong>单转到网页上的boyaa页面，可以看到，网站文件已经成功的上传到了boyaa上<br><img src=\"http://img.blog.csdn.net/20161225214004049\" alt=\"\"></p>\n<p>网站成功的打开了，将网站的域名发给你的同学或者朋友，他们就可以成功的访问你得网站了<br><img src=\"http://img.blog.csdn.net/20161225214552631\" alt=\"\"></p>\n<p>我的这个网站的域名为<a href=\"http://mywebapp1-boyaa.stor.sinaapp.com/index.html\" target=\"_blank\" rel=\"external\">http://mywebapp1-boyaa.stor.sinaapp.com/index.html</a><br>网通过观察网站的域名可知部署在新浪云上的网站的域名格式为:<br>应用名称 + “-“ + Bucket名称 + “sinaapp.com” + 网站的html文件名称</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">http://meishadevs.com/blog/使用新浪云部署网站</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>当我们做好一个网站后，肯定是第一时间想让周围的朋友和同学看看，顺便可以炫耀一下自己的技术 ，要部署网站肯定要用到服务器，而为了部署一个几M的网站去买一个服务器，有点不划算，幸运的是新浪云提供了一个比较好的解决方案。<br>","more":"</p>\n<h2 id=\"下面将详细的介绍使用新浪云部署网站的过程\"><a href=\"#下面将详细的介绍使用新浪云部署网站的过程\" class=\"headerlink\" title=\"下面将详细的介绍使用新浪云部署网站的过程\"></a>下面将详细的介绍使用新浪云部署网站的过程</h2><p><strong>第一步：</strong>输入<a href=\"http://www.sinacloud.com/\">http://www.sinacloud.com/</a>进入新浪云官网  </p>\n<p><strong>第二步：</strong>进入新浪云官网后，首先需要一个新浪云账号，如果你有新浪微博可以直接使用新浪微登录新浪云，没有新浪微博的可以在新浪云官网注册一个新浪云账号<br><img src=\"http://img.blog.csdn.net/20161224104219130\" alt=\"\"></p>\n<p>注册好新浪云账号 后会进入下图所示的用户中心界面<br><img src=\"http://img.blog.csdn.net/20161224133828862\" alt=\"\"></p>\n<p><strong>第三步：</strong>单击云应用SEA下的立即创建<br><img src=\"http://img.blog.csdn.net/20161225194615092\" alt=\"\"></p>\n<p>点击立即创建后会跳转到下图所示的云应用SEA创建界面<br><img src=\"http://img.blog.csdn.net/20161225195629095\" alt=\"\"></p>\n<p><strong>第四步：</strong>单击创建新应用按钮<br><img src=\"http://img.blog.csdn.net/20161225195913268\" alt=\"\"></p>\n<p>单击创建应用后会自动进入下图所示的应用创建界面<br><img src=\"http://img.blog.csdn.net/20161225201200923\" alt=\"\"></p>\n<p><strong>第五步：</strong>补全应用界面的信息，并且单击创建应用<br><img src=\"http://img.blog.csdn.net/20161225201916652\" alt=\"\"></p>\n<p><strong>第六步：</strong>单击创建应用按钮会进入下图所示的应用管理界面<br><img src=\"http://img.blog.csdn.net/20161225202141435\" alt=\"\"></p>\n<p><strong>第七步：</strong>选择存储与CDN服务下的Storage<br><img src=\"http://img.blog.csdn.net/20161225202539077\" alt=\"\"></p>\n<p><strong>第八步：</strong>选择创建Bucket<br><img src=\"http://img.blog.csdn.net/20161225202725641\" alt=\"\"></p>\n<p><strong>第九步：</strong>设置Bucket的名称，设置完成后单击创建<br><img src=\"http://img.blog.csdn.net/20161225203020434\" alt=\"\"></p>\n<p>此时可以看到在Bucket界面上创建好了一个名称为boyaa的Bucket，这正是我们刚才创建的Bucket<br><img src=\"http://img.blog.csdn.net/20161225203302676\" alt=\"\"></p>\n<p><strong>第十步：</strong>选单击boyaa可以看到里面什么也没有，因为我们刚刚创建好，并没有向boyaa中添加任何文件<br><img src=\"http://img.blog.csdn.net/20161225204144304\" alt=\"\"></p>\n<p>可以看到界面上也出现了一个上传文件的按钮，虽然可以通过单击这个按钮将网站的文件上传到boyaa中，但是直接通过单击这个上传文件按钮上传网站会出现一些莫名其妙的bug，新浪云也不推荐这样做，而是提供了一个第三方工具Cyberduck，并且提供了Cyberduck的下载地址和详细的说明文档<br><strong>Cyberduck的下载地址：</strong><a href=\"https://cyberduck.io/\">https://cyberduck.io/</a><br><strong>说明文档的地址：</strong><a href=\"http://www.sinacloud.com/doc/sae/php/storage.html#ftp\">http://www.sinacloud.com/doc/sae/php/storage.html#ftp</a></p>\n<p>安装好Cyberduck就可以使用Cyberduck上传网站到刚刚创建好的Bucket中</p>\n<h2 id=\"使用Cyberduck上传网站\"><a href=\"#使用Cyberduck上传网站\" class=\"headerlink\" title=\"使用Cyberduck上传网站\"></a>使用Cyberduck上传网站</h2><p><strong>第一步：</strong>打开Cyberduck<br><img src=\"http://img.blog.csdn.net/20161225205223713\" alt=\"\"></p>\n<p><strong>第二步：</strong>选择新建链接<br><img src=\"http://img.blog.csdn.net/20161225205439090\" alt=\"\"></p>\n<p><strong>第三步：</strong>选在弹出的链接服务器对话框中输入以下信息：<br><strong>服务器类型:</strong>Swift(OpenStack Storage)<br><strong>服务器URL：</strong>auth.sinas3.com<br><strong>服务器的端口号：</strong>443<br><strong>Access Key：</strong>输入框中输入正确的Access Key<br><strong>Secret key：</strong>输入框中输入正确的Secret Key</p>\n<p><strong>注：</strong>选其中的Access Key和Secret key可以通过进入刚刚创建的应用的总览页面中获得<br><img src=\"http://img.blog.csdn.net/20161225211050849\" alt=\"\"></p>\n<p><strong>第四步：</strong>选输入完链接服务器的信息后，单击链接按钮，链接到服务器，单击完链接按钮后会弹出下图所示的Tenant Nam输入界面，不用输入Tenant Nam直接单击Login按钮<br><img src=\"http://img.blog.csdn.net/20161225211524006\" alt=\"\"></p>\n<p><strong>第五步：</strong>等到使用Cyberduck链接上服务器后，Cyberduck会跳转到下图所示的界面，在界面中可以看到我们刚刚创建好的一个Bucket项目boyaa<br><img src=\"http://img.blog.csdn.net/20161225211943197\" alt=\"\"></p>\n<p>当上传窗口按照下图所示在不断刷新上传进度，表示正在上传网站文件<br><img src=\"http://img.blog.csdn.net/20161225213226624\" alt=\"\"></p>\n<p>当上传窗口提示文件已上传完成，表示网站成功的上传到了Bucket项目boyaa上<br><img src=\"http://img.blog.csdn.net/20161225213432474\" alt=\"\"></p>\n<p>此时在Cyberduck上可以看到网站文件已经成功的上传到了boyaa文件夹中<br><img src=\"http://img.blog.csdn.net/20161225213717604\" alt=\"\"></p>\n<p><strong>第六步：</strong>单转到网页上的boyaa页面，可以看到，网站文件已经成功的上传到了boyaa上<br><img src=\"http://img.blog.csdn.net/20161225214004049\" alt=\"\"></p>\n<p>网站成功的打开了，将网站的域名发给你的同学或者朋友，他们就可以成功的访问你得网站了<br><img src=\"http://img.blog.csdn.net/20161225214552631\" alt=\"\"></p>\n<p>我的这个网站的域名为<a href=\"http://mywebapp1-boyaa.stor.sinaapp.com/index.html\">http://mywebapp1-boyaa.stor.sinaapp.com/index.html</a><br>网通过观察网站的域名可知部署在新浪云上的网站的域名格式为:<br>应用名称 + “-“ + Bucket名称 + “sinaapp.com” + 网站的html文件名称</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">http://meishadevs.com/blog/使用新浪云部署网站</a>】</p>\n</blockquote>"},{"title":"一些常见的CSS兼容性写法","date":"2017-03-04T16:00:00.000Z","_content":"\n积累的一些常见的CSS兼容性写法。\n<!--more-->\n\n- 设置透明度  \n```\n在IE6中使用 filter: alpha(opacity = 40);\n在其他浏览器中使用 opacity: 0.4;\n```\n\n- 设置行高  \n```\n/*\\9表示兼容所有的IE浏览器*/  \nline-height: 35px\\9;\n```\n\n- 清除浮动  \n```\n .clearfix:after {\n    content: '';\n    height: 0;\n    clear: both;\n    overflow: hidden;\n    visibility: hidden;\n    display: block;\n}\n\n.clearfix {\n    *zoom: 1;\n}\n```\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/一些常见的CSS兼容性写法](http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/)】","source":"_posts/一些常见的CSS兼容性写法.md","raw":"---\ntitle: 一些常见的CSS兼容性写法\ndate: 2017-03-05\ncategories:\n\t- CSS\n\t- 兼容\ntags:\n    - CSS\n    - 兼容\n---\n\n积累的一些常见的CSS兼容性写法。\n<!--more-->\n\n- 设置透明度  \n```\n在IE6中使用 filter: alpha(opacity = 40);\n在其他浏览器中使用 opacity: 0.4;\n```\n\n- 设置行高  \n```\n/*\\9表示兼容所有的IE浏览器*/  \nline-height: 35px\\9;\n```\n\n- 清除浮动  \n```\n .clearfix:after {\n    content: '';\n    height: 0;\n    clear: both;\n    overflow: hidden;\n    visibility: hidden;\n    display: block;\n}\n\n.clearfix {\n    *zoom: 1;\n}\n```\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/一些常见的CSS兼容性写法](http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/)】","slug":"一些常见的CSS兼容性写法","published":1,"updated":"2017-09-26T07:05:47.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpkj000i38px4al1yn1c","content":"<p>积累的一些常见的CSS兼容性写法。<br><a id=\"more\"></a></p>\n<ul>\n<li><p>设置透明度  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在IE6中使用 filter: alpha(opacity = 40);</div><div class=\"line\">在其他浏览器中使用 opacity: 0.4;</div></pre></td></tr></table></figure>\n</li>\n<li><p>设置行高  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*\\9表示兼容所有的IE浏览器*/  </div><div class=\"line\">line-height: 35px\\9;</div></pre></td></tr></table></figure>\n</li>\n<li><p>清除浮动  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"> .clearfix:after &#123;</div><div class=\"line\">    content: &apos;&apos;;</div><div class=\"line\">    height: 0;</div><div class=\"line\">    clear: both;</div><div class=\"line\">    overflow: hidden;</div><div class=\"line\">    visibility: hidden;</div><div class=\"line\">    display: block;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.clearfix &#123;</div><div class=\"line\">    *zoom: 1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/\">http://meishadevs.com/blog/一些常见的CSS兼容性写法</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>积累的一些常见的CSS兼容性写法。<br>","more":"</p>\n<ul>\n<li><p>设置透明度  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在IE6中使用 filter: alpha(opacity = 40);</div><div class=\"line\">在其他浏览器中使用 opacity: 0.4;</div></pre></td></tr></table></figure>\n</li>\n<li><p>设置行高  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*\\9表示兼容所有的IE浏览器*/  </div><div class=\"line\">line-height: 35px\\9;</div></pre></td></tr></table></figure>\n</li>\n<li><p>清除浮动  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"> .clearfix:after &#123;</div><div class=\"line\">    content: &apos;&apos;;</div><div class=\"line\">    height: 0;</div><div class=\"line\">    clear: both;</div><div class=\"line\">    overflow: hidden;</div><div class=\"line\">    visibility: hidden;</div><div class=\"line\">    display: block;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.clearfix &#123;</div><div class=\"line\">    *zoom: 1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%85%BC%E5%AE%B9%E6%80%A7%E5%86%99%E6%B3%95/\">http://meishadevs.com/blog/一些常见的CSS兼容性写法</a>】</p>\n</blockquote>"},{"title":"开发中的一些小知识点","date":"2017-03-03T16:00:00.000Z","_content":"\n总结一些开发中平时遇到的小知识点，包括HTML、CSS、JavaScript等方面的知识点。\n<!--more-->\n\n获得网站的图标： 网址 +　“/“ + favicon.ico 如获得淘宝网的图标\n\t\n\thttp://www.taobao.com/favicon.ico\n\n网站图标一般放在网站的根目录下\n\n在网页中导入icon的代码\n\n\t<link type=\"image/x-icon\" rel=\"shortcut icon\" href=\"favicon.ico\">\n\n滑动时候，不选中文字的代码\n\n\twindow.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();\n\n隐藏滚动条的方法\n\n\tdocument.body.style.overflow = \"hidden\";\n\n显示滚动条的方式\n\n\tdocument.body.style.overflow = \"visible\";\n\n去掉标签自带的蓝色边框\n\n\toutline-style:none;\n\n当给标签设置display: inline-block属性的时候，标签之间会产生空隙，清除标签之间的空隙的方法是给设置了display:inline-block属性的标签的父标签设置\n\n\tfont-size : 0\n\n去掉图片底部默认的3像素空白间隙\n\n\tvertical-align: top\n\n下面的css样式表示文本的字体为宋体，文本的字体大小为14px，文本的行高为24px\n\n\tfont: 14px/24px \"宋体\"\n\n如果给line-height的值只设置一个数字，没有加单位，此时元素的行高为元素的字体大小乘以那个数字如给元素设置两个属性 line-height: 2 和 font-size: 20px，当前元素的line-height属性没有单位，此时元素的行高为\nfont-size的值 line-height的值 = 20 2 = 40\n\n下面的代码表示选择div标签下的第2个标签，并且这个标签必须是p标签才会被选中\n\n\tdiv p:nth-child(2)\n\n下面的代码表示选中div标签下的第2个p标签\n\n\tdiv p:nth-of-type(2)\n\n隐藏溢出标签中的文本并且在标签中最后增加一个省略号\n\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\n`-webkit-margin-before: 1em`表示元素的上边距的高度 = 元素的字体大小 1，当元素的font-size :14时候。元素的上边距的高度 = 14px 1 = 14px，webkit指的是Chrome浏览器内核\n\n标签的height和width表示标签中内容区的width和height,不包括padding、margin和border\n\nli浮动后，ul将失去宽高度，如要设置ul整体背景需要定义好ul宽高\n\n设置了定位的元素，在没有设置left值和top值的情况下在原来的位置不变\n\n`text-align:center`属性不仅可以将块级元素下的文本居中，还可以将块级元素下的行内元素居中\n\n`box-sizing: border-box;`浏览器使用IE6以前的方式解析盒模型，当它定义width和height时，border和padding则是被包含在宽高之内的,内容的宽和高可以通过定义的“width”和 “height”减去相应方向的“padding”和“border”的宽度得到。\n\n`box-sizing:content-box;`浏览器对盒模型的解释遵从我们之前认识到的 W3C 标准，当它定义width和height时，它的宽度不包括border和padding。\n\n在网页中使用Ajax，提交按钮不能设置成`<input type=\"submit\"/>`，只能设置成`<input type=\"button\"/>`\n\n在同步提交中服务器端是通过标签的`name`属性获得标签中的值，例如在网页中创建一个密码输入框`<input type=\"password\" name=\"password\"/>`，在PHP中通过`$password = $_GET['password']`;获得密码输入框中的密码,其中password表示密码输入框中name属性的值\n\n下面的语句是条件注释，表示当浏览器的版本小于IE9时候，执行条件语句中的代码\n\n\t<!--[if lt IE 9]>\n    \t<script src=\"https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n    \t<script src=\"https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js\"></script>\n\t<![endif]-->\n\nChrome浏览器中的默认字体大小为16px\n\n**js中获得父节点下子节点的方法**   \n**childNodes** 获得的节点中会包括文本节点  \n**children** 获得的子节点中不包含文本节点\n\n**let** 、**var** 、**const**三者的区别  \n**var：** 使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象  \n**let：** 使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升  \n**const：** 使用const声明的是常量，在后面出现的代码中不能再修改该常量的值\n\n**属性选择器**  \n`E[attr]：`表示选中存在attr属性的E标签  \n`E[attr=val]：`表示选中属性的值为val的E标签  \n`E[attr~=val]：`表示选中标签中存在一个单独的属性值val，且这个属性值是以空格分隔的E标签  \n`E[attr*=val]：`表示选中属性值里包含val字符并且在“任意”位置的E标签  \n`E[attr^=val]：`表示选中属性值里包含val字符并且在“开始”位置的E标签  \n`E[attr$=val]：`表示选中属性值里包含val字符并且在“结束”位置的E标签\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/开发中的一些小知识点](http://meishadevs.com/blog/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/)】","source":"_posts/开发中的一些小知识点.md","raw":"---\ntitle: 开发中的一些小知识点\ndate: 2017-03-04\ncategories:\n\t- 前端\ntags:\n    - 前端\n---\n\n总结一些开发中平时遇到的小知识点，包括HTML、CSS、JavaScript等方面的知识点。\n<!--more-->\n\n获得网站的图标： 网址 +　“/“ + favicon.ico 如获得淘宝网的图标\n\t\n\thttp://www.taobao.com/favicon.ico\n\n网站图标一般放在网站的根目录下\n\n在网页中导入icon的代码\n\n\t<link type=\"image/x-icon\" rel=\"shortcut icon\" href=\"favicon.ico\">\n\n滑动时候，不选中文字的代码\n\n\twindow.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();\n\n隐藏滚动条的方法\n\n\tdocument.body.style.overflow = \"hidden\";\n\n显示滚动条的方式\n\n\tdocument.body.style.overflow = \"visible\";\n\n去掉标签自带的蓝色边框\n\n\toutline-style:none;\n\n当给标签设置display: inline-block属性的时候，标签之间会产生空隙，清除标签之间的空隙的方法是给设置了display:inline-block属性的标签的父标签设置\n\n\tfont-size : 0\n\n去掉图片底部默认的3像素空白间隙\n\n\tvertical-align: top\n\n下面的css样式表示文本的字体为宋体，文本的字体大小为14px，文本的行高为24px\n\n\tfont: 14px/24px \"宋体\"\n\n如果给line-height的值只设置一个数字，没有加单位，此时元素的行高为元素的字体大小乘以那个数字如给元素设置两个属性 line-height: 2 和 font-size: 20px，当前元素的line-height属性没有单位，此时元素的行高为\nfont-size的值 line-height的值 = 20 2 = 40\n\n下面的代码表示选择div标签下的第2个标签，并且这个标签必须是p标签才会被选中\n\n\tdiv p:nth-child(2)\n\n下面的代码表示选中div标签下的第2个p标签\n\n\tdiv p:nth-of-type(2)\n\n隐藏溢出标签中的文本并且在标签中最后增加一个省略号\n\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\n`-webkit-margin-before: 1em`表示元素的上边距的高度 = 元素的字体大小 1，当元素的font-size :14时候。元素的上边距的高度 = 14px 1 = 14px，webkit指的是Chrome浏览器内核\n\n标签的height和width表示标签中内容区的width和height,不包括padding、margin和border\n\nli浮动后，ul将失去宽高度，如要设置ul整体背景需要定义好ul宽高\n\n设置了定位的元素，在没有设置left值和top值的情况下在原来的位置不变\n\n`text-align:center`属性不仅可以将块级元素下的文本居中，还可以将块级元素下的行内元素居中\n\n`box-sizing: border-box;`浏览器使用IE6以前的方式解析盒模型，当它定义width和height时，border和padding则是被包含在宽高之内的,内容的宽和高可以通过定义的“width”和 “height”减去相应方向的“padding”和“border”的宽度得到。\n\n`box-sizing:content-box;`浏览器对盒模型的解释遵从我们之前认识到的 W3C 标准，当它定义width和height时，它的宽度不包括border和padding。\n\n在网页中使用Ajax，提交按钮不能设置成`<input type=\"submit\"/>`，只能设置成`<input type=\"button\"/>`\n\n在同步提交中服务器端是通过标签的`name`属性获得标签中的值，例如在网页中创建一个密码输入框`<input type=\"password\" name=\"password\"/>`，在PHP中通过`$password = $_GET['password']`;获得密码输入框中的密码,其中password表示密码输入框中name属性的值\n\n下面的语句是条件注释，表示当浏览器的版本小于IE9时候，执行条件语句中的代码\n\n\t<!--[if lt IE 9]>\n    \t<script src=\"https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n    \t<script src=\"https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js\"></script>\n\t<![endif]-->\n\nChrome浏览器中的默认字体大小为16px\n\n**js中获得父节点下子节点的方法**   \n**childNodes** 获得的节点中会包括文本节点  \n**children** 获得的子节点中不包含文本节点\n\n**let** 、**var** 、**const**三者的区别  \n**var：** 使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象  \n**let：** 使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升  \n**const：** 使用const声明的是常量，在后面出现的代码中不能再修改该常量的值\n\n**属性选择器**  \n`E[attr]：`表示选中存在attr属性的E标签  \n`E[attr=val]：`表示选中属性的值为val的E标签  \n`E[attr~=val]：`表示选中标签中存在一个单独的属性值val，且这个属性值是以空格分隔的E标签  \n`E[attr*=val]：`表示选中属性值里包含val字符并且在“任意”位置的E标签  \n`E[attr^=val]：`表示选中属性值里包含val字符并且在“开始”位置的E标签  \n`E[attr$=val]：`表示选中属性值里包含val字符并且在“结束”位置的E标签\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/开发中的一些小知识点](http://meishadevs.com/blog/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/)】","slug":"开发中的一些小知识点","published":1,"updated":"2017-09-26T03:50:06.022Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpkp000n38pxmfrn3tpn","content":"<p>总结一些开发中平时遇到的小知识点，包括HTML、CSS、JavaScript等方面的知识点。<br><a id=\"more\"></a></p>\n<p>获得网站的图标： 网址 +　“/“ + favicon.ico 如获得淘宝网的图标</p>\n<pre><code>http://www.taobao.com/favicon.ico\n</code></pre><p>网站图标一般放在网站的根目录下</p>\n<p>在网页中导入icon的代码</p>\n<pre><code>&lt;link type=&quot;image/x-icon&quot; rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot;&gt;\n</code></pre><p>滑动时候，不选中文字的代码</p>\n<pre><code>window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();\n</code></pre><p>隐藏滚动条的方法</p>\n<pre><code>document.body.style.overflow = &quot;hidden&quot;;\n</code></pre><p>显示滚动条的方式</p>\n<pre><code>document.body.style.overflow = &quot;visible&quot;;\n</code></pre><p>去掉标签自带的蓝色边框</p>\n<pre><code>outline-style:none;\n</code></pre><p>当给标签设置display: inline-block属性的时候，标签之间会产生空隙，清除标签之间的空隙的方法是给设置了display:inline-block属性的标签的父标签设置</p>\n<pre><code>font-size : 0\n</code></pre><p>去掉图片底部默认的3像素空白间隙</p>\n<pre><code>vertical-align: top\n</code></pre><p>下面的css样式表示文本的字体为宋体，文本的字体大小为14px，文本的行高为24px</p>\n<pre><code>font: 14px/24px &quot;宋体&quot;\n</code></pre><p>如果给line-height的值只设置一个数字，没有加单位，此时元素的行高为元素的字体大小乘以那个数字如给元素设置两个属性 line-height: 2 和 font-size: 20px，当前元素的line-height属性没有单位，此时元素的行高为<br>font-size的值 line-height的值 = 20 2 = 40</p>\n<p>下面的代码表示选择div标签下的第2个标签，并且这个标签必须是p标签才会被选中</p>\n<pre><code>div p:nth-child(2)\n</code></pre><p>下面的代码表示选中div标签下的第2个p标签</p>\n<pre><code>div p:nth-of-type(2)\n</code></pre><p>隐藏溢出标签中的文本并且在标签中最后增加一个省略号</p>\n<pre><code>overflow: hidden;\nwhite-space: nowrap;\ntext-overflow: ellipsis;\n</code></pre><p><code>-webkit-margin-before: 1em</code>表示元素的上边距的高度 = 元素的字体大小 1，当元素的font-size :14时候。元素的上边距的高度 = 14px 1 = 14px，webkit指的是Chrome浏览器内核</p>\n<p>标签的height和width表示标签中内容区的width和height,不包括padding、margin和border</p>\n<p>li浮动后，ul将失去宽高度，如要设置ul整体背景需要定义好ul宽高</p>\n<p>设置了定位的元素，在没有设置left值和top值的情况下在原来的位置不变</p>\n<p><code>text-align:center</code>属性不仅可以将块级元素下的文本居中，还可以将块级元素下的行内元素居中</p>\n<p><code>box-sizing: border-box;</code>浏览器使用IE6以前的方式解析盒模型，当它定义width和height时，border和padding则是被包含在宽高之内的,内容的宽和高可以通过定义的“width”和 “height”减去相应方向的“padding”和“border”的宽度得到。</p>\n<p><code>box-sizing:content-box;</code>浏览器对盒模型的解释遵从我们之前认识到的 W3C 标准，当它定义width和height时，它的宽度不包括border和padding。</p>\n<p>在网页中使用Ajax，提交按钮不能设置成<code>&lt;input type=&quot;submit&quot;/&gt;</code>，只能设置成<code>&lt;input type=&quot;button&quot;/&gt;</code></p>\n<p>在同步提交中服务器端是通过标签的<code>name</code>属性获得标签中的值，例如在网页中创建一个密码输入框<code>&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;</code>，在PHP中通过<code>$password = $_GET[&#39;password&#39;]</code>;获得密码输入框中的密码,其中password表示密码输入框中name属性的值</p>\n<p>下面的语句是条件注释，表示当浏览器的版本小于IE9时候，执行条件语句中的代码</p>\n<pre><code>&lt;!--[if lt IE 9]&gt;\n    &lt;script src=&quot;https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre><p>Chrome浏览器中的默认字体大小为16px</p>\n<p><strong>js中获得父节点下子节点的方法</strong><br><strong>childNodes</strong> 获得的节点中会包括文本节点<br><strong>children</strong> 获得的子节点中不包含文本节点</p>\n<p><strong>let</strong> 、<strong>var</strong> 、<strong>const</strong>三者的区别<br><strong>var：</strong> 使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象<br><strong>let：</strong> 使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升<br><strong>const：</strong> 使用const声明的是常量，在后面出现的代码中不能再修改该常量的值</p>\n<p><strong>属性选择器</strong><br><code>E[attr]：</code>表示选中存在attr属性的E标签<br><code>E[attr=val]：</code>表示选中属性的值为val的E标签<br><code>E[attr~=val]：</code>表示选中标签中存在一个单独的属性值val，且这个属性值是以空格分隔的E标签<br><code>E[attr*=val]：</code>表示选中属性值里包含val字符并且在“任意”位置的E标签<br><code>E[attr^=val]：</code>表示选中属性值里包含val字符并且在“开始”位置的E标签<br><code>E[attr$=val]：</code>表示选中属性值里包含val字符并且在“结束”位置的E标签</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/\">http://meishadevs.com/blog/开发中的一些小知识点</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>总结一些开发中平时遇到的小知识点，包括HTML、CSS、JavaScript等方面的知识点。<br>","more":"</p>\n<p>获得网站的图标： 网址 +　“/“ + favicon.ico 如获得淘宝网的图标</p>\n<pre><code>http://www.taobao.com/favicon.ico\n</code></pre><p>网站图标一般放在网站的根目录下</p>\n<p>在网页中导入icon的代码</p>\n<pre><code>&lt;link type=&quot;image/x-icon&quot; rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot;&gt;\n</code></pre><p>滑动时候，不选中文字的代码</p>\n<pre><code>window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();\n</code></pre><p>隐藏滚动条的方法</p>\n<pre><code>document.body.style.overflow = &quot;hidden&quot;;\n</code></pre><p>显示滚动条的方式</p>\n<pre><code>document.body.style.overflow = &quot;visible&quot;;\n</code></pre><p>去掉标签自带的蓝色边框</p>\n<pre><code>outline-style:none;\n</code></pre><p>当给标签设置display: inline-block属性的时候，标签之间会产生空隙，清除标签之间的空隙的方法是给设置了display:inline-block属性的标签的父标签设置</p>\n<pre><code>font-size : 0\n</code></pre><p>去掉图片底部默认的3像素空白间隙</p>\n<pre><code>vertical-align: top\n</code></pre><p>下面的css样式表示文本的字体为宋体，文本的字体大小为14px，文本的行高为24px</p>\n<pre><code>font: 14px/24px &quot;宋体&quot;\n</code></pre><p>如果给line-height的值只设置一个数字，没有加单位，此时元素的行高为元素的字体大小乘以那个数字如给元素设置两个属性 line-height: 2 和 font-size: 20px，当前元素的line-height属性没有单位，此时元素的行高为<br>font-size的值 line-height的值 = 20 2 = 40</p>\n<p>下面的代码表示选择div标签下的第2个标签，并且这个标签必须是p标签才会被选中</p>\n<pre><code>div p:nth-child(2)\n</code></pre><p>下面的代码表示选中div标签下的第2个p标签</p>\n<pre><code>div p:nth-of-type(2)\n</code></pre><p>隐藏溢出标签中的文本并且在标签中最后增加一个省略号</p>\n<pre><code>overflow: hidden;\nwhite-space: nowrap;\ntext-overflow: ellipsis;\n</code></pre><p><code>-webkit-margin-before: 1em</code>表示元素的上边距的高度 = 元素的字体大小 1，当元素的font-size :14时候。元素的上边距的高度 = 14px 1 = 14px，webkit指的是Chrome浏览器内核</p>\n<p>标签的height和width表示标签中内容区的width和height,不包括padding、margin和border</p>\n<p>li浮动后，ul将失去宽高度，如要设置ul整体背景需要定义好ul宽高</p>\n<p>设置了定位的元素，在没有设置left值和top值的情况下在原来的位置不变</p>\n<p><code>text-align:center</code>属性不仅可以将块级元素下的文本居中，还可以将块级元素下的行内元素居中</p>\n<p><code>box-sizing: border-box;</code>浏览器使用IE6以前的方式解析盒模型，当它定义width和height时，border和padding则是被包含在宽高之内的,内容的宽和高可以通过定义的“width”和 “height”减去相应方向的“padding”和“border”的宽度得到。</p>\n<p><code>box-sizing:content-box;</code>浏览器对盒模型的解释遵从我们之前认识到的 W3C 标准，当它定义width和height时，它的宽度不包括border和padding。</p>\n<p>在网页中使用Ajax，提交按钮不能设置成<code>&lt;input type=&quot;submit&quot;/&gt;</code>，只能设置成<code>&lt;input type=&quot;button&quot;/&gt;</code></p>\n<p>在同步提交中服务器端是通过标签的<code>name</code>属性获得标签中的值，例如在网页中创建一个密码输入框<code>&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;</code>，在PHP中通过<code>$password = $_GET[&#39;password&#39;]</code>;获得密码输入框中的密码,其中password表示密码输入框中name属性的值</p>\n<p>下面的语句是条件注释，表示当浏览器的版本小于IE9时候，执行条件语句中的代码</p>\n<pre><code>&lt;!--[if lt IE 9]&gt;\n    &lt;script src=&quot;https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre><p>Chrome浏览器中的默认字体大小为16px</p>\n<p><strong>js中获得父节点下子节点的方法</strong><br><strong>childNodes</strong> 获得的节点中会包括文本节点<br><strong>children</strong> 获得的子节点中不包含文本节点</p>\n<p><strong>let</strong> 、<strong>var</strong> 、<strong>const</strong>三者的区别<br><strong>var：</strong> 使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象<br><strong>let：</strong> 使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升<br><strong>const：</strong> 使用const声明的是常量，在后面出现的代码中不能再修改该常量的值</p>\n<p><strong>属性选择器</strong><br><code>E[attr]：</code>表示选中存在attr属性的E标签<br><code>E[attr=val]：</code>表示选中属性的值为val的E标签<br><code>E[attr~=val]：</code>表示选中标签中存在一个单独的属性值val，且这个属性值是以空格分隔的E标签<br><code>E[attr*=val]：</code>表示选中属性值里包含val字符并且在“任意”位置的E标签<br><code>E[attr^=val]：</code>表示选中属性值里包含val字符并且在“开始”位置的E标签<br><code>E[attr$=val]：</code>表示选中属性值里包含val字符并且在“结束”位置的E标签</p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/\">http://meishadevs.com/blog/开发中的一些小知识点</a>】</p>\n</blockquote>"},{"title":"使用GitHub部署网站","date":"2017-03-07T16:00:00.000Z","_content":"\n在上一篇博客中介绍了[使用新浪云部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)这篇博客将介绍另一种部署网站的方式，使用GitHub部署网站。\n<!--more-->\n\n## 两种部署网站的方式比较\n![](http://img.blog.csdn.net/20161227094654160)\n\n部署网站之前，先要有一个GitHub账号，熟悉一些Git命令，注册GitHub账号和使用git命令可以参考下面的文档，这个文档中介绍的非常详细，我也不做过多的介绍  \n**从0开始学习GitHub：**[http://pan.baidu.com/s/1hsn57YO](http://pan.baidu.com/s/1hsn57YO)\n\n注册好GitHub账号并且完善用户信息后可以得到一个下图所示的界面，下图是我的GitHub界面，其中界面中的信息介绍可以参考[从0开始学习 GITHUB 系列之「加入 GITHUB」](http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/)，这篇博客对GitHub界面的信息介绍的非常详细\n![](http://img.blog.csdn.net/20161226214844895)\n\n## 下面进入正题，使用GitHub部署网站\n**第一步：**单击Repositories，其中Repositories在GitHub上表示的是仓库，在GitHub上每个项目都存放在仓库里，一个仓库保存一个项目\n![](http://img.blog.csdn.net/20161226215559693)\n\n**第二步：**单击New按钮\n![](http://img.blog.csdn.net/20161226220437338)\n\n**第三步：**单击根据图中的提示填写信息，信息填写完成后单击Create respository按钮创建仓库\n![](http://img.blog.csdn.net/20161226221833076)\n\n**第四步：**单击创建好仓库后会自动跳转到下图所示的界面，在界面中单击Settings\n![](http://img.blog.csdn.net/20161226222230082)\n\n**第五步：**进入设置界面后一直往下，找到GitHub Page,并且单击GitHub Page模块中的Choose them按钮创建一个网站的主题\n![](http://img.blog.csdn.net/20161226222855256)\n\n**第六步：**选择Cayman主题，然后单击select theme按钮\n![](http://img.blog.csdn.net/20161226223107905)\n\n**第七步：**单击Commit changes按钮\n![](http://img.blog.csdn.net/20161226223508227)\n\n**第八步：**单击Commit changes按钮后会自动跳转到我们创建的仓库界面，里面包含了仓库的各种信息，其中master表示这个仓库位于master分之上，进入界面后单击Settings按钮\n![](http://img.blog.csdn.net/20161226224351486)\n\n**第九步：** 在Settings界面中往下滑，滑到GitHub Page模块，可以看到GitHub Page模块中多了一个网址\n![](http://img.blog.csdn.net/20161226224724966)\n\n**第十步：**在浏览器中打开网址后可以看到网页上呈现出的内容就是我们刚刚创建的主题为Cayman的网页\n![](http://img.blog.csdn.net/20161226225252484)\n\n**第十一步：**回到GitHub上并且打开我们刚刚创建的那个仓库，仓库里的文件就是刚刚在浏览器中显示的内容，接下来要做的事情就是修改仓库里的文件，单击Clone or download按钮\n![](http://img.blog.csdn.net/20161226225859038)\n\n**第十二步：**单击复制到剪切板按钮，复制仓库的url\n![](http://img.blog.csdn.net/20161226230341481)\n\n**第十三步：**在下面的操作中需要电脑中安装了git，并且熟悉几个简单的git命令，关于git的安装以及git命令的使用可以参考[从0开始学习 GITHUB 系列之「GIT 速成」](http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/)这篇博客将git介绍的非常通俗易懂，安装好git后，先在电脑中创建一个文件夹用于保存从Github中克隆下来的仓库，我建的文件夹叫做GitProject，在E:\\game路径下，打开命令行进入GitProject文件夹下\n![](http://img.blog.csdn.net/20161226231237026)\n\n**第十四步：**执行`git clone https://github.com/meishaxiaozi/boyaa.git`命令，其中`git clone`表示要克隆一个项目，后面的`https://github.com/meishaxiaozi/boyaa.git`表示项目地址，该地址是由**第十二步**操作获得的，当在最后一行出现了100%表示，远程仓库已经成功的克隆到了本地\n![](http://img.blog.csdn.net/20161226231723810)\n\n**第十五步：**打开GitProject文件夹，可以看到在文件夹中多了一个boyaa文件，该文件正是刚刚在GitHub中创建的仓库\n![](http://img.blog.csdn.net/20161226232212468)\n\n**第十六步：**打开文件，并且将需要上传到GitHub上的网站添加到该文件中\n![](http://img.blog.csdn.net/20161226232503219)\n\n**第十七步：**打开命令行，并且进入boyaa文件夹下，并且执行 `git add .` 命令，此命令表示将需要提交到git中的文件先添加到缓存\n![](http://img.blog.csdn.net/20161226232914298)\n\n**第十八步：**执行 `git commit -m “first commit .”`命令，此命令表示将文件提交到git中，下面显示的都是提交到git中的文件\n![](http://img.blog.csdn.net/20161226233236959)\n\n**第十九步：**执行 `git push origin master` 命令，将文件push到GitHub上的master分支上，当出现下图所示的提示信息时，表示网站已经成功的提交到了GitHub上\n![](http://img.blog.csdn.net/20161226233708442)\n\n**第二十步：**回到Github上的boyaa仓库，可以看到文件已经全部提交上来了\n![](http://img.blog.csdn.net/20161226233941249)\n\n**第二十一步：**再次打开位于Settings下，GitHub Page模块中的网址，可以看到网页变成了我们修改后的页面  \n**网站的网址：**[https://meishaxiaozi.github.io/boyaa/](https://meishaxiaozi.github.io/boyaa/)  \n**网址的格式：**https:// + GitHub的用户名 + .github.io/ + 仓库的名称\n![](http://img.blog.csdn.net/20161226235606553)\n\n## GitHub部署网站简化版\n上面介绍的步骤比较复杂，熟悉Git命令的话可以使用几条简单的Git命令实现部署\n\n**第一步：**在Git Bash中执行下面的命令，创建一个boyaa文件夹\n\n\tmkdir boyaa\n\n**第二步：**将需要部署到GitHub上的文件添加到boyaa文件夹中\n![这里写图片描述](http://img.blog.csdn.net/20170429110653556)\n\n**第三步：**进入boyaa文件夹中\n\n\tcd boyaa \n\n**第四步：**初始化一个本地Git仓库\n\n\tgit init\n\n**第五步：**将需要提交的文件添加到缓存区\n\n\tgit add .\n\n**第六步：**将文件提交到本地仓库\n\n\tgit commit -m \"update some data\"\n\n**第七步：**创建一个gh-pages分支\n\n\tgit branch gh-pages\n\n**第八步：**切换到gh-pages分支，gh-pages分支是一个比较特殊的分支，网页文件提交到gh-pages分支上，可以通过HTTP协议访问gh-pages分支上的网页文件\n\n\tgit checkout gh-pages\n\n**第九步：**为本地仓库关联一个远程仓库，其中远程仓库为上一种方法中的第三步创建的boyaa仓库\n\n\tgit remote add origin https://github.com/meishadevs/boyaa.git\n\n**第十步：**将网页文件提交到远程仓库中的gh-pages分支上\n\n\tgit push origin gh-pages\n\n**第十一步：**访问网页  \n此时可以通过[https://meishadevs.github.io/boyaa](https://meishadevs.github.io/boyaa)访问部署好的网页\n\n**说明：**部署到gh-pages分支上的网页的URL格式为  \n\n\thttps:// + username.github.io/ + GitHub上的仓库名\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用GitHub部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8GitHub%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)】","source":"_posts/使用GitHub部署网站.md","raw":"---\ntitle: 使用GitHub部署网站\ndate: 2017-03-08\ncategories:\n\t- 部署\ntags:\n\t- 部署\n---\n\n在上一篇博客中介绍了[使用新浪云部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)这篇博客将介绍另一种部署网站的方式，使用GitHub部署网站。\n<!--more-->\n\n## 两种部署网站的方式比较\n![](http://img.blog.csdn.net/20161227094654160)\n\n部署网站之前，先要有一个GitHub账号，熟悉一些Git命令，注册GitHub账号和使用git命令可以参考下面的文档，这个文档中介绍的非常详细，我也不做过多的介绍  \n**从0开始学习GitHub：**[http://pan.baidu.com/s/1hsn57YO](http://pan.baidu.com/s/1hsn57YO)\n\n注册好GitHub账号并且完善用户信息后可以得到一个下图所示的界面，下图是我的GitHub界面，其中界面中的信息介绍可以参考[从0开始学习 GITHUB 系列之「加入 GITHUB」](http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/)，这篇博客对GitHub界面的信息介绍的非常详细\n![](http://img.blog.csdn.net/20161226214844895)\n\n## 下面进入正题，使用GitHub部署网站\n**第一步：**单击Repositories，其中Repositories在GitHub上表示的是仓库，在GitHub上每个项目都存放在仓库里，一个仓库保存一个项目\n![](http://img.blog.csdn.net/20161226215559693)\n\n**第二步：**单击New按钮\n![](http://img.blog.csdn.net/20161226220437338)\n\n**第三步：**单击根据图中的提示填写信息，信息填写完成后单击Create respository按钮创建仓库\n![](http://img.blog.csdn.net/20161226221833076)\n\n**第四步：**单击创建好仓库后会自动跳转到下图所示的界面，在界面中单击Settings\n![](http://img.blog.csdn.net/20161226222230082)\n\n**第五步：**进入设置界面后一直往下，找到GitHub Page,并且单击GitHub Page模块中的Choose them按钮创建一个网站的主题\n![](http://img.blog.csdn.net/20161226222855256)\n\n**第六步：**选择Cayman主题，然后单击select theme按钮\n![](http://img.blog.csdn.net/20161226223107905)\n\n**第七步：**单击Commit changes按钮\n![](http://img.blog.csdn.net/20161226223508227)\n\n**第八步：**单击Commit changes按钮后会自动跳转到我们创建的仓库界面，里面包含了仓库的各种信息，其中master表示这个仓库位于master分之上，进入界面后单击Settings按钮\n![](http://img.blog.csdn.net/20161226224351486)\n\n**第九步：** 在Settings界面中往下滑，滑到GitHub Page模块，可以看到GitHub Page模块中多了一个网址\n![](http://img.blog.csdn.net/20161226224724966)\n\n**第十步：**在浏览器中打开网址后可以看到网页上呈现出的内容就是我们刚刚创建的主题为Cayman的网页\n![](http://img.blog.csdn.net/20161226225252484)\n\n**第十一步：**回到GitHub上并且打开我们刚刚创建的那个仓库，仓库里的文件就是刚刚在浏览器中显示的内容，接下来要做的事情就是修改仓库里的文件，单击Clone or download按钮\n![](http://img.blog.csdn.net/20161226225859038)\n\n**第十二步：**单击复制到剪切板按钮，复制仓库的url\n![](http://img.blog.csdn.net/20161226230341481)\n\n**第十三步：**在下面的操作中需要电脑中安装了git，并且熟悉几个简单的git命令，关于git的安装以及git命令的使用可以参考[从0开始学习 GITHUB 系列之「GIT 速成」](http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/)这篇博客将git介绍的非常通俗易懂，安装好git后，先在电脑中创建一个文件夹用于保存从Github中克隆下来的仓库，我建的文件夹叫做GitProject，在E:\\game路径下，打开命令行进入GitProject文件夹下\n![](http://img.blog.csdn.net/20161226231237026)\n\n**第十四步：**执行`git clone https://github.com/meishaxiaozi/boyaa.git`命令，其中`git clone`表示要克隆一个项目，后面的`https://github.com/meishaxiaozi/boyaa.git`表示项目地址，该地址是由**第十二步**操作获得的，当在最后一行出现了100%表示，远程仓库已经成功的克隆到了本地\n![](http://img.blog.csdn.net/20161226231723810)\n\n**第十五步：**打开GitProject文件夹，可以看到在文件夹中多了一个boyaa文件，该文件正是刚刚在GitHub中创建的仓库\n![](http://img.blog.csdn.net/20161226232212468)\n\n**第十六步：**打开文件，并且将需要上传到GitHub上的网站添加到该文件中\n![](http://img.blog.csdn.net/20161226232503219)\n\n**第十七步：**打开命令行，并且进入boyaa文件夹下，并且执行 `git add .` 命令，此命令表示将需要提交到git中的文件先添加到缓存\n![](http://img.blog.csdn.net/20161226232914298)\n\n**第十八步：**执行 `git commit -m “first commit .”`命令，此命令表示将文件提交到git中，下面显示的都是提交到git中的文件\n![](http://img.blog.csdn.net/20161226233236959)\n\n**第十九步：**执行 `git push origin master` 命令，将文件push到GitHub上的master分支上，当出现下图所示的提示信息时，表示网站已经成功的提交到了GitHub上\n![](http://img.blog.csdn.net/20161226233708442)\n\n**第二十步：**回到Github上的boyaa仓库，可以看到文件已经全部提交上来了\n![](http://img.blog.csdn.net/20161226233941249)\n\n**第二十一步：**再次打开位于Settings下，GitHub Page模块中的网址，可以看到网页变成了我们修改后的页面  \n**网站的网址：**[https://meishaxiaozi.github.io/boyaa/](https://meishaxiaozi.github.io/boyaa/)  \n**网址的格式：**https:// + GitHub的用户名 + .github.io/ + 仓库的名称\n![](http://img.blog.csdn.net/20161226235606553)\n\n## GitHub部署网站简化版\n上面介绍的步骤比较复杂，熟悉Git命令的话可以使用几条简单的Git命令实现部署\n\n**第一步：**在Git Bash中执行下面的命令，创建一个boyaa文件夹\n\n\tmkdir boyaa\n\n**第二步：**将需要部署到GitHub上的文件添加到boyaa文件夹中\n![这里写图片描述](http://img.blog.csdn.net/20170429110653556)\n\n**第三步：**进入boyaa文件夹中\n\n\tcd boyaa \n\n**第四步：**初始化一个本地Git仓库\n\n\tgit init\n\n**第五步：**将需要提交的文件添加到缓存区\n\n\tgit add .\n\n**第六步：**将文件提交到本地仓库\n\n\tgit commit -m \"update some data\"\n\n**第七步：**创建一个gh-pages分支\n\n\tgit branch gh-pages\n\n**第八步：**切换到gh-pages分支，gh-pages分支是一个比较特殊的分支，网页文件提交到gh-pages分支上，可以通过HTTP协议访问gh-pages分支上的网页文件\n\n\tgit checkout gh-pages\n\n**第九步：**为本地仓库关联一个远程仓库，其中远程仓库为上一种方法中的第三步创建的boyaa仓库\n\n\tgit remote add origin https://github.com/meishadevs/boyaa.git\n\n**第十步：**将网页文件提交到远程仓库中的gh-pages分支上\n\n\tgit push origin gh-pages\n\n**第十一步：**访问网页  \n此时可以通过[https://meishadevs.github.io/boyaa](https://meishadevs.github.io/boyaa)访问部署好的网页\n\n**说明：**部署到gh-pages分支上的网页的URL格式为  \n\n\thttps:// + username.github.io/ + GitHub上的仓库名\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/使用GitHub部署网站](http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8GitHub%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/)】","slug":"使用GitHub部署网站","published":1,"updated":"2017-09-22T06:29:07.245Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpmx002638pxyrjw89yn","content":"<p>在上一篇博客中介绍了<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">使用新浪云部署网站</a>这篇博客将介绍另一种部署网站的方式，使用GitHub部署网站。<br><a id=\"more\"></a></p>\n<h2 id=\"两种部署网站的方式比较\"><a href=\"#两种部署网站的方式比较\" class=\"headerlink\" title=\"两种部署网站的方式比较\"></a>两种部署网站的方式比较</h2><p><img src=\"http://img.blog.csdn.net/20161227094654160\" alt=\"\"></p>\n<p>部署网站之前，先要有一个GitHub账号，熟悉一些Git命令，注册GitHub账号和使用git命令可以参考下面的文档，这个文档中介绍的非常详细，我也不做过多的介绍<br><strong>从0开始学习GitHub：</strong><a href=\"http://pan.baidu.com/s/1hsn57YO\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1hsn57YO</a></p>\n<p>注册好GitHub账号并且完善用户信息后可以得到一个下图所示的界面，下图是我的GitHub界面，其中界面中的信息介绍可以参考<a href=\"http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/\" target=\"_blank\" rel=\"external\">从0开始学习 GITHUB 系列之「加入 GITHUB」</a>，这篇博客对GitHub界面的信息介绍的非常详细<br><img src=\"http://img.blog.csdn.net/20161226214844895\" alt=\"\"></p>\n<h2 id=\"下面进入正题，使用GitHub部署网站\"><a href=\"#下面进入正题，使用GitHub部署网站\" class=\"headerlink\" title=\"下面进入正题，使用GitHub部署网站\"></a>下面进入正题，使用GitHub部署网站</h2><p><strong>第一步：</strong>单击Repositories，其中Repositories在GitHub上表示的是仓库，在GitHub上每个项目都存放在仓库里，一个仓库保存一个项目<br><img src=\"http://img.blog.csdn.net/20161226215559693\" alt=\"\"></p>\n<p><strong>第二步：</strong>单击New按钮<br><img src=\"http://img.blog.csdn.net/20161226220437338\" alt=\"\"></p>\n<p><strong>第三步：</strong>单击根据图中的提示填写信息，信息填写完成后单击Create respository按钮创建仓库<br><img src=\"http://img.blog.csdn.net/20161226221833076\" alt=\"\"></p>\n<p><strong>第四步：</strong>单击创建好仓库后会自动跳转到下图所示的界面，在界面中单击Settings<br><img src=\"http://img.blog.csdn.net/20161226222230082\" alt=\"\"></p>\n<p><strong>第五步：</strong>进入设置界面后一直往下，找到GitHub Page,并且单击GitHub Page模块中的Choose them按钮创建一个网站的主题<br><img src=\"http://img.blog.csdn.net/20161226222855256\" alt=\"\"></p>\n<p><strong>第六步：</strong>选择Cayman主题，然后单击select theme按钮<br><img src=\"http://img.blog.csdn.net/20161226223107905\" alt=\"\"></p>\n<p><strong>第七步：</strong>单击Commit changes按钮<br><img src=\"http://img.blog.csdn.net/20161226223508227\" alt=\"\"></p>\n<p><strong>第八步：</strong>单击Commit changes按钮后会自动跳转到我们创建的仓库界面，里面包含了仓库的各种信息，其中master表示这个仓库位于master分之上，进入界面后单击Settings按钮<br><img src=\"http://img.blog.csdn.net/20161226224351486\" alt=\"\"></p>\n<p><strong>第九步：</strong> 在Settings界面中往下滑，滑到GitHub Page模块，可以看到GitHub Page模块中多了一个网址<br><img src=\"http://img.blog.csdn.net/20161226224724966\" alt=\"\"></p>\n<p><strong>第十步：</strong>在浏览器中打开网址后可以看到网页上呈现出的内容就是我们刚刚创建的主题为Cayman的网页<br><img src=\"http://img.blog.csdn.net/20161226225252484\" alt=\"\"></p>\n<p><strong>第十一步：</strong>回到GitHub上并且打开我们刚刚创建的那个仓库，仓库里的文件就是刚刚在浏览器中显示的内容，接下来要做的事情就是修改仓库里的文件，单击Clone or download按钮<br><img src=\"http://img.blog.csdn.net/20161226225859038\" alt=\"\"></p>\n<p><strong>第十二步：</strong>单击复制到剪切板按钮，复制仓库的url<br><img src=\"http://img.blog.csdn.net/20161226230341481\" alt=\"\"></p>\n<p><strong>第十三步：</strong>在下面的操作中需要电脑中安装了git，并且熟悉几个简单的git命令，关于git的安装以及git命令的使用可以参考<a href=\"http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/\" target=\"_blank\" rel=\"external\">从0开始学习 GITHUB 系列之「GIT 速成」</a>这篇博客将git介绍的非常通俗易懂，安装好git后，先在电脑中创建一个文件夹用于保存从Github中克隆下来的仓库，我建的文件夹叫做GitProject，在E:\\game路径下，打开命令行进入GitProject文件夹下<br><img src=\"http://img.blog.csdn.net/20161226231237026\" alt=\"\"></p>\n<p><strong>第十四步：</strong>执行<code>git clone https://github.com/meishaxiaozi/boyaa.git</code>命令，其中<code>git clone</code>表示要克隆一个项目，后面的<code>https://github.com/meishaxiaozi/boyaa.git</code>表示项目地址，该地址是由<strong>第十二步</strong>操作获得的，当在最后一行出现了100%表示，远程仓库已经成功的克隆到了本地<br><img src=\"http://img.blog.csdn.net/20161226231723810\" alt=\"\"></p>\n<p><strong>第十五步：</strong>打开GitProject文件夹，可以看到在文件夹中多了一个boyaa文件，该文件正是刚刚在GitHub中创建的仓库<br><img src=\"http://img.blog.csdn.net/20161226232212468\" alt=\"\"></p>\n<p><strong>第十六步：</strong>打开文件，并且将需要上传到GitHub上的网站添加到该文件中<br><img src=\"http://img.blog.csdn.net/20161226232503219\" alt=\"\"></p>\n<p><strong>第十七步：</strong>打开命令行，并且进入boyaa文件夹下，并且执行 <code>git add .</code> 命令，此命令表示将需要提交到git中的文件先添加到缓存<br><img src=\"http://img.blog.csdn.net/20161226232914298\" alt=\"\"></p>\n<p><strong>第十八步：</strong>执行 <code>git commit -m “first commit .”</code>命令，此命令表示将文件提交到git中，下面显示的都是提交到git中的文件<br><img src=\"http://img.blog.csdn.net/20161226233236959\" alt=\"\"></p>\n<p><strong>第十九步：</strong>执行 <code>git push origin master</code> 命令，将文件push到GitHub上的master分支上，当出现下图所示的提示信息时，表示网站已经成功的提交到了GitHub上<br><img src=\"http://img.blog.csdn.net/20161226233708442\" alt=\"\"></p>\n<p><strong>第二十步：</strong>回到Github上的boyaa仓库，可以看到文件已经全部提交上来了<br><img src=\"http://img.blog.csdn.net/20161226233941249\" alt=\"\"></p>\n<p><strong>第二十一步：</strong>再次打开位于Settings下，GitHub Page模块中的网址，可以看到网页变成了我们修改后的页面<br><strong>网站的网址：</strong><a href=\"https://meishaxiaozi.github.io/boyaa/\" target=\"_blank\" rel=\"external\">https://meishaxiaozi.github.io/boyaa/</a><br><strong>网址的格式：</strong>https:// + GitHub的用户名 + .github.io/ + 仓库的名称<br><img src=\"http://img.blog.csdn.net/20161226235606553\" alt=\"\"></p>\n<h2 id=\"GitHub部署网站简化版\"><a href=\"#GitHub部署网站简化版\" class=\"headerlink\" title=\"GitHub部署网站简化版\"></a>GitHub部署网站简化版</h2><p>上面介绍的步骤比较复杂，熟悉Git命令的话可以使用几条简单的Git命令实现部署</p>\n<p><strong>第一步：</strong>在Git Bash中执行下面的命令，创建一个boyaa文件夹</p>\n<pre><code>mkdir boyaa\n</code></pre><p><strong>第二步：</strong>将需要部署到GitHub上的文件添加到boyaa文件夹中<br><img src=\"http://img.blog.csdn.net/20170429110653556\" alt=\"这里写图片描述\"></p>\n<p><strong>第三步：</strong>进入boyaa文件夹中</p>\n<pre><code>cd boyaa \n</code></pre><p><strong>第四步：</strong>初始化一个本地Git仓库</p>\n<pre><code>git init\n</code></pre><p><strong>第五步：</strong>将需要提交的文件添加到缓存区</p>\n<pre><code>git add .\n</code></pre><p><strong>第六步：</strong>将文件提交到本地仓库</p>\n<pre><code>git commit -m &quot;update some data&quot;\n</code></pre><p><strong>第七步：</strong>创建一个gh-pages分支</p>\n<pre><code>git branch gh-pages\n</code></pre><p><strong>第八步：</strong>切换到gh-pages分支，gh-pages分支是一个比较特殊的分支，网页文件提交到gh-pages分支上，可以通过HTTP协议访问gh-pages分支上的网页文件</p>\n<pre><code>git checkout gh-pages\n</code></pre><p><strong>第九步：</strong>为本地仓库关联一个远程仓库，其中远程仓库为上一种方法中的第三步创建的boyaa仓库</p>\n<pre><code>git remote add origin https://github.com/meishadevs/boyaa.git\n</code></pre><p><strong>第十步：</strong>将网页文件提交到远程仓库中的gh-pages分支上</p>\n<pre><code>git push origin gh-pages\n</code></pre><p><strong>第十一步：</strong>访问网页<br>此时可以通过<a href=\"https://meishadevs.github.io/boyaa\" target=\"_blank\" rel=\"external\">https://meishadevs.github.io/boyaa</a>访问部署好的网页</p>\n<p><strong>说明：</strong>部署到gh-pages分支上的网页的URL格式为  </p>\n<pre><code>https:// + username.github.io/ + GitHub上的仓库名\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8GitHub%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">http://meishadevs.com/blog/使用GitHub部署网站</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>在上一篇博客中介绍了<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8%E6%96%B0%E6%B5%AA%E4%BA%91%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">使用新浪云部署网站</a>这篇博客将介绍另一种部署网站的方式，使用GitHub部署网站。<br>","more":"</p>\n<h2 id=\"两种部署网站的方式比较\"><a href=\"#两种部署网站的方式比较\" class=\"headerlink\" title=\"两种部署网站的方式比较\"></a>两种部署网站的方式比较</h2><p><img src=\"http://img.blog.csdn.net/20161227094654160\" alt=\"\"></p>\n<p>部署网站之前，先要有一个GitHub账号，熟悉一些Git命令，注册GitHub账号和使用git命令可以参考下面的文档，这个文档中介绍的非常详细，我也不做过多的介绍<br><strong>从0开始学习GitHub：</strong><a href=\"http://pan.baidu.com/s/1hsn57YO\">http://pan.baidu.com/s/1hsn57YO</a></p>\n<p>注册好GitHub账号并且完善用户信息后可以得到一个下图所示的界面，下图是我的GitHub界面，其中界面中的信息介绍可以参考<a href=\"http://stormzhang.com/github/2016/05/26/learn-github-from-zero2/\">从0开始学习 GITHUB 系列之「加入 GITHUB」</a>，这篇博客对GitHub界面的信息介绍的非常详细<br><img src=\"http://img.blog.csdn.net/20161226214844895\" alt=\"\"></p>\n<h2 id=\"下面进入正题，使用GitHub部署网站\"><a href=\"#下面进入正题，使用GitHub部署网站\" class=\"headerlink\" title=\"下面进入正题，使用GitHub部署网站\"></a>下面进入正题，使用GitHub部署网站</h2><p><strong>第一步：</strong>单击Repositories，其中Repositories在GitHub上表示的是仓库，在GitHub上每个项目都存放在仓库里，一个仓库保存一个项目<br><img src=\"http://img.blog.csdn.net/20161226215559693\" alt=\"\"></p>\n<p><strong>第二步：</strong>单击New按钮<br><img src=\"http://img.blog.csdn.net/20161226220437338\" alt=\"\"></p>\n<p><strong>第三步：</strong>单击根据图中的提示填写信息，信息填写完成后单击Create respository按钮创建仓库<br><img src=\"http://img.blog.csdn.net/20161226221833076\" alt=\"\"></p>\n<p><strong>第四步：</strong>单击创建好仓库后会自动跳转到下图所示的界面，在界面中单击Settings<br><img src=\"http://img.blog.csdn.net/20161226222230082\" alt=\"\"></p>\n<p><strong>第五步：</strong>进入设置界面后一直往下，找到GitHub Page,并且单击GitHub Page模块中的Choose them按钮创建一个网站的主题<br><img src=\"http://img.blog.csdn.net/20161226222855256\" alt=\"\"></p>\n<p><strong>第六步：</strong>选择Cayman主题，然后单击select theme按钮<br><img src=\"http://img.blog.csdn.net/20161226223107905\" alt=\"\"></p>\n<p><strong>第七步：</strong>单击Commit changes按钮<br><img src=\"http://img.blog.csdn.net/20161226223508227\" alt=\"\"></p>\n<p><strong>第八步：</strong>单击Commit changes按钮后会自动跳转到我们创建的仓库界面，里面包含了仓库的各种信息，其中master表示这个仓库位于master分之上，进入界面后单击Settings按钮<br><img src=\"http://img.blog.csdn.net/20161226224351486\" alt=\"\"></p>\n<p><strong>第九步：</strong> 在Settings界面中往下滑，滑到GitHub Page模块，可以看到GitHub Page模块中多了一个网址<br><img src=\"http://img.blog.csdn.net/20161226224724966\" alt=\"\"></p>\n<p><strong>第十步：</strong>在浏览器中打开网址后可以看到网页上呈现出的内容就是我们刚刚创建的主题为Cayman的网页<br><img src=\"http://img.blog.csdn.net/20161226225252484\" alt=\"\"></p>\n<p><strong>第十一步：</strong>回到GitHub上并且打开我们刚刚创建的那个仓库，仓库里的文件就是刚刚在浏览器中显示的内容，接下来要做的事情就是修改仓库里的文件，单击Clone or download按钮<br><img src=\"http://img.blog.csdn.net/20161226225859038\" alt=\"\"></p>\n<p><strong>第十二步：</strong>单击复制到剪切板按钮，复制仓库的url<br><img src=\"http://img.blog.csdn.net/20161226230341481\" alt=\"\"></p>\n<p><strong>第十三步：</strong>在下面的操作中需要电脑中安装了git，并且熟悉几个简单的git命令，关于git的安装以及git命令的使用可以参考<a href=\"http://stormzhang.com/github/2016/05/30/learn-github-from-zero3/\">从0开始学习 GITHUB 系列之「GIT 速成」</a>这篇博客将git介绍的非常通俗易懂，安装好git后，先在电脑中创建一个文件夹用于保存从Github中克隆下来的仓库，我建的文件夹叫做GitProject，在E:\\game路径下，打开命令行进入GitProject文件夹下<br><img src=\"http://img.blog.csdn.net/20161226231237026\" alt=\"\"></p>\n<p><strong>第十四步：</strong>执行<code>git clone https://github.com/meishaxiaozi/boyaa.git</code>命令，其中<code>git clone</code>表示要克隆一个项目，后面的<code>https://github.com/meishaxiaozi/boyaa.git</code>表示项目地址，该地址是由<strong>第十二步</strong>操作获得的，当在最后一行出现了100%表示，远程仓库已经成功的克隆到了本地<br><img src=\"http://img.blog.csdn.net/20161226231723810\" alt=\"\"></p>\n<p><strong>第十五步：</strong>打开GitProject文件夹，可以看到在文件夹中多了一个boyaa文件，该文件正是刚刚在GitHub中创建的仓库<br><img src=\"http://img.blog.csdn.net/20161226232212468\" alt=\"\"></p>\n<p><strong>第十六步：</strong>打开文件，并且将需要上传到GitHub上的网站添加到该文件中<br><img src=\"http://img.blog.csdn.net/20161226232503219\" alt=\"\"></p>\n<p><strong>第十七步：</strong>打开命令行，并且进入boyaa文件夹下，并且执行 <code>git add .</code> 命令，此命令表示将需要提交到git中的文件先添加到缓存<br><img src=\"http://img.blog.csdn.net/20161226232914298\" alt=\"\"></p>\n<p><strong>第十八步：</strong>执行 <code>git commit -m “first commit .”</code>命令，此命令表示将文件提交到git中，下面显示的都是提交到git中的文件<br><img src=\"http://img.blog.csdn.net/20161226233236959\" alt=\"\"></p>\n<p><strong>第十九步：</strong>执行 <code>git push origin master</code> 命令，将文件push到GitHub上的master分支上，当出现下图所示的提示信息时，表示网站已经成功的提交到了GitHub上<br><img src=\"http://img.blog.csdn.net/20161226233708442\" alt=\"\"></p>\n<p><strong>第二十步：</strong>回到Github上的boyaa仓库，可以看到文件已经全部提交上来了<br><img src=\"http://img.blog.csdn.net/20161226233941249\" alt=\"\"></p>\n<p><strong>第二十一步：</strong>再次打开位于Settings下，GitHub Page模块中的网址，可以看到网页变成了我们修改后的页面<br><strong>网站的网址：</strong><a href=\"https://meishaxiaozi.github.io/boyaa/\">https://meishaxiaozi.github.io/boyaa/</a><br><strong>网址的格式：</strong>https:// + GitHub的用户名 + .github.io/ + 仓库的名称<br><img src=\"http://img.blog.csdn.net/20161226235606553\" alt=\"\"></p>\n<h2 id=\"GitHub部署网站简化版\"><a href=\"#GitHub部署网站简化版\" class=\"headerlink\" title=\"GitHub部署网站简化版\"></a>GitHub部署网站简化版</h2><p>上面介绍的步骤比较复杂，熟悉Git命令的话可以使用几条简单的Git命令实现部署</p>\n<p><strong>第一步：</strong>在Git Bash中执行下面的命令，创建一个boyaa文件夹</p>\n<pre><code>mkdir boyaa\n</code></pre><p><strong>第二步：</strong>将需要部署到GitHub上的文件添加到boyaa文件夹中<br><img src=\"http://img.blog.csdn.net/20170429110653556\" alt=\"这里写图片描述\"></p>\n<p><strong>第三步：</strong>进入boyaa文件夹中</p>\n<pre><code>cd boyaa \n</code></pre><p><strong>第四步：</strong>初始化一个本地Git仓库</p>\n<pre><code>git init\n</code></pre><p><strong>第五步：</strong>将需要提交的文件添加到缓存区</p>\n<pre><code>git add .\n</code></pre><p><strong>第六步：</strong>将文件提交到本地仓库</p>\n<pre><code>git commit -m &quot;update some data&quot;\n</code></pre><p><strong>第七步：</strong>创建一个gh-pages分支</p>\n<pre><code>git branch gh-pages\n</code></pre><p><strong>第八步：</strong>切换到gh-pages分支，gh-pages分支是一个比较特殊的分支，网页文件提交到gh-pages分支上，可以通过HTTP协议访问gh-pages分支上的网页文件</p>\n<pre><code>git checkout gh-pages\n</code></pre><p><strong>第九步：</strong>为本地仓库关联一个远程仓库，其中远程仓库为上一种方法中的第三步创建的boyaa仓库</p>\n<pre><code>git remote add origin https://github.com/meishadevs/boyaa.git\n</code></pre><p><strong>第十步：</strong>将网页文件提交到远程仓库中的gh-pages分支上</p>\n<pre><code>git push origin gh-pages\n</code></pre><p><strong>第十一步：</strong>访问网页<br>此时可以通过<a href=\"https://meishadevs.github.io/boyaa\">https://meishadevs.github.io/boyaa</a>访问部署好的网页</p>\n<p><strong>说明：</strong>部署到gh-pages分支上的网页的URL格式为  </p>\n<pre><code>https:// + username.github.io/ + GitHub上的仓库名\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E4%BD%BF%E7%94%A8GitHub%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99/\">http://meishadevs.com/blog/使用GitHub部署网站</a>】</p>\n</blockquote>"},{"title":"移动Web学习笔记","date":"2017-08-31T02:23:03.000Z","_content":"\n整理的一些移动Web相关的知识点\n<!--more-->\n\n**1.** `<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">`  \n**解释：** 所有运行在移动端浏览器中的网页都必须添加这个标签，其中name='viewport'表示视口、width=device-width表示网页的宽度等于浏览器窗口的宽度、initial-scale=1.0表示网页的初始化缩放比例其中1.0表示不缩放、maximum-scale=1.0表示网页的最大缩放比例、minimum-scale=1.0表示网页的最小缩放比例、user-scalable=no表示不允许用户自己缩放\n\n**2. -webkit-text-size-adjust: 100%**  \n**解释：**在 Chrome 浏览器中只能设置大于或等于 12px 的字体大小，当设置了小于 12px 的字体大小时，浏览器按照 12px 的字体大小渲染字体，而设置了 **-webkit-text-size-adjust** 属性后浏览器可以渲染 12px 以下的字体大小\n\n**3. direction: ltr**  \n**解释：**将文本的显示方向设置为从右往左显示\n\n**4.** `<meta name=\"format-detection\" content=\"telephone=no\">`  \n**解释：**表示HTML代码中的电话号码不应显示为超文本链接\n\n**5.** `<meta name=\"google-site-verification\" content=\"\">`  \n**解释：**将自己网站添加进google网站管理，有利于google的收录\n\n**6. user-select: none**  \n**解释：**不允许用户选择文本\n\n**7. -webkit-tap-highlight-color: transparent**  \n**解释：**这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景，设置 **-webkit-tap-highlight-color: transparent**时就不会产生这个背景\n\n**8. lang=\"zh-cmn-Hans\"**  \n**解释：**语种名称代码，这个代码表示网站使用的是简体普通话，详细介绍可以参考[http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html](http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html)\n\n**9. rel=\"apple-touch-icon\"**  \n**解释：**用于设置Apple iPhone, iPad上的网页图标，当将使用了rel=\"apple-touch-icon\"属性的网站添加到iPhone或者iPad上的收藏夹里的时候，收藏夹上会显示这个图标，当没有设置rel=\"apple-touch-icon\"属性的时候，收藏夹上显示整张网页的截图\n\n**10. 禁止用户选择文本的CSS样式**\n\t\n\t -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n**11. 禁止单击鼠标左键并移动鼠标时拖拽图片方法一**\n\n\tfunction imgdragstart() {\n        return false;\n    }\n\n    //获得所有图片\n    var imgs = document.getElementsByTagName('img');\n\n    //遍历图片\n    for(var i = 0; i < imgs.length; i++) {\n\n        //禁止单击鼠标左键并移动鼠标时拖拽图片\n        imgs[i].ondragstart = imgdragstart;\n    }\n\n**12. 禁止单击鼠标左键并移动鼠标时拖拽图片方法二**\n\t\n\t<img src=\"bg1.png\" draggable=\"false\">\n\t<img src=\"bg2.png\" draggable=\"false\">\n\n**13. Webstorm代码格式化的快捷键**\n\t\n\twindows 下 webstorm 格式化代码的快键键 Ctrl+Alt+l\n\n**14. 在IOS上实现模糊效果的代码**\n\n\t-webkit-backdrop-filter: blur(10px);\n    backdrop-filter: blur(10px);\n\n**15. 设置弹性盒的初始长度**\n\n\tflex-basis\n\n**16.** `<meta name=\"screen-orientation\" content=\"portrait\">`  \n**解释：**网页在UC浏览器上强制使用竖屏显示\n\n**17.** `<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">`  \n**解释：**是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏\n\n**18.** `<meta name=\"full-screen\" content=\"yes\">`  \n**解释：**在UC浏览器中强制使用全屏展示网页\n\n**19.** `<meta name=\"x5-fullscreen\" content=\"true\">`\n**解释：**在QQ浏览器中强制使用全屏显示网页\n\n**20.** `spellcheck=\"false\"`  \n**解释：**给类似于textarea、input标签添加`spellcheck=\"false\"s属性后当向标签中输入的单词拼写错误，不会产生红色的波浪线\n\n**21.** `-webkit-appearance: none`  \n**解释：**清除浏览器的默认样式  \n\n**22.** `<input type=\"search\">`  \n***解释：**使用`<input type=\"search\">`制作搜索框，当在手机上点击搜索框时会弹出一个软键盘，软键盘上的enter按钮会以搜索按钮的形式显示 \n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/移动Web学习笔记/](http://meishadevs.com/blog/移动Web学习笔记/)】","source":"_posts/移动Web学习笔记.md","raw":"---\ntitle: 移动Web学习笔记\ncategories:\n  - 移动Web\ntags:\n  - 移动Web\ndate: 2017-08-31 10:23:03\n---\n\n整理的一些移动Web相关的知识点\n<!--more-->\n\n**1.** `<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">`  \n**解释：** 所有运行在移动端浏览器中的网页都必须添加这个标签，其中name='viewport'表示视口、width=device-width表示网页的宽度等于浏览器窗口的宽度、initial-scale=1.0表示网页的初始化缩放比例其中1.0表示不缩放、maximum-scale=1.0表示网页的最大缩放比例、minimum-scale=1.0表示网页的最小缩放比例、user-scalable=no表示不允许用户自己缩放\n\n**2. -webkit-text-size-adjust: 100%**  \n**解释：**在 Chrome 浏览器中只能设置大于或等于 12px 的字体大小，当设置了小于 12px 的字体大小时，浏览器按照 12px 的字体大小渲染字体，而设置了 **-webkit-text-size-adjust** 属性后浏览器可以渲染 12px 以下的字体大小\n\n**3. direction: ltr**  \n**解释：**将文本的显示方向设置为从右往左显示\n\n**4.** `<meta name=\"format-detection\" content=\"telephone=no\">`  \n**解释：**表示HTML代码中的电话号码不应显示为超文本链接\n\n**5.** `<meta name=\"google-site-verification\" content=\"\">`  \n**解释：**将自己网站添加进google网站管理，有利于google的收录\n\n**6. user-select: none**  \n**解释：**不允许用户选择文本\n\n**7. -webkit-tap-highlight-color: transparent**  \n**解释：**这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景，设置 **-webkit-tap-highlight-color: transparent**时就不会产生这个背景\n\n**8. lang=\"zh-cmn-Hans\"**  \n**解释：**语种名称代码，这个代码表示网站使用的是简体普通话，详细介绍可以参考[http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html](http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html)\n\n**9. rel=\"apple-touch-icon\"**  \n**解释：**用于设置Apple iPhone, iPad上的网页图标，当将使用了rel=\"apple-touch-icon\"属性的网站添加到iPhone或者iPad上的收藏夹里的时候，收藏夹上会显示这个图标，当没有设置rel=\"apple-touch-icon\"属性的时候，收藏夹上显示整张网页的截图\n\n**10. 禁止用户选择文本的CSS样式**\n\t\n\t -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n**11. 禁止单击鼠标左键并移动鼠标时拖拽图片方法一**\n\n\tfunction imgdragstart() {\n        return false;\n    }\n\n    //获得所有图片\n    var imgs = document.getElementsByTagName('img');\n\n    //遍历图片\n    for(var i = 0; i < imgs.length; i++) {\n\n        //禁止单击鼠标左键并移动鼠标时拖拽图片\n        imgs[i].ondragstart = imgdragstart;\n    }\n\n**12. 禁止单击鼠标左键并移动鼠标时拖拽图片方法二**\n\t\n\t<img src=\"bg1.png\" draggable=\"false\">\n\t<img src=\"bg2.png\" draggable=\"false\">\n\n**13. Webstorm代码格式化的快捷键**\n\t\n\twindows 下 webstorm 格式化代码的快键键 Ctrl+Alt+l\n\n**14. 在IOS上实现模糊效果的代码**\n\n\t-webkit-backdrop-filter: blur(10px);\n    backdrop-filter: blur(10px);\n\n**15. 设置弹性盒的初始长度**\n\n\tflex-basis\n\n**16.** `<meta name=\"screen-orientation\" content=\"portrait\">`  \n**解释：**网页在UC浏览器上强制使用竖屏显示\n\n**17.** `<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">`  \n**解释：**是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏\n\n**18.** `<meta name=\"full-screen\" content=\"yes\">`  \n**解释：**在UC浏览器中强制使用全屏展示网页\n\n**19.** `<meta name=\"x5-fullscreen\" content=\"true\">`\n**解释：**在QQ浏览器中强制使用全屏显示网页\n\n**20.** `spellcheck=\"false\"`  \n**解释：**给类似于textarea、input标签添加`spellcheck=\"false\"s属性后当向标签中输入的单词拼写错误，不会产生红色的波浪线\n\n**21.** `-webkit-appearance: none`  \n**解释：**清除浏览器的默认样式  \n\n**22.** `<input type=\"search\">`  \n***解释：**使用`<input type=\"search\">`制作搜索框，当在手机上点击搜索框时会弹出一个软键盘，软键盘上的enter按钮会以搜索按钮的形式显示 \n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/移动Web学习笔记/](http://meishadevs.com/blog/移动Web学习笔记/)】","slug":"移动Web学习笔记","published":1,"updated":"2017-09-07T08:40:07.818Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpmz002738pxmka31lkf","content":"<p>整理的一些移动Web相关的知识点<br><a id=\"more\"></a></p>\n<p><strong>1.</strong> <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no&quot;&gt;</code><br><strong>解释：</strong> 所有运行在移动端浏览器中的网页都必须添加这个标签，其中name=’viewport’表示视口、width=device-width表示网页的宽度等于浏览器窗口的宽度、initial-scale=1.0表示网页的初始化缩放比例其中1.0表示不缩放、maximum-scale=1.0表示网页的最大缩放比例、minimum-scale=1.0表示网页的最小缩放比例、user-scalable=no表示不允许用户自己缩放</p>\n<p><strong>2. -webkit-text-size-adjust: 100%</strong><br><strong>解释：</strong>在 Chrome 浏览器中只能设置大于或等于 12px 的字体大小，当设置了小于 12px 的字体大小时，浏览器按照 12px 的字体大小渲染字体，而设置了 <strong>-webkit-text-size-adjust</strong> 属性后浏览器可以渲染 12px 以下的字体大小</p>\n<p><strong>3. direction: ltr</strong><br><strong>解释：</strong>将文本的显示方向设置为从右往左显示</p>\n<p><strong>4.</strong> <code>&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</code><br><strong>解释：</strong>表示HTML代码中的电话号码不应显示为超文本链接</p>\n<p><strong>5.</strong> <code>&lt;meta name=&quot;google-site-verification&quot; content=&quot;&quot;&gt;</code><br><strong>解释：</strong>将自己网站添加进google网站管理，有利于google的收录</p>\n<p><strong>6. user-select: none</strong><br><strong>解释：</strong>不允许用户选择文本</p>\n<p><strong>7. -webkit-tap-highlight-color: transparent</strong><br><strong>解释：</strong>这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景，设置 <strong>-webkit-tap-highlight-color: transparent</strong>时就不会产生这个背景</p>\n<p><strong>8. lang=”zh-cmn-Hans”</strong><br><strong>解释：</strong>语种名称代码，这个代码表示网站使用的是简体普通话，详细介绍可以参考<a href=\"http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html\" target=\"_blank\" rel=\"external\">http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html</a></p>\n<p><strong>9. rel=”apple-touch-icon”</strong><br><strong>解释：</strong>用于设置Apple iPhone, iPad上的网页图标，当将使用了rel=”apple-touch-icon”属性的网站添加到iPhone或者iPad上的收藏夹里的时候，收藏夹上会显示这个图标，当没有设置rel=”apple-touch-icon”属性的时候，收藏夹上显示整张网页的截图</p>\n<p><strong>10. 禁止用户选择文本的CSS样式</strong></p>\n<pre><code> -moz-user-select: -moz-none;\n-khtml-user-select: none;\n-webkit-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n</code></pre><p><strong>11. 禁止单击鼠标左键并移动鼠标时拖拽图片方法一</strong></p>\n<pre><code>function imgdragstart() {\n    return false;\n}\n\n//获得所有图片\nvar imgs = document.getElementsByTagName(&apos;img&apos;);\n\n//遍历图片\nfor(var i = 0; i &lt; imgs.length; i++) {\n\n    //禁止单击鼠标左键并移动鼠标时拖拽图片\n    imgs[i].ondragstart = imgdragstart;\n}\n</code></pre><p><strong>12. 禁止单击鼠标左键并移动鼠标时拖拽图片方法二</strong></p>\n<pre><code>&lt;img src=&quot;bg1.png&quot; draggable=&quot;false&quot;&gt;\n&lt;img src=&quot;bg2.png&quot; draggable=&quot;false&quot;&gt;\n</code></pre><p><strong>13. Webstorm代码格式化的快捷键</strong></p>\n<pre><code>windows 下 webstorm 格式化代码的快键键 Ctrl+Alt+l\n</code></pre><p><strong>14. 在IOS上实现模糊效果的代码</strong></p>\n<pre><code>-webkit-backdrop-filter: blur(10px);\nbackdrop-filter: blur(10px);\n</code></pre><p><strong>15. 设置弹性盒的初始长度</strong></p>\n<pre><code>flex-basis\n</code></pre><p><strong>16.</strong> <code>&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;</code><br><strong>解释：</strong>网页在UC浏览器上强制使用竖屏显示</p>\n<p><strong>17.</strong> <code>&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏</p>\n<p><strong>18.</strong> <code>&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>在UC浏览器中强制使用全屏展示网页</p>\n<p><strong>19.</strong> <code>&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</code><br><strong>解释：</strong>在QQ浏览器中强制使用全屏显示网页</p>\n<p><strong>20.</strong> <code>spellcheck=&quot;false&quot;</code><br><strong>解释：</strong>给类似于textarea、input标签添加`spellcheck=”false”s属性后当向标签中输入的单词拼写错误，不会产生红色的波浪线</p>\n<p><strong>21.</strong> <code>-webkit-appearance: none</code><br><strong>解释：</strong>清除浏览器的默认样式  </p>\n<p><strong>22.</strong> <code>&lt;input type=&quot;search&quot;&gt;</code><br><strong>*解释：</strong>使用<code>&lt;input type=&quot;search&quot;&gt;</code>制作搜索框，当在手机上点击搜索框时会弹出一个软键盘，软键盘上的enter按钮会以搜索按钮的形式显示 </p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/移动Web学习笔记/\">http://meishadevs.com/blog/移动Web学习笔记/</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>整理的一些移动Web相关的知识点<br>","more":"</p>\n<p><strong>1.</strong> <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no&quot;&gt;</code><br><strong>解释：</strong> 所有运行在移动端浏览器中的网页都必须添加这个标签，其中name=’viewport’表示视口、width=device-width表示网页的宽度等于浏览器窗口的宽度、initial-scale=1.0表示网页的初始化缩放比例其中1.0表示不缩放、maximum-scale=1.0表示网页的最大缩放比例、minimum-scale=1.0表示网页的最小缩放比例、user-scalable=no表示不允许用户自己缩放</p>\n<p><strong>2. -webkit-text-size-adjust: 100%</strong><br><strong>解释：</strong>在 Chrome 浏览器中只能设置大于或等于 12px 的字体大小，当设置了小于 12px 的字体大小时，浏览器按照 12px 的字体大小渲染字体，而设置了 <strong>-webkit-text-size-adjust</strong> 属性后浏览器可以渲染 12px 以下的字体大小</p>\n<p><strong>3. direction: ltr</strong><br><strong>解释：</strong>将文本的显示方向设置为从右往左显示</p>\n<p><strong>4.</strong> <code>&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</code><br><strong>解释：</strong>表示HTML代码中的电话号码不应显示为超文本链接</p>\n<p><strong>5.</strong> <code>&lt;meta name=&quot;google-site-verification&quot; content=&quot;&quot;&gt;</code><br><strong>解释：</strong>将自己网站添加进google网站管理，有利于google的收录</p>\n<p><strong>6. user-select: none</strong><br><strong>解释：</strong>不允许用户选择文本</p>\n<p><strong>7. -webkit-tap-highlight-color: transparent</strong><br><strong>解释：</strong>这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景，设置 <strong>-webkit-tap-highlight-color: transparent</strong>时就不会产生这个背景</p>\n<p><strong>8. lang=”zh-cmn-Hans”</strong><br><strong>解释：</strong>语种名称代码，这个代码表示网站使用的是简体普通话，详细介绍可以参考<a href=\"http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html\">http://www.ruanyifeng.com/blog/2008/02/codes_for_language_names.html</a></p>\n<p><strong>9. rel=”apple-touch-icon”</strong><br><strong>解释：</strong>用于设置Apple iPhone, iPad上的网页图标，当将使用了rel=”apple-touch-icon”属性的网站添加到iPhone或者iPad上的收藏夹里的时候，收藏夹上会显示这个图标，当没有设置rel=”apple-touch-icon”属性的时候，收藏夹上显示整张网页的截图</p>\n<p><strong>10. 禁止用户选择文本的CSS样式</strong></p>\n<pre><code> -moz-user-select: -moz-none;\n-khtml-user-select: none;\n-webkit-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n</code></pre><p><strong>11. 禁止单击鼠标左键并移动鼠标时拖拽图片方法一</strong></p>\n<pre><code>function imgdragstart() {\n    return false;\n}\n\n//获得所有图片\nvar imgs = document.getElementsByTagName(&apos;img&apos;);\n\n//遍历图片\nfor(var i = 0; i &lt; imgs.length; i++) {\n\n    //禁止单击鼠标左键并移动鼠标时拖拽图片\n    imgs[i].ondragstart = imgdragstart;\n}\n</code></pre><p><strong>12. 禁止单击鼠标左键并移动鼠标时拖拽图片方法二</strong></p>\n<pre><code>&lt;img src=&quot;bg1.png&quot; draggable=&quot;false&quot;&gt;\n&lt;img src=&quot;bg2.png&quot; draggable=&quot;false&quot;&gt;\n</code></pre><p><strong>13. Webstorm代码格式化的快捷键</strong></p>\n<pre><code>windows 下 webstorm 格式化代码的快键键 Ctrl+Alt+l\n</code></pre><p><strong>14. 在IOS上实现模糊效果的代码</strong></p>\n<pre><code>-webkit-backdrop-filter: blur(10px);\nbackdrop-filter: blur(10px);\n</code></pre><p><strong>15. 设置弹性盒的初始长度</strong></p>\n<pre><code>flex-basis\n</code></pre><p><strong>16.</strong> <code>&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;</code><br><strong>解释：</strong>网页在UC浏览器上强制使用竖屏显示</p>\n<p><strong>17.</strong> <code>&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏</p>\n<p><strong>18.</strong> <code>&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</code><br><strong>解释：</strong>在UC浏览器中强制使用全屏展示网页</p>\n<p><strong>19.</strong> <code>&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</code><br><strong>解释：</strong>在QQ浏览器中强制使用全屏显示网页</p>\n<p><strong>20.</strong> <code>spellcheck=&quot;false&quot;</code><br><strong>解释：</strong>给类似于textarea、input标签添加`spellcheck=”false”s属性后当向标签中输入的单词拼写错误，不会产生红色的波浪线</p>\n<p><strong>21.</strong> <code>-webkit-appearance: none</code><br><strong>解释：</strong>清除浏览器的默认样式  </p>\n<p><strong>22.</strong> <code>&lt;input type=&quot;search&quot;&gt;</code><br><strong>*解释：</strong>使用<code>&lt;input type=&quot;search&quot;&gt;</code>制作搜索框，当在手机上点击搜索框时会弹出一个软键盘，软键盘上的enter按钮会以搜索按钮的形式显示 </p>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/移动Web学习笔记/\">http://meishadevs.com/blog/移动Web学习笔记/</a>】</p>\n</blockquote>"},{"title":"常见的WebStrom使用技巧","date":"2017-03-02T16:00:00.000Z","_content":"\n自己平时总结的一些使用WebStrom的小方法与小技巧。\n<!--more-->\n\n- **标签名 + Tab键**可以快速输入一个标签 例如：div + Tab键可以快速输入：`<div></div>`\n\n\n- **选中代码**按下 **Ctrl + D** 可以同时实现复制和粘贴\n\n\n- 左手按住**Alt键**，右手按住**鼠标左键往下拉**可以选中下拉线上的内容\n\n\n- 在浏览器中打开调试窗口的快捷键**F12** 或者 **Ctrl + shift + i**\n\n\n- 在WebStrom中输入`div*10`并且按下**Tab键**可以一次性输入10个div\n\n\n- 在WebStrom中输入`div{item$}*10`并且按下**Tab键**可以一次性输入10个div并且div中的内容依次是item1、item2、item3….item10\n\n\n- 在WebStrom中输入`div.box$*3`并且按下**Tab键**，可以一次性输入3个div，并且div的类选择器名称依次是box1、box2、box3\n\n\n- 在WebStrom中输入`div#box$*3`并且按下**Tab键**，可以一次性输入3个div，并且div的id选择器名称依次是box1、box2、box3\n\n\n- 按住**Ctrl键**，并且按住**鼠标左键**，拖动鼠标，选中代码，松开鼠标左键后代码仍能处于被选中的状态，此时可以对代码做一系列的操作\n\n\n- **! + Tab键**快速输入HTML5框架代码\n\n\n- `html:5` + **Tab键**也可以快速输入HTML5框架代码\n\n\n- `html:xt` + **Tab键**可以快速输入HTML4框架代码\n\n\n- 查找的快捷键 **Ctrl + F**\n\n\n- 替换的快捷键 **Ctrl + R**  \n\n\n- 格式化代码的快捷键 **Ctrl + Alt + L**\n\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/常见的WebStrom使用技巧](http://meishadevs.com/blog/%E5%B8%B8%E8%A7%81%E7%9A%84WebStrom%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/)】","source":"_posts/常见的WebStrom使用技巧.md","raw":"---\ntitle: 常见的WebStrom使用技巧\ndate: 2017-03-03\ncategories:\n\t- WebStrom\ntags:\n    - WebStrom\n---\n\n自己平时总结的一些使用WebStrom的小方法与小技巧。\n<!--more-->\n\n- **标签名 + Tab键**可以快速输入一个标签 例如：div + Tab键可以快速输入：`<div></div>`\n\n\n- **选中代码**按下 **Ctrl + D** 可以同时实现复制和粘贴\n\n\n- 左手按住**Alt键**，右手按住**鼠标左键往下拉**可以选中下拉线上的内容\n\n\n- 在浏览器中打开调试窗口的快捷键**F12** 或者 **Ctrl + shift + i**\n\n\n- 在WebStrom中输入`div*10`并且按下**Tab键**可以一次性输入10个div\n\n\n- 在WebStrom中输入`div{item$}*10`并且按下**Tab键**可以一次性输入10个div并且div中的内容依次是item1、item2、item3….item10\n\n\n- 在WebStrom中输入`div.box$*3`并且按下**Tab键**，可以一次性输入3个div，并且div的类选择器名称依次是box1、box2、box3\n\n\n- 在WebStrom中输入`div#box$*3`并且按下**Tab键**，可以一次性输入3个div，并且div的id选择器名称依次是box1、box2、box3\n\n\n- 按住**Ctrl键**，并且按住**鼠标左键**，拖动鼠标，选中代码，松开鼠标左键后代码仍能处于被选中的状态，此时可以对代码做一系列的操作\n\n\n- **! + Tab键**快速输入HTML5框架代码\n\n\n- `html:5` + **Tab键**也可以快速输入HTML5框架代码\n\n\n- `html:xt` + **Tab键**可以快速输入HTML4框架代码\n\n\n- 查找的快捷键 **Ctrl + F**\n\n\n- 替换的快捷键 **Ctrl + R**  \n\n\n- 格式化代码的快捷键 **Ctrl + Alt + L**\n\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/常见的WebStrom使用技巧](http://meishadevs.com/blog/%E5%B8%B8%E8%A7%81%E7%9A%84WebStrom%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/)】","slug":"常见的WebStrom使用技巧","published":1,"updated":"2017-09-25T09:00:09.182Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpn5002938pxpdfl6szc","content":"<p>自己平时总结的一些使用WebStrom的小方法与小技巧。<br><a id=\"more\"></a></p>\n<ul>\n<li><strong>标签名 + Tab键</strong>可以快速输入一个标签 例如：div + Tab键可以快速输入：<code>&lt;div&gt;&lt;/div&gt;</code></li>\n</ul>\n<ul>\n<li><strong>选中代码</strong>按下 <strong>Ctrl + D</strong> 可以同时实现复制和粘贴</li>\n</ul>\n<ul>\n<li>左手按住<strong>Alt键</strong>，右手按住<strong>鼠标左键往下拉</strong>可以选中下拉线上的内容</li>\n</ul>\n<ul>\n<li>在浏览器中打开调试窗口的快捷键<strong>F12</strong> 或者 <strong>Ctrl + shift + i</strong></li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div*10</code>并且按下<strong>Tab键</strong>可以一次性输入10个div</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div{item$}*10</code>并且按下<strong>Tab键</strong>可以一次性输入10个div并且div中的内容依次是item1、item2、item3….item10</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div.box$*3</code>并且按下<strong>Tab键</strong>，可以一次性输入3个div，并且div的类选择器名称依次是box1、box2、box3</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div#box$*3</code>并且按下<strong>Tab键</strong>，可以一次性输入3个div，并且div的id选择器名称依次是box1、box2、box3</li>\n</ul>\n<ul>\n<li>按住<strong>Ctrl键</strong>，并且按住<strong>鼠标左键</strong>，拖动鼠标，选中代码，松开鼠标左键后代码仍能处于被选中的状态，此时可以对代码做一系列的操作</li>\n</ul>\n<ul>\n<li><strong>! + Tab键</strong>快速输入HTML5框架代码</li>\n</ul>\n<ul>\n<li><code>html:5</code> + <strong>Tab键</strong>也可以快速输入HTML5框架代码</li>\n</ul>\n<ul>\n<li><code>html:xt</code> + <strong>Tab键</strong>可以快速输入HTML4框架代码</li>\n</ul>\n<ul>\n<li>查找的快捷键 <strong>Ctrl + F</strong></li>\n</ul>\n<ul>\n<li>替换的快捷键 <strong>Ctrl + R</strong>  </li>\n</ul>\n<ul>\n<li>格式化代码的快捷键 <strong>Ctrl + Alt + L</strong></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E8%A7%81%E7%9A%84WebStrom%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/\">http://meishadevs.com/blog/常见的WebStrom使用技巧</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>自己平时总结的一些使用WebStrom的小方法与小技巧。<br>","more":"</p>\n<ul>\n<li><strong>标签名 + Tab键</strong>可以快速输入一个标签 例如：div + Tab键可以快速输入：<code>&lt;div&gt;&lt;/div&gt;</code></li>\n</ul>\n<ul>\n<li><strong>选中代码</strong>按下 <strong>Ctrl + D</strong> 可以同时实现复制和粘贴</li>\n</ul>\n<ul>\n<li>左手按住<strong>Alt键</strong>，右手按住<strong>鼠标左键往下拉</strong>可以选中下拉线上的内容</li>\n</ul>\n<ul>\n<li>在浏览器中打开调试窗口的快捷键<strong>F12</strong> 或者 <strong>Ctrl + shift + i</strong></li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div*10</code>并且按下<strong>Tab键</strong>可以一次性输入10个div</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div{item$}*10</code>并且按下<strong>Tab键</strong>可以一次性输入10个div并且div中的内容依次是item1、item2、item3….item10</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div.box$*3</code>并且按下<strong>Tab键</strong>，可以一次性输入3个div，并且div的类选择器名称依次是box1、box2、box3</li>\n</ul>\n<ul>\n<li>在WebStrom中输入<code>div#box$*3</code>并且按下<strong>Tab键</strong>，可以一次性输入3个div，并且div的id选择器名称依次是box1、box2、box3</li>\n</ul>\n<ul>\n<li>按住<strong>Ctrl键</strong>，并且按住<strong>鼠标左键</strong>，拖动鼠标，选中代码，松开鼠标左键后代码仍能处于被选中的状态，此时可以对代码做一系列的操作</li>\n</ul>\n<ul>\n<li><strong>! + Tab键</strong>快速输入HTML5框架代码</li>\n</ul>\n<ul>\n<li><code>html:5</code> + <strong>Tab键</strong>也可以快速输入HTML5框架代码</li>\n</ul>\n<ul>\n<li><code>html:xt</code> + <strong>Tab键</strong>可以快速输入HTML4框架代码</li>\n</ul>\n<ul>\n<li>查找的快捷键 <strong>Ctrl + F</strong></li>\n</ul>\n<ul>\n<li>替换的快捷键 <strong>Ctrl + R</strong>  </li>\n</ul>\n<ul>\n<li>格式化代码的快捷键 <strong>Ctrl + Alt + L</strong></li>\n</ul>\n<blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E8%A7%81%E7%9A%84WebStrom%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/\">http://meishadevs.com/blog/常见的WebStrom使用技巧</a>】</p>\n</blockquote>"},{"title":"常用的Git命令","date":"2017-04-29T02:18:01.000Z","_content":"\n整理的一些常用的Git命令\n<!--more-->\n\n#### 获得提交代码时的用户名\n\tgit config --global user.name\n\n#### 获得提交代码的邮箱\n\tgit config --global user.email\n\n#### 将提交代码的用户名设置为username\n\tgit config --global user.name username\n\n#### 将提交代码的邮箱设置为email\n\tgit config --global user.email email\n\n#### 查看本地分支\n\tgit branch\n\n#### 查看远程分支\n\tgit branch -r\n\n#### 删除本地分支，其中develop表示分支名称\n\tgit branch -d develop \n\n#### 强制删除本地分支，其中develop表示分支名称\n\tgit branch -D develop\n\n#### 删除远程分支方法1，其中develop表示远程分支名称\n\tgit push origin :develop\n\n#### 删除远程分支方法2，其中develop表示远程分支名称\n\tgit push origin --delete develop\n\n#### 切换到master分支\n\tgit checkout master \n\n#### 初始化一个本地Git仓库\n\tgit init\n\n####  查看本地仓库的状态\n\tgit status\n\n#### 将当前目录下的所有文件添加到暂存区\n\tgit add .\n\n#### 将本地暂存文件提交的本地仓库\n\tgit commit -m \"update some data\"\n\n#### 为本地仓库添加一个远程仓库\n\n\t# 添加一个远端地址并起了一个别名叫origin\n\tgit remote add origin https://github.com/username/reponame.git\n\n\n#### 查看所有的远程仓库\n\tgit remote -v\n\n#### 将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支\n\tgit push -u origin master\n\n#### 拉取远程仓库上的master分支上的数据到本地仓库\n\tgit pull origin master\n\n#### 回退到某次提交，其中`bbc272`表示提交的哈希值的前六位\n\tgit reset --hard bbc272\n\n#### 查看提交记录\n\tgit log\n\n#### 合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\n\tgit merge a\n\n#### 查看远程分支\n\tgit branch -r\n\n#### 查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动\n\tgit diff a.md\n\n#### 强行推送当前分支到远程仓库，即使有冲突\n\tgit push origin --force\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/常用的Git命令/](http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4/)】","source":"_posts/常用的Git命令.md","raw":"---\ntitle: 常用的Git命令\ncategories:\n  - Git\ntags:\n  - Git \ndate: 2017-04-29 10:18:01\n---\n\n整理的一些常用的Git命令\n<!--more-->\n\n#### 获得提交代码时的用户名\n\tgit config --global user.name\n\n#### 获得提交代码的邮箱\n\tgit config --global user.email\n\n#### 将提交代码的用户名设置为username\n\tgit config --global user.name username\n\n#### 将提交代码的邮箱设置为email\n\tgit config --global user.email email\n\n#### 查看本地分支\n\tgit branch\n\n#### 查看远程分支\n\tgit branch -r\n\n#### 删除本地分支，其中develop表示分支名称\n\tgit branch -d develop \n\n#### 强制删除本地分支，其中develop表示分支名称\n\tgit branch -D develop\n\n#### 删除远程分支方法1，其中develop表示远程分支名称\n\tgit push origin :develop\n\n#### 删除远程分支方法2，其中develop表示远程分支名称\n\tgit push origin --delete develop\n\n#### 切换到master分支\n\tgit checkout master \n\n#### 初始化一个本地Git仓库\n\tgit init\n\n####  查看本地仓库的状态\n\tgit status\n\n#### 将当前目录下的所有文件添加到暂存区\n\tgit add .\n\n#### 将本地暂存文件提交的本地仓库\n\tgit commit -m \"update some data\"\n\n#### 为本地仓库添加一个远程仓库\n\n\t# 添加一个远端地址并起了一个别名叫origin\n\tgit remote add origin https://github.com/username/reponame.git\n\n\n#### 查看所有的远程仓库\n\tgit remote -v\n\n#### 将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支\n\tgit push -u origin master\n\n#### 拉取远程仓库上的master分支上的数据到本地仓库\n\tgit pull origin master\n\n#### 回退到某次提交，其中`bbc272`表示提交的哈希值的前六位\n\tgit reset --hard bbc272\n\n#### 查看提交记录\n\tgit log\n\n#### 合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\n\tgit merge a\n\n#### 查看远程分支\n\tgit branch -r\n\n#### 查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动\n\tgit diff a.md\n\n#### 强行推送当前分支到远程仓库，即使有冲突\n\tgit push origin --force\n\n> meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。\n转载请注明： 【文章转载自meishadevs：[http://meishadevs.com/blog/常用的Git命令/](http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4/)】","slug":"常用的Git命令","published":1,"updated":"2017-09-13T08:10:47.597Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj82frpn9002d38px20bzr52p","content":"<p>整理的一些常用的Git命令<br><a id=\"more\"></a></p>\n<h4 id=\"获得提交代码时的用户名\"><a href=\"#获得提交代码时的用户名\" class=\"headerlink\" title=\"获得提交代码时的用户名\"></a>获得提交代码时的用户名</h4><pre><code>git config --global user.name\n</code></pre><h4 id=\"获得提交代码的邮箱\"><a href=\"#获得提交代码的邮箱\" class=\"headerlink\" title=\"获得提交代码的邮箱\"></a>获得提交代码的邮箱</h4><pre><code>git config --global user.email\n</code></pre><h4 id=\"将提交代码的用户名设置为username\"><a href=\"#将提交代码的用户名设置为username\" class=\"headerlink\" title=\"将提交代码的用户名设置为username\"></a>将提交代码的用户名设置为username</h4><pre><code>git config --global user.name username\n</code></pre><h4 id=\"将提交代码的邮箱设置为email\"><a href=\"#将提交代码的邮箱设置为email\" class=\"headerlink\" title=\"将提交代码的邮箱设置为email\"></a>将提交代码的邮箱设置为email</h4><pre><code>git config --global user.email email\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h4><pre><code>git branch -r\n</code></pre><h4 id=\"删除本地分支，其中develop表示分支名称\"><a href=\"#删除本地分支，其中develop表示分支名称\" class=\"headerlink\" title=\"删除本地分支，其中develop表示分支名称\"></a>删除本地分支，其中develop表示分支名称</h4><pre><code>git branch -d develop \n</code></pre><h4 id=\"强制删除本地分支，其中develop表示分支名称\"><a href=\"#强制删除本地分支，其中develop表示分支名称\" class=\"headerlink\" title=\"强制删除本地分支，其中develop表示分支名称\"></a>强制删除本地分支，其中develop表示分支名称</h4><pre><code>git branch -D develop\n</code></pre><h4 id=\"删除远程分支方法1，其中develop表示远程分支名称\"><a href=\"#删除远程分支方法1，其中develop表示远程分支名称\" class=\"headerlink\" title=\"删除远程分支方法1，其中develop表示远程分支名称\"></a>删除远程分支方法1，其中develop表示远程分支名称</h4><pre><code>git push origin :develop\n</code></pre><h4 id=\"删除远程分支方法2，其中develop表示远程分支名称\"><a href=\"#删除远程分支方法2，其中develop表示远程分支名称\" class=\"headerlink\" title=\"删除远程分支方法2，其中develop表示远程分支名称\"></a>删除远程分支方法2，其中develop表示远程分支名称</h4><pre><code>git push origin --delete develop\n</code></pre><h4 id=\"切换到master分支\"><a href=\"#切换到master分支\" class=\"headerlink\" title=\"切换到master分支\"></a>切换到master分支</h4><pre><code>git checkout master \n</code></pre><h4 id=\"初始化一个本地Git仓库\"><a href=\"#初始化一个本地Git仓库\" class=\"headerlink\" title=\"初始化一个本地Git仓库\"></a>初始化一个本地Git仓库</h4><pre><code>git init\n</code></pre><h4 id=\"查看本地仓库的状态\"><a href=\"#查看本地仓库的状态\" class=\"headerlink\" title=\"查看本地仓库的状态\"></a>查看本地仓库的状态</h4><pre><code>git status\n</code></pre><h4 id=\"将当前目录下的所有文件添加到暂存区\"><a href=\"#将当前目录下的所有文件添加到暂存区\" class=\"headerlink\" title=\"将当前目录下的所有文件添加到暂存区\"></a>将当前目录下的所有文件添加到暂存区</h4><pre><code>git add .\n</code></pre><h4 id=\"将本地暂存文件提交的本地仓库\"><a href=\"#将本地暂存文件提交的本地仓库\" class=\"headerlink\" title=\"将本地暂存文件提交的本地仓库\"></a>将本地暂存文件提交的本地仓库</h4><pre><code>git commit -m &quot;update some data&quot;\n</code></pre><h4 id=\"为本地仓库添加一个远程仓库\"><a href=\"#为本地仓库添加一个远程仓库\" class=\"headerlink\" title=\"为本地仓库添加一个远程仓库\"></a>为本地仓库添加一个远程仓库</h4><pre><code># 添加一个远端地址并起了一个别名叫origin\ngit remote add origin https://github.com/username/reponame.git\n</code></pre><h4 id=\"查看所有的远程仓库\"><a href=\"#查看所有的远程仓库\" class=\"headerlink\" title=\"查看所有的远程仓库\"></a>查看所有的远程仓库</h4><pre><code>git remote -v\n</code></pre><h4 id=\"将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支\"><a href=\"#将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支\" class=\"headerlink\" title=\"将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支\"></a>将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支</h4><pre><code>git push -u origin master\n</code></pre><h4 id=\"拉取远程仓库上的master分支上的数据到本地仓库\"><a href=\"#拉取远程仓库上的master分支上的数据到本地仓库\" class=\"headerlink\" title=\"拉取远程仓库上的master分支上的数据到本地仓库\"></a>拉取远程仓库上的master分支上的数据到本地仓库</h4><pre><code>git pull origin master\n</code></pre><h4 id=\"回退到某次提交，其中bbc272表示提交的哈希值的前六位\"><a href=\"#回退到某次提交，其中bbc272表示提交的哈希值的前六位\" class=\"headerlink\" title=\"回退到某次提交，其中bbc272表示提交的哈希值的前六位\"></a>回退到某次提交，其中<code>bbc272</code>表示提交的哈希值的前六位</h4><pre><code>git reset --hard bbc272\n</code></pre><h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><pre><code>git log\n</code></pre><h4 id=\"合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\"><a href=\"#合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\" class=\"headerlink\" title=\"合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\"></a>合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令</h4><pre><code>git merge a\n</code></pre><h4 id=\"查看远程分支-1\"><a href=\"#查看远程分支-1\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h4><pre><code>git branch -r\n</code></pre><h4 id=\"查看代码改动，例如执行下面的Git命令可以查看a-md中代码做了哪些改动\"><a href=\"#查看代码改动，例如执行下面的Git命令可以查看a-md中代码做了哪些改动\" class=\"headerlink\" title=\"查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动\"></a>查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动</h4><pre><code>git diff a.md\n</code></pre><h4 id=\"强行推送当前分支到远程仓库，即使有冲突\"><a href=\"#强行推送当前分支到远程仓库，即使有冲突\" class=\"headerlink\" title=\"强行推送当前分支到远程仓库，即使有冲突\"></a>强行推送当前分支到远程仓库，即使有冲突</h4><pre><code>git push origin --force\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4/\">http://meishadevs.com/blog/常用的Git命令/</a>】</p>\n</blockquote>\n","site":{"data":{"link":{"social":{"weibo":"http://weibo.com/u/3170066893?is_all=1","github":"https://github.com/meishadevs","rss":"/atom.xml"},"extern":{"林寿山的技术博客":"http://raytaylorlin.com/","张鑫旭的个人主页":"http://www.zhangxinxu.com/","阮一峰的网络日志":"http://www.ruanyifeng.com/blog/","知乎":"https://www.zhihu.com/","小小沧海的技术博客":"http://www.cnblogs.com/xxcanghai/","菜鸟教程":"http://www.runoob.com/","W3C":"http://www.w3school.com.cn/","MDN":"https://developer.mozilla.org/zh-CN/","W3CPlus":"http://www.w3cplus.com/"}},"hint":{"new":{"selector":[".menu-reading",".menu-about"]}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"达芬奇密码","cover":"https://img3.doubanio.com/lpic/s27289680.jpg","review":"史实与悬疑、艺术与惊悚……天衣无缝的雅俗融合，难觅破绽的情节营造，欲罢不能的阅读快感！午夜，卢浮宫博物馆年迈的馆长被人杀害在大陈列馆的镶木地板上。在人生的最后时刻，馆长脱光了衣服，明白无误地用自己的身体摆成了达·芬奇名画《维特鲁维人》的样子，还在尸体旁边留下了一个令人难以捉摸的密码。符号学专家罗伯特·兰登与密码破译天才索菲·奈芙，在对一大堆怪异的密码进行整理的过程当中，发现一连串的线索竟然隐藏在达·芬奇的艺术作品当中!兰登猛然领悟到，馆长其实是郇山隐修会的成员——这是一个成立于1099年的秘密组织，其成员包括西方历史上诸多伟人，如：牛顿、波提切利、维克多·雨果，以及达·芬奇!兰登怀疑他们是在找寻一个石破天惊的历史秘密，一个既能给人启迪又异常危险的秘密。兰登与奈芙跟一位神秘的幕后操纵者展开了斗智斗勇的角逐，足迹遍及巴黎、伦敦，不断遭人追杀。除非他们能够解开这个错综复杂的谜，否则，郇山隐修会掩盖的秘密，里面隐藏的那个令人震惊的古老真相，将永远消逝在历史的尘埃之中。","score":8.6,"doubanLink":"https://book.douban.com/subject/3649782/"},{"title":"漫画电学原理","cover":"https://img3.doubanio.com/lpic/s4366042.jpg","review":"有趣的故事情节、时尚的漫画人物形象、细致的内容讲解定能给你留下深刻的印象，让你看过不忘。无论你是学生、上班族或是已拥有一家属于自己的公司，活学活用电学知识肯定能为你的学习与生活增添更多的便利。","score":8.3,"doubanLink":"https://book.douban.com/subject/4829563/"}],"reading":[{"title":"JavaScript权威指南","cover":"https://img3.doubanio.com/lpic/s5860151.jpg","review":"《JavaScript权威指南(第5版)》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南(第5版)》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。","score":8.9,"doubanLink":"https://book.douban.com/subject/2228378/"},{"title":"JavaScript高级程序设计（第3版）","cover":"https://img3.doubanio.com/lpic/s8958650.jpg","review":"本书是JavaScript 超级畅销书的最新版。ECMAScript 5 和HTML5 在标准之争中双双胜出，使大量专有实现和客户端扩展正式进入规范，同时也为JavaScript 增添了很多适应未来发展的新特性。本书这一版除增加5 章全新内容外，其他章节也有较大幅度的增补和修订，新内容篇幅约占三分之一。全书从JavaScript 语言实现的各个组成部分——语言核心、DOM、BOM、事件模型讲起，深入浅出地探讨了面向对象编程、Ajax 与Comet 服务器端通信，HTML5 表单、媒体、Canvas（包括WebGL）及Web Workers、地理定位、跨文档传递消息、客户端存储（包括IndexedDB）等新API，还介绍了离线应用和与维护、性能、部署相关的最佳开发实践。本书附录展望了未来的API 和ECMAScript Harmony 规范。本书适合有一定编程经验的Web 应用开发人员阅读，也可作为高校及社会实用技术培训相关专业课程的教材。","score":9.3,"doubanLink":"https://book.douban.com/subject/10546125/"}],"wanted":[{"title":"JavaScript模式","cover":"https://img1.doubanio.com/lpic/s11337059.jpg","review":"《JavaScript模式》包含了实现每个讨论的模式的实践建议，并附有数个可以立即上手的范例。同时还可以学到一些反模式，一些常见的编程方式，这些编程方式引发的问题比解决的还多。它不是一本入门级的书，而是适用于希望将自身的Javascript技巧提高到一个新层次的专业的开发人员和程序员。全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。","score":8.6,"doubanLink":"https://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"https://img3.doubanio.com/lpic/s27993864.jpg","review":"JavaScript 曾是“世界上最被误解的语言”，因为它担负太多的特性，包括糟糕的交互和失败的设计，但随着Ajax 的到来，JavaScript“从最受误解的编程语言演变为最流行的语言”，这除了幸运之外，也证明了它其实是一门优秀的语言。Douglas Crockford 在本书中剥开了JavaScript 沾污的外衣，抽离出一个具有更好可靠性、可读性和可维护性的JavaScript 子集，让你看到一门优雅的、轻量级的和非常富有表现力的语言。作者从语法、对象、函数、继承、数组、正则表达式、方法、样式和优美的特性这9 个方面来呈现这门语言真正的精华部分，通过它们完全可以构建出优雅高效的代码。作者还通过附录列出了这门语言的毒瘤和糟粕部分，且告诉你如何避免它们。最后还介绍了JSLint，通过它的检验，能有效地保障我们的代码品质。这是一本介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，并且需要反复阅读。学习、理解、实践大师的思想，我们才可能站在巨人的肩上，才有机会超越大师，这本书就是开始。","score":9.1,"doubanLink":"https://book.douban.com/subject/11874748/"}]}},"about":{"avatar":"http://oq3pg8pg4.bkt.clouddn.com/touxiang.jpg","name":"meishadevs","tag":"Web前端","desc":"Love coding love life !","skills":{"HTML":5,"CSS":4,"JavaScript":5,"CSS3":4,"HTML5":4,"jQuery":5,"Node.js":3,"Less":3,"Gulp":3,"Cocos2d-js":4},"projects":[{"name":"博雅互动首页项目","image":"http://oq3pg8pg4.bkt.clouddn.com/boyaa.png","tags":["2016年","网页"],"description":"以循序渐进的方式实现博雅互动首页效果，通过这个项目可以将很好的练习HTML、CSS、JavaScript、jQuery、Less和Gulp的使用","link_text":"GitHub地址","link":"https://github.com/meishadevs/boyaa"},{"name":"西游黄金矿工","image":"http://oq3pg8pg4.bkt.clouddn.com/goldminer.png","description":"个人使用Cocos2d-js制作的一款html5版的黄金矿工类游戏，游戏实现了场景选择、挖矿等功能","tags":["2016","html5游戏"],"link_text":"Github地址","link":"https://github.com/meishadevs/GoldMinerHtml5"},{"name":"慕课电商","image":"http://oq3pg8pg4.bkt.clouddn.com/dswz.png","description":"慕课电商是一个简易版的电商网站，整个网站由网站首页、商品分类页、注册页、登录页、商品信息展示页、商品筛选页、购物车及结算页组成。整个网站包含了关键字搜索、图片轮播、分类菜单切换、商品筛选、商品简介、商品咨询、省市区三级联动、放大镜、注册、登录等功能","tags":["2017","网站"],"link_text":"Github地址","link":"https://github.com/meishadevs/ImoocDSWZ"}],"reward":["http://oq3pg8pg4.bkt.clouddn.com/weixin.png","http://oq3pg8pg4.bkt.clouddn.com/zhifubao.png"]},"slider":[{"image":"http://oq3pg8pg4.bkt.clouddn.com/sea.jpg","align":"center","title":"面朝大海 春暖花开","subtitle":"从明天起，做一个幸福的人，喂马，劈柴，周游世界。从明天起，关心粮食和蔬菜。我希望有一所房子，面朝大海，春暖花开。","link":"/"},{"image":"http://oq3pg8pg4.bkt.clouddn.com/surfing.jpg","align":"center","title":"勇气是控制恐惧心理，而不是心里毫无恐惧","subtitle":"","link":null}]}},"excerpt":"<p>整理的一些常用的Git命令<br>","more":"</p>\n<h4 id=\"获得提交代码时的用户名\"><a href=\"#获得提交代码时的用户名\" class=\"headerlink\" title=\"获得提交代码时的用户名\"></a>获得提交代码时的用户名</h4><pre><code>git config --global user.name\n</code></pre><h4 id=\"获得提交代码的邮箱\"><a href=\"#获得提交代码的邮箱\" class=\"headerlink\" title=\"获得提交代码的邮箱\"></a>获得提交代码的邮箱</h4><pre><code>git config --global user.email\n</code></pre><h4 id=\"将提交代码的用户名设置为username\"><a href=\"#将提交代码的用户名设置为username\" class=\"headerlink\" title=\"将提交代码的用户名设置为username\"></a>将提交代码的用户名设置为username</h4><pre><code>git config --global user.name username\n</code></pre><h4 id=\"将提交代码的邮箱设置为email\"><a href=\"#将提交代码的邮箱设置为email\" class=\"headerlink\" title=\"将提交代码的邮箱设置为email\"></a>将提交代码的邮箱设置为email</h4><pre><code>git config --global user.email email\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h4><pre><code>git branch -r\n</code></pre><h4 id=\"删除本地分支，其中develop表示分支名称\"><a href=\"#删除本地分支，其中develop表示分支名称\" class=\"headerlink\" title=\"删除本地分支，其中develop表示分支名称\"></a>删除本地分支，其中develop表示分支名称</h4><pre><code>git branch -d develop \n</code></pre><h4 id=\"强制删除本地分支，其中develop表示分支名称\"><a href=\"#强制删除本地分支，其中develop表示分支名称\" class=\"headerlink\" title=\"强制删除本地分支，其中develop表示分支名称\"></a>强制删除本地分支，其中develop表示分支名称</h4><pre><code>git branch -D develop\n</code></pre><h4 id=\"删除远程分支方法1，其中develop表示远程分支名称\"><a href=\"#删除远程分支方法1，其中develop表示远程分支名称\" class=\"headerlink\" title=\"删除远程分支方法1，其中develop表示远程分支名称\"></a>删除远程分支方法1，其中develop表示远程分支名称</h4><pre><code>git push origin :develop\n</code></pre><h4 id=\"删除远程分支方法2，其中develop表示远程分支名称\"><a href=\"#删除远程分支方法2，其中develop表示远程分支名称\" class=\"headerlink\" title=\"删除远程分支方法2，其中develop表示远程分支名称\"></a>删除远程分支方法2，其中develop表示远程分支名称</h4><pre><code>git push origin --delete develop\n</code></pre><h4 id=\"切换到master分支\"><a href=\"#切换到master分支\" class=\"headerlink\" title=\"切换到master分支\"></a>切换到master分支</h4><pre><code>git checkout master \n</code></pre><h4 id=\"初始化一个本地Git仓库\"><a href=\"#初始化一个本地Git仓库\" class=\"headerlink\" title=\"初始化一个本地Git仓库\"></a>初始化一个本地Git仓库</h4><pre><code>git init\n</code></pre><h4 id=\"查看本地仓库的状态\"><a href=\"#查看本地仓库的状态\" class=\"headerlink\" title=\"查看本地仓库的状态\"></a>查看本地仓库的状态</h4><pre><code>git status\n</code></pre><h4 id=\"将当前目录下的所有文件添加到暂存区\"><a href=\"#将当前目录下的所有文件添加到暂存区\" class=\"headerlink\" title=\"将当前目录下的所有文件添加到暂存区\"></a>将当前目录下的所有文件添加到暂存区</h4><pre><code>git add .\n</code></pre><h4 id=\"将本地暂存文件提交的本地仓库\"><a href=\"#将本地暂存文件提交的本地仓库\" class=\"headerlink\" title=\"将本地暂存文件提交的本地仓库\"></a>将本地暂存文件提交的本地仓库</h4><pre><code>git commit -m &quot;update some data&quot;\n</code></pre><h4 id=\"为本地仓库添加一个远程仓库\"><a href=\"#为本地仓库添加一个远程仓库\" class=\"headerlink\" title=\"为本地仓库添加一个远程仓库\"></a>为本地仓库添加一个远程仓库</h4><pre><code># 添加一个远端地址并起了一个别名叫origin\ngit remote add origin https://github.com/username/reponame.git\n</code></pre><h4 id=\"查看所有的远程仓库\"><a href=\"#查看所有的远程仓库\" class=\"headerlink\" title=\"查看所有的远程仓库\"></a>查看所有的远程仓库</h4><pre><code>git remote -v\n</code></pre><h4 id=\"将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支\"><a href=\"#将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支\" class=\"headerlink\" title=\"将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支\"></a>将本地仓库中master分支上的数据推送到远程仓库的master分支上，如果远程仓库中没有master分支，会在远程创库中自动创建一个master分支</h4><pre><code>git push -u origin master\n</code></pre><h4 id=\"拉取远程仓库上的master分支上的数据到本地仓库\"><a href=\"#拉取远程仓库上的master分支上的数据到本地仓库\" class=\"headerlink\" title=\"拉取远程仓库上的master分支上的数据到本地仓库\"></a>拉取远程仓库上的master分支上的数据到本地仓库</h4><pre><code>git pull origin master\n</code></pre><h4 id=\"回退到某次提交，其中bbc272表示提交的哈希值的前六位\"><a href=\"#回退到某次提交，其中bbc272表示提交的哈希值的前六位\" class=\"headerlink\" title=\"回退到某次提交，其中bbc272表示提交的哈希值的前六位\"></a>回退到某次提交，其中<code>bbc272</code>表示提交的哈希值的前六位</h4><pre><code>git reset --hard bbc272\n</code></pre><h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><pre><code>git log\n</code></pre><h4 id=\"合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\"><a href=\"#合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\" class=\"headerlink\" title=\"合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令\"></a>合并分支，例如将a分支上的代码合并到master分支上，首先切换到master分支，然后执行下面的命令</h4><pre><code>git merge a\n</code></pre><h4 id=\"查看远程分支-1\"><a href=\"#查看远程分支-1\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h4><pre><code>git branch -r\n</code></pre><h4 id=\"查看代码改动，例如执行下面的Git命令可以查看a-md中代码做了哪些改动\"><a href=\"#查看代码改动，例如执行下面的Git命令可以查看a-md中代码做了哪些改动\" class=\"headerlink\" title=\"查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动\"></a>查看代码改动，例如执行下面的Git命令可以查看a.md中代码做了哪些改动</h4><pre><code>git diff a.md\n</code></pre><h4 id=\"强行推送当前分支到远程仓库，即使有冲突\"><a href=\"#强行推送当前分支到远程仓库，即使有冲突\" class=\"headerlink\" title=\"强行推送当前分支到远程仓库，即使有冲突\"></a>强行推送当前分支到远程仓库，即使有冲突</h4><pre><code>git push origin --force\n</code></pre><blockquote>\n<p>meishadevs欢迎任何形式的转载，但请务必注明出处，尊重他人劳动成果。<br>转载请注明： 【文章转载自meishadevs：<a href=\"http://meishadevs.com/blog/%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4/\">http://meishadevs.com/blog/常用的Git命令/</a>】</p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj82frpiw000038px6j6xf9rx","category_id":"cj82frpjj000438pxo95vgw24","_id":"cj82frpka000c38px5zjf0w0t"},{"post_id":"cj82frpjc000238pxpcl6gswp","category_id":"cj82frpk4000938px0129n47l","_id":"cj82frpkl000j38px0mc2vuoy"},{"post_id":"cj82frpjs000638pxk5nacqam","category_id":"cj82frpjj000438pxo95vgw24","_id":"cj82frpks000o38pxu2sq6olp"},{"post_id":"cj82frpkg000g38pxou4g0wy0","category_id":"cj82frpl5001038px1s8fyekd","_id":"cj82frpl9001538pxfjp8zzly"},{"post_id":"cj82frpkp000n38pxmfrn3tpn","category_id":"cj82frpla001738pxxkpowknn","_id":"cj82frplm001c38pxdpg4txc6"},{"post_id":"cj82frpjv000738pxd3a6qqyo","category_id":"cj82frpkn000l38pxl5qhbazf","_id":"cj82frplo001f38pxbxo9g23c"},{"post_id":"cj82frpjv000738pxd3a6qqyo","category_id":"cj82frplh001938pxuox9425m","_id":"cj82frplq001i38px6ru0gk05"},{"post_id":"cj82frpjy000838pxemzgypmp","category_id":"cj82frpku000p38pxnzxm4ucc","_id":"cj82frpls001l38px6q4dvt7j"},{"post_id":"cj82frpjy000838pxemzgypmp","category_id":"cj82frplo001e38pxap4icytp","_id":"cj82frplu001o38px63uzq2k0"},{"post_id":"cj82frpk7000b38pxosj116rs","category_id":"cj82frpkz000t38px71pv59o9","_id":"cj82frplv001p38pxe1pid5z9"},{"post_id":"cj82frpk7000b38pxosj116rs","category_id":"cj82frplp001h38pxfbz3r24w","_id":"cj82frplx001s38pxcpm2s3vs"},{"post_id":"cj82frpka000d38pxetectt1h","category_id":"cj82frpl1000v38px86g99aqu","_id":"cj82frplz001v38pxedfwe84a"},{"post_id":"cj82frpka000d38pxetectt1h","category_id":"cj82frplt001n38pxu4d6e9ww","_id":"cj82frpm3001x38pxib3c3pct"},{"post_id":"cj82frpkj000i38px4al1yn1c","category_id":"cj82frpl7001238pxtxxz2qtw","_id":"cj82frpm4001z38pxtjoaq3k1"},{"post_id":"cj82frpkj000i38px4al1yn1c","category_id":"cj82frplw001r38pxua9om5y4","_id":"cj82frpm5002138px8ltcem05"},{"post_id":"cj82frpmx002638pxyrjw89yn","category_id":"cj82frpl5001038px1s8fyekd","_id":"cj82frpn9002c38pxag9sql34"},{"post_id":"cj82frpmz002738pxmka31lkf","category_id":"cj82frpn8002a38pxn1lkykei","_id":"cj82frpng002h38pxz0d8wksv"},{"post_id":"cj82frpn5002938pxpdfl6szc","category_id":"cj82frpnd002e38px8wepzhhk","_id":"cj82frpnk002l38pxbweit8ot"},{"post_id":"cj82frpn9002d38px20bzr52p","category_id":"cj82frpng002i38px62c0n7s9","_id":"cj82frpnm002n38px6v1onr0g"}],"PostTag":[{"post_id":"cj82frpiw000038px6j6xf9rx","tag_id":"cj82frpjq000538pxuj5a1q2y","_id":"cj82frpki000h38pxcikzmrq8"},{"post_id":"cj82frpiw000038px6j6xf9rx","tag_id":"cj82frpk5000a38pxvdhnzt8h","_id":"cj82frpkl000k38pxy17wezi2"},{"post_id":"cj82frpjc000238pxpcl6gswp","tag_id":"cj82frpke000f38pxvthwgh8v","_id":"cj82frpky000r38pxa2ueiix3"},{"post_id":"cj82frpjc000238pxpcl6gswp","tag_id":"cj82frpko000m38pxlbfldxd6","_id":"cj82frpkz000s38px2n2revbg"},{"post_id":"cj82frpjs000638pxk5nacqam","tag_id":"cj82frpjq000538pxuj5a1q2y","_id":"cj82frpl3000x38pxti2qznhr"},{"post_id":"cj82frpjs000638pxk5nacqam","tag_id":"cj82frpl0000u38pxs41wxhkx","_id":"cj82frpl4000y38pxlaloaqzl"},{"post_id":"cj82frpjv000738pxd3a6qqyo","tag_id":"cj82frpko000m38pxlbfldxd6","_id":"cj82frpl8001338pxw7yvgqtn"},{"post_id":"cj82frpjv000738pxd3a6qqyo","tag_id":"cj82frpl4000z38pxs2ioe2m9","_id":"cj82frpl9001438pxg5q45dqd"},{"post_id":"cj82frpjy000838pxemzgypmp","tag_id":"cj82frpl6001138pxg6850ea1","_id":"cj82frplj001a38pxhw2qspwl"},{"post_id":"cj82frpjy000838pxemzgypmp","tag_id":"cj82frpl9001638pxq0ohgf82","_id":"cj82frplm001b38px7ynehmb3"},{"post_id":"cj82frpk7000b38pxosj116rs","tag_id":"cj82frplg001838pxgmwkx38j","_id":"cj82frplq001j38pxpv56i63w"},{"post_id":"cj82frpk7000b38pxosj116rs","tag_id":"cj82frpln001d38px49pb1llq","_id":"cj82frpls001k38pxlel3o7rw"},{"post_id":"cj82frpka000d38pxetectt1h","tag_id":"cj82frplp001g38pxp62xtd05","_id":"cj82frplx001t38px9qbxk2ic"},{"post_id":"cj82frpka000d38pxetectt1h","tag_id":"cj82frplt001m38pxywb4aany","_id":"cj82frply001u38pxr2v9opvi"},{"post_id":"cj82frpkg000g38pxou4g0wy0","tag_id":"cj82frplw001q38pxewne9mwb","_id":"cj82frpm3001y38pxvbgo996v"},{"post_id":"cj82frpkj000i38px4al1yn1c","tag_id":"cj82frplz001w38px8aiz193b","_id":"cj82frpm6002338pxvp8szjrr"},{"post_id":"cj82frpkj000i38px4al1yn1c","tag_id":"cj82frpl4000z38pxs2ioe2m9","_id":"cj82frpm6002438pxwmprfat7"},{"post_id":"cj82frpkp000n38pxmfrn3tpn","tag_id":"cj82frpm5002238pxxoqv9gyg","_id":"cj82frpm7002538pxr5b7zng2"},{"post_id":"cj82frpmx002638pxyrjw89yn","tag_id":"cj82frplw001q38pxewne9mwb","_id":"cj82frpn4002838pxo8gutklc"},{"post_id":"cj82frpmz002738pxmka31lkf","tag_id":"cj82frpn8002b38pxcynfo8vk","_id":"cj82frpnf002g38px72t8sxrv"},{"post_id":"cj82frpn5002938pxpdfl6szc","tag_id":"cj82frpnf002f38pxdz5pra24","_id":"cj82frpnh002k38pxlypgywy5"},{"post_id":"cj82frpn9002d38px20bzr52p","tag_id":"cj82frpnh002j38px14k944z1","_id":"cj82frpnl002m38pxn6ozirnz"}],"Tag":[{"name":"切图","_id":"cj82frpjq000538pxuj5a1q2y"},{"name":"Photoshop","_id":"cj82frpk5000a38pxvdhnzt8h"},{"name":"读书笔记","_id":"cj82frpke000f38pxvthwgh8v"},{"name":"JavaScript","_id":"cj82frpko000m38pxlbfldxd6"},{"name":"Fireworks","_id":"cj82frpl0000u38pxs41wxhkx"},{"name":"兼容","_id":"cj82frpl4000z38pxs2ioe2m9"},{"name":"预处理CSS","_id":"cj82frpl6001138pxg6850ea1"},{"name":"Less","_id":"cj82frpl9001638pxq0ohgf82"},{"name":"Gulp","_id":"cj82frplg001838pxgmwkx38j"},{"name":"前端自动化","_id":"cj82frpln001d38px49pb1llq"},{"name":"NVM","_id":"cj82frplp001g38pxp62xtd05"},{"name":"Node.js","_id":"cj82frplt001m38pxywb4aany"},{"name":"部署","_id":"cj82frplw001q38pxewne9mwb"},{"name":"CSS","_id":"cj82frplz001w38px8aiz193b"},{"name":"前端","_id":"cj82frpm5002238pxxoqv9gyg"},{"name":"移动Web","_id":"cj82frpn8002b38pxcynfo8vk"},{"name":"WebStrom","_id":"cj82frpnf002f38pxdz5pra24"},{"name":"Git","_id":"cj82frpnh002j38px14k944z1"}]}}